"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const Module = require('module');
const global_1 = __importDefault(require("./global"));
if (!global.locals) {
    new global_1.default().patch();
}
class LocalPatcher {
    constructor() {
        this.parent = module.parent;
    }
    export(request, variable, name = variable) {
        const filename = this.resolveFilename(request);
        global.locals.export(filename, variable, name);
        delete require.cache[filename];
    }
    unexport(request, variable = null, name = variable) {
        const filename = this.resolveFilename(request);
        global.locals.unexport(filename, variable, name);
    }
    resolveFilename(request) {
        if (path_1.default.isAbsolute(request) && fs_1.default.existsSync(request))
            return request;
        return Module._resolveFilename(request, this.parent, false);
    }
}
module.exports = new LocalPatcher();
delete require.cache[__filename];
