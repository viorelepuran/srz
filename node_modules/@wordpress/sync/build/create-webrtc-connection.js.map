{"version":3,"names":["_webrtcHttpStreamSignaling","require","createWebRTCConnection","signaling","password","objectId","objectType","doc","roomName","WebrtcProviderWithHttpSignaling","Promise","resolve"],"sources":["@wordpress/sync/src/create-webrtc-connection.js"],"sourcesContent":["/**\n * External dependencies\n */\n// import { WebrtcProvider } from 'y-webrtc';\n\n/**\n * Internal dependencies\n */\nimport { WebrtcProviderWithHttpSignaling } from './webrtc-http-stream-signaling';\n\n/** @typedef {import('./types').ObjectType} ObjectType */\n/** @typedef {import('./types').ObjectID} ObjectID */\n/** @typedef {import('./types').CRDTDoc} CRDTDoc */\n\n/**\n * Function that creates a new WebRTC Connection.\n *\n * @param {Object}        config           The object ID.\n *\n * @param {Array<string>} config.signaling\n * @param {string}        config.password\n * @return {Function} Promise that resolves when the connection is established.\n */\nexport function createWebRTCConnection( { signaling, password } ) {\n\treturn function (\n\t\t/** @type {string} */ objectId,\n\t\t/** @type {string} */ objectType,\n\t\t/** @type {import(\"yjs\").Doc} */ doc\n\t) {\n\t\tconst roomName = `${ objectType }-${ objectId }`;\n\t\tnew WebrtcProviderWithHttpSignaling( roomName, doc, {\n\t\t\tsignaling,\n\t\t\t// @ts-ignore\n\t\t\tpassword,\n\t\t} );\n\n\t\treturn Promise.resolve( () => true );\n\t};\n}\n"],"mappings":";;;;;;AAQA,IAAAA,0BAAA,GAAAC,OAAA;AARA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAsBA,CAAE;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAG;EACjE,OAAO,UACN,qBAAsBC,QAAQ,EAC9B,qBAAsBC,UAAU,EAChC,gCAAiCC,GAAG,EACnC;IACD,MAAMC,QAAQ,GAAG,GAAIF,UAAU,IAAMD,QAAQ,EAAG;IAChD,IAAII,0DAA+B,CAAED,QAAQ,EAAED,GAAG,EAAE;MACnDJ,SAAS;MACT;MACAC;IACD,CAAE,CAAC;IAEH,OAAOM,OAAO,CAACC,OAAO,CAAE,MAAM,IAAK,CAAC;EACrC,CAAC;AACF","ignoreList":[]}