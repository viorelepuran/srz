"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _components = require("@wordpress/components");
var _icons = require("@wordpress/icons");
var _compose = require("@wordpress/compose");
var _data = require("@wordpress/data");
var _element = require("@wordpress/element");
var _notices = require("@wordpress/notices");
var _url = require("@wordpress/url");
var _i18n = require("@wordpress/i18n");
var _utils = require("./utils");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const SlugEdit = ({
  field,
  onChange,
  data
}) => {
  const {
    id
  } = field;
  const slug = field.getValue({
    item: data
  }) || (0, _utils.getSlug)(data);
  const permalinkTemplate = data.permalink_template || '';
  const PERMALINK_POSTNAME_REGEX = /%(?:postname|pagename)%/;
  const [prefix, suffix] = permalinkTemplate.split(PERMALINK_POSTNAME_REGEX);
  const permalinkPrefix = prefix;
  const permalinkSuffix = suffix;
  const isEditable = PERMALINK_POSTNAME_REGEX.test(permalinkTemplate);
  const originalSlugRef = (0, _element.useRef)(slug);
  const slugToDisplay = slug || originalSlugRef.current;
  const permalink = isEditable ? `${permalinkPrefix}${slugToDisplay}${permalinkSuffix}` : (0, _url.safeDecodeURIComponent)(data.link || '');
  (0, _element.useEffect)(() => {
    if (slug && originalSlugRef.current === undefined) {
      originalSlugRef.current = slug;
    }
  }, [slug]);
  const onChangeControl = (0, _element.useCallback)(newValue => onChange({
    [id]: newValue
  }), [id, onChange]);
  const {
    createNotice
  } = (0, _data.useDispatch)(_notices.store);
  const copyButtonRef = (0, _compose.useCopyToClipboard)(permalink, () => {
    createNotice('info', (0, _i18n.__)('Copied Permalink to clipboard.'), {
      isDismissible: true,
      type: 'snackbar'
    });
  });
  const postUrlSlugDescriptionId = 'editor-post-url__slug-description-' + (0, _compose.useInstanceId)(SlugEdit);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("fieldset", {
    className: "fields-controls__slug",
    children: [isEditable && /*#__PURE__*/(0, _jsxRuntime.jsxs)(_components.__experimentalVStack, {
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(_components.__experimentalVStack, {
        spacing: "0px",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          children: (0, _i18n.__)('Customize the last part of the Permalink.')
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.ExternalLink, {
          href: "https://wordpress.org/documentation/article/page-post-settings-sidebar/#permalink",
          children: (0, _i18n.__)('Learn more')
        })]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.__experimentalInputControl, {
        __next40pxDefaultSize: true,
        prefix: /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.__experimentalInputControlPrefixWrapper, {
          children: "/"
        }),
        suffix: /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.Button, {
          __next40pxDefaultSize: true,
          icon: _icons.copySmall,
          ref: copyButtonRef,
          label: (0, _i18n.__)('Copy')
        }),
        label: (0, _i18n.__)('Link'),
        hideLabelFromVision: true,
        value: slug,
        autoComplete: "off",
        spellCheck: "false",
        type: "text",
        className: "fields-controls__slug-input",
        onChange: newValue => {
          onChangeControl(newValue);
        },
        onBlur: () => {
          if (slug === '') {
            onChangeControl(originalSlugRef.current);
          }
        },
        "aria-describedby": postUrlSlugDescriptionId
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "fields-controls__slug-help",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          className: "fields-controls__slug-help-visual-label",
          children: (0, _i18n.__)('Permalink:')
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(_components.ExternalLink, {
          className: "fields-controls__slug-help-link",
          href: permalink,
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "fields-controls__slug-help-prefix",
            children: permalinkPrefix
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "fields-controls__slug-help-slug",
            children: slugToDisplay
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
            className: "fields-controls__slug-help-suffix",
            children: permalinkSuffix
          })]
        })]
      })]
    }), !isEditable && /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.ExternalLink, {
      className: "fields-controls__slug-help",
      href: permalink,
      children: permalink
    })]
  });
};
var _default = exports.default = SlugEdit;
//# sourceMappingURL=slug-edit.js.map