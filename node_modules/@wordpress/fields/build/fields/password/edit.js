"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _components = require("@wordpress/components");
var _element = require("@wordpress/element");
var _i18n = require("@wordpress/i18n");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function PasswordEdit({
  data,
  onChange,
  field
}) {
  const [showPassword, setShowPassword] = (0, _element.useState)(!!field.getValue({
    item: data
  }));
  const handleTogglePassword = value => {
    setShowPassword(value);
    if (!value) {
      onChange({
        password: ''
      });
    }
  };
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_components.__experimentalVStack, {
    as: "fieldset",
    spacing: 4,
    className: "fields-controls__password",
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_components.CheckboxControl, {
      __nextHasNoMarginBottom: true,
      label: (0, _i18n.__)('Password protected'),
      help: (0, _i18n.__)('Only visible to those who know the password'),
      checked: showPassword,
      onChange: handleTogglePassword
    }), showPassword && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "fields-controls__password-input",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.TextControl, {
        label: (0, _i18n.__)('Password'),
        onChange: value => onChange({
          password: value
        }),
        value: field.getValue({
          item: data
        }) || '',
        placeholder: (0, _i18n.__)('Use a secure password'),
        type: "text",
        __next40pxDefaultSize: true,
        __nextHasNoMarginBottom: true,
        maxLength: 255
      })
    })]
  });
}
var _default = exports.default = PasswordEdit;
//# sourceMappingURL=edit.js.map