/**
 * WordPress dependencies
 */
import { Button, __experimentalGrid as Grid } from '@wordpress/components';
import { useSelect } from '@wordpress/data';
import { useCallback, useRef } from '@wordpress/element';
// @ts-ignore
import { MediaUpload } from '@wordpress/media-utils';
import { lineSolid } from '@wordpress/icons';
import { store as coreStore } from '@wordpress/core-data';
import { __ } from '@wordpress/i18n';

/**
 * Internal dependencies
 */
import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
export const FeaturedImageEdit = ({
  data,
  field,
  onChange
}) => {
  const {
    id
  } = field;
  const value = field.getValue({
    item: data
  });
  const media = useSelect(select => {
    const {
      getEntityRecord
    } = select(coreStore);
    return getEntityRecord('root', 'media', value);
  }, [value]);
  const onChangeControl = useCallback(newValue => onChange({
    [id]: newValue
  }), [id, onChange]);
  const url = media?.source_url;
  const title = media?.title?.rendered;
  const ref = useRef(null);
  return /*#__PURE__*/_jsx("fieldset", {
    className: "fields-controls__featured-image",
    children: /*#__PURE__*/_jsx("div", {
      className: "fields-controls__featured-image-container",
      children: /*#__PURE__*/_jsx(MediaUpload, {
        onSelect: selectedMedia => {
          onChangeControl(selectedMedia.id);
        },
        allowedTypes: ['image'],
        render: ({
          open
        }) => {
          return /*#__PURE__*/_jsx("div", {
            ref: ref,
            role: "button",
            tabIndex: -1,
            onClick: () => {
              open();
            },
            onKeyDown: open,
            children: /*#__PURE__*/_jsxs(Grid, {
              rowGap: 0,
              columnGap: 8,
              templateColumns: "24px 1fr 24px",
              children: [url && /*#__PURE__*/_jsxs(_Fragment, {
                children: [/*#__PURE__*/_jsx("img", {
                  className: "fields-controls__featured-image-image",
                  alt: "",
                  width: 24,
                  height: 24,
                  src: url
                }), /*#__PURE__*/_jsx("span", {
                  className: "fields-controls__featured-image-title",
                  children: title
                })]
              }), !url && /*#__PURE__*/_jsxs(_Fragment, {
                children: [/*#__PURE__*/_jsx("span", {
                  className: "fields-controls__featured-image-placeholder",
                  style: {
                    width: '24px',
                    height: '24px'
                  }
                }), /*#__PURE__*/_jsx("span", {
                  className: "fields-controls__featured-image-title",
                  children: __('Choose an imageâ€¦')
                })]
              }), url && /*#__PURE__*/_jsx(_Fragment, {
                children: /*#__PURE__*/_jsx(Button, {
                  size: "small",
                  className: "fields-controls__featured-image-remove-button",
                  icon: lineSolid,
                  onClick: event => {
                    event.stopPropagation();
                    onChangeControl(0);
                  }
                })
              })]
            })
          });
        }
      })
    })
  });
};
//# sourceMappingURL=featured-image-edit.js.map