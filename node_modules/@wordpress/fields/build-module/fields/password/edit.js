/**
 * WordPress dependencies
 */
import { CheckboxControl, __experimentalVStack as VStack, TextControl } from '@wordpress/components';
import { useState } from '@wordpress/element';
import { __ } from '@wordpress/i18n';

/**
 * Internal dependencies
 */
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
function PasswordEdit({
  data,
  onChange,
  field
}) {
  const [showPassword, setShowPassword] = useState(!!field.getValue({
    item: data
  }));
  const handleTogglePassword = value => {
    setShowPassword(value);
    if (!value) {
      onChange({
        password: ''
      });
    }
  };
  return /*#__PURE__*/_jsxs(VStack, {
    as: "fieldset",
    spacing: 4,
    className: "fields-controls__password",
    children: [/*#__PURE__*/_jsx(CheckboxControl, {
      __nextHasNoMarginBottom: true,
      label: __('Password protected'),
      help: __('Only visible to those who know the password'),
      checked: showPassword,
      onChange: handleTogglePassword
    }), showPassword && /*#__PURE__*/_jsx("div", {
      className: "fields-controls__password-input",
      children: /*#__PURE__*/_jsx(TextControl, {
        label: __('Password'),
        onChange: value => onChange({
          password: value
        }),
        value: field.getValue({
          item: data
        }) || '',
        placeholder: __('Use a secure password'),
        type: "text",
        __next40pxDefaultSize: true,
        __nextHasNoMarginBottom: true,
        maxLength: 255
      })
    })]
  });
}
export default PasswordEdit;
//# sourceMappingURL=edit.js.map