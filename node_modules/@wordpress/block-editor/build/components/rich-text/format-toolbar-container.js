"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _i18n = require("@wordpress/i18n");
var _components = require("@wordpress/components");
var _blockControls = _interopRequireDefault(require("../block-controls"));
var _formatToolbar = _interopRequireDefault(require("./format-toolbar"));
var _navigableToolbar = _interopRequireDefault(require("../navigable-toolbar"));
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function InlineToolbar({
  popoverAnchor
}) {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.Popover, {
    placement: "top",
    focusOnMount: false,
    anchor: popoverAnchor,
    className: "block-editor-rich-text__inline-format-toolbar",
    __unstableSlotName: "block-toolbar",
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_navigableToolbar.default, {
      className: "block-editor-rich-text__inline-format-toolbar-group"
      /* translators: accessibility text for the inline format toolbar */,
      "aria-label": (0, _i18n.__)('Format tools'),
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.ToolbarGroup, {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_formatToolbar.default, {})
      })
    })
  });
}
const FormatToolbarContainer = ({
  inline,
  editableContentElement
}) => {
  if (inline) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(InlineToolbar, {
      popoverAnchor: editableContentElement
    });
  }

  // Render regular toolbar.
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_blockControls.default, {
    group: "inline",
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_formatToolbar.default, {})
  });
};
var _default = exports.default = FormatToolbarContainer;
//# sourceMappingURL=format-toolbar-container.js.map