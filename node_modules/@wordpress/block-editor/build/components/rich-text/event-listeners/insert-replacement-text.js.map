{"version":3,"names":["_store","require","_default","props","element","onInput","event","inputType","registry","current","dispatch","blockEditorStore","__unstableMarkLastChangeAsPersistent","addEventListener","removeEventListener","exports","default"],"sources":["@wordpress/block-editor/src/components/rich-text/event-listeners/insert-replacement-text.js"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../../store';\n\n/**\n * When the browser is about to auto correct, add an undo level so the user can\n * revert the change.\n *\n * @param {Object} props\n */\nexport default ( props ) => ( element ) => {\n\tfunction onInput( event ) {\n\t\tif ( event.inputType !== 'insertReplacementText' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { registry } = props.current;\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.__unstableMarkLastChangeAsPersistent();\n\t}\n\n\telement.addEventListener( 'beforeinput', onInput );\n\treturn () => {\n\t\telement.removeEventListener( 'beforeinput', onInput );\n\t};\n};\n"],"mappings":";;;;;;AAGA,IAAAA,MAAA,GAAAC,OAAA;AAHA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA,IAAAC,QAAA,GAMiBC,KAAK,IAAQC,OAAO,IAAM;EAC1C,SAASC,OAAOA,CAAEC,KAAK,EAAG;IACzB,IAAKA,KAAK,CAACC,SAAS,KAAK,uBAAuB,EAAG;MAClD;IACD;IAEA,MAAM;MAAEC;IAAS,CAAC,GAAGL,KAAK,CAACM,OAAO;IAClCD,QAAQ,CACNE,QAAQ,CAAEC,YAAiB,CAAC,CAC5BC,oCAAoC,CAAC,CAAC;EACzC;EAEAR,OAAO,CAACS,gBAAgB,CAAE,aAAa,EAAER,OAAQ,CAAC;EAClD,OAAO,MAAM;IACZD,OAAO,CAACU,mBAAmB,CAAE,aAAa,EAAET,OAAQ,CAAC;EACtD,CAAC;AACF,CAAC;AAAAU,OAAA,CAAAC,OAAA,GAAAd,QAAA","ignoreList":[]}