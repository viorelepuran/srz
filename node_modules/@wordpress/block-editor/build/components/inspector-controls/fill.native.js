"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = InspectorControlsFill;
var _reactNative = require("react-native");
var _element = require("@wordpress/element");
var _components = require("@wordpress/components");
var _warning = _interopRequireDefault(require("@wordpress/warning"));
var _deprecated = _interopRequireDefault(require("@wordpress/deprecated"));
var _groups = _interopRequireDefault(require("./groups"));
var _context = require("../block-edit/context");
var _blockSettings = require("../block-settings");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function InspectorControlsFill({
  children,
  group = 'default',
  __experimentalGroup,
  ...props
}) {
  if (__experimentalGroup) {
    (0, _deprecated.default)('`__experimentalGroup` property in `InspectorControlsFill`', {
      since: '6.2',
      version: '6.4',
      alternative: '`group`'
    });
    group = __experimentalGroup;
  }
  const context = (0, _context.useBlockEditContext)();
  const Fill = _groups.default[group]?.Fill;
  if (!Fill) {
    globalThis.SCRIPT_DEBUG === true ? (0, _warning.default)(`Unknown InspectorControls group "${group}" provided.`) : void 0;
    return null;
  }
  if (!context[_context.mayDisplayControlsKey]) {
    return null;
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(Fill, {
      ...props,
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.BottomSheetConsumer, {
        children: () => /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
          children: children
        })
      })
    }), _element.Children.count(children) > 0 && /*#__PURE__*/(0, _jsxRuntime.jsx)(_blockSettings.BlockSettingsButton, {})]
  });
}
//# sourceMappingURL=fill.native.js.map