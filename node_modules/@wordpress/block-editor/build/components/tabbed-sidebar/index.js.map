{"version":3,"names":["_components","require","_element","_icons","_lockUnlock","_jsxRuntime","Tabs","unlock","componentsPrivateApis","TabbedSidebar","defaultTabId","onClose","onSelect","selectedTab","tabs","closeButtonLabel","ref","jsx","className","children","jsxs","selectOnMove","selectedTabId","Button","icon","closeSmall","label","onClick","size","TabList","map","tab","Tab","tabId","name","title","TabPanel","focusable","panelRef","panel","_default","exports","default","forwardRef"],"sources":["@wordpress/block-editor/src/components/tabbed-sidebar/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tButton,\n\tprivateApis as componentsPrivateApis,\n} from '@wordpress/components';\nimport { forwardRef } from '@wordpress/element';\nimport { closeSmall } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\n\nconst { Tabs } = unlock( componentsPrivateApis );\n\n/**\n * A component that creates a tabbed sidebar with a close button.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/tabbed-sidebar/README.md\n *\n * @example\n * ```jsx\n * function MyTabbedSidebar() {\n *   return (\n *     <TabbedSidebar\n *       tabs={ [\n *         {\n *           name: 'tab1',\n *           title: 'Settings',\n *           panel: <PanelContents />,\n *         }\n *       ] }\n *       onClose={ () => {} }\n *       onSelect={ () => {} }\n *       defaultTabId=\"tab1\"\n *       selectedTab=\"tab1\"\n *       closeButtonLabel=\"Close sidebar\"\n *     />\n *   );\n * }\n * ```\n *\n * @param {Object}   props                  Component props.\n * @param {string}   [props.defaultTabId]   The ID of the tab to be selected by default when the component renders.\n * @param {Function} props.onClose          Function called when the close button is clicked.\n * @param {Function} props.onSelect         Function called when a tab is selected. Receives the selected tab's ID as an argument.\n * @param {string}   props.selectedTab      The ID of the currently selected tab.\n * @param {Array}    props.tabs             Array of tab objects. Each tab should have: name (string), title (string),\n *                                          panel (React.Node), and optionally panelRef (React.Ref).\n * @param {string}   props.closeButtonLabel Accessibility label for the close button.\n * @param {Object}   ref                    Forward ref to the tabs list element.\n * @return {Element} The tabbed sidebar component.\n */\nfunction TabbedSidebar(\n\t{ defaultTabId, onClose, onSelect, selectedTab, tabs, closeButtonLabel },\n\tref\n) {\n\treturn (\n\t\t<div className=\"block-editor-tabbed-sidebar\">\n\t\t\t<Tabs\n\t\t\t\tselectOnMove={ false }\n\t\t\t\tdefaultTabId={ defaultTabId }\n\t\t\t\tonSelect={ onSelect }\n\t\t\t\tselectedTabId={ selectedTab }\n\t\t\t>\n\t\t\t\t<div className=\"block-editor-tabbed-sidebar__tablist-and-close-button\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"block-editor-tabbed-sidebar__close-button\"\n\t\t\t\t\t\ticon={ closeSmall }\n\t\t\t\t\t\tlabel={ closeButtonLabel }\n\t\t\t\t\t\tonClick={ () => onClose() }\n\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Tabs.TabList\n\t\t\t\t\t\tclassName=\"block-editor-tabbed-sidebar__tablist\"\n\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ tabs.map( ( tab ) => (\n\t\t\t\t\t\t\t<Tabs.Tab\n\t\t\t\t\t\t\t\tkey={ tab.name }\n\t\t\t\t\t\t\t\ttabId={ tab.name }\n\t\t\t\t\t\t\t\tclassName=\"block-editor-tabbed-sidebar__tab\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ tab.title }\n\t\t\t\t\t\t\t</Tabs.Tab>\n\t\t\t\t\t\t) ) }\n\t\t\t\t\t</Tabs.TabList>\n\t\t\t\t</div>\n\t\t\t\t{ tabs.map( ( tab ) => (\n\t\t\t\t\t<Tabs.TabPanel\n\t\t\t\t\t\tkey={ tab.name }\n\t\t\t\t\t\ttabId={ tab.name }\n\t\t\t\t\t\tfocusable={ false }\n\t\t\t\t\t\tclassName=\"block-editor-tabbed-sidebar__tabpanel\"\n\t\t\t\t\t\tref={ tab.panelRef }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ tab.panel }\n\t\t\t\t\t</Tabs.TabPanel>\n\t\t\t\t) ) }\n\t\t\t</Tabs>\n\t\t</div>\n\t);\n}\n\nexport default forwardRef( TabbedSidebar );\n"],"mappings":";;;;;;AAGA,IAAAA,WAAA,GAAAC,OAAA;AAIA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAKA,IAAAG,WAAA,GAAAH,OAAA;AAA2C,IAAAI,WAAA,GAAAJ,OAAA;AAb3C;AACA;AACA;;AAQA;AACA;AACA;;AAGA,MAAM;EAAEK;AAAK,CAAC,GAAG,IAAAC,kBAAM,EAAEC,uBAAsB,CAAC;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CACrB;EAAEC,YAAY;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,IAAI;EAAEC;AAAiB,CAAC,EACxEC,GAAG,EACF;EACD,oBACC,IAAAX,WAAA,CAAAY,GAAA;IAAKC,SAAS,EAAC,6BAA6B;IAAAC,QAAA,eAC3C,IAAAd,WAAA,CAAAe,IAAA,EAACd,IAAI;MACJe,YAAY,EAAG,KAAO;MACtBX,YAAY,EAAGA,YAAc;MAC7BE,QAAQ,EAAGA,QAAU;MACrBU,aAAa,EAAGT,WAAa;MAAAM,QAAA,gBAE7B,IAAAd,WAAA,CAAAe,IAAA;QAAKF,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBACrE,IAAAd,WAAA,CAAAY,GAAA,EAACjB,WAAA,CAAAuB,MAAM;UACNL,SAAS,EAAC,2CAA2C;UACrDM,IAAI,EAAGC,iBAAY;UACnBC,KAAK,EAAGX,gBAAkB;UAC1BY,OAAO,EAAGA,CAAA,KAAMhB,OAAO,CAAC,CAAG;UAC3BiB,IAAI,EAAC;QAAS,CACd,CAAC,eAEF,IAAAvB,WAAA,CAAAY,GAAA,EAACX,IAAI,CAACuB,OAAO;UACZX,SAAS,EAAC,sCAAsC;UAChDF,GAAG,EAAGA,GAAK;UAAAG,QAAA,EAETL,IAAI,CAACgB,GAAG,CAAIC,GAAG,iBAChB,IAAA1B,WAAA,CAAAY,GAAA,EAACX,IAAI,CAAC0B,GAAG;YAERC,KAAK,EAAGF,GAAG,CAACG,IAAM;YAClBhB,SAAS,EAAC,kCAAkC;YAAAC,QAAA,EAE1CY,GAAG,CAACI;UAAK,GAJLJ,GAAG,CAACG,IAKD,CACT;QAAC,CACU,CAAC;MAAA,CACX,CAAC,EACJpB,IAAI,CAACgB,GAAG,CAAIC,GAAG,iBAChB,IAAA1B,WAAA,CAAAY,GAAA,EAACX,IAAI,CAAC8B,QAAQ;QAEbH,KAAK,EAAGF,GAAG,CAACG,IAAM;QAClBG,SAAS,EAAG,KAAO;QACnBnB,SAAS,EAAC,uCAAuC;QACjDF,GAAG,EAAGe,GAAG,CAACO,QAAU;QAAAnB,QAAA,EAElBY,GAAG,CAACQ;MAAK,GANLR,GAAG,CAACG,IAOI,CACd,CAAC;IAAA,CACE;EAAC,CACH,CAAC;AAER;AAAC,IAAAM,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc,IAAAC,mBAAU,EAAElC,aAAc,CAAC","ignoreList":[]}