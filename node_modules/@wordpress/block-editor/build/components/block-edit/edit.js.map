{"version":3,"names":["_clsx","_interopRequireDefault","require","_blocks","_components","_data","_element","_blockContext","_isUrlLike","_blockBindings","_lockUnlock","_jsxRuntime","DEFAULT_BLOCK_CONTEXT","Edit","props","name","blockType","getBlockType","Component","edit","save","jsx","EditWithFilters","withFilters","EditWithGeneratedProps","clientId","attributes","setAttributes","registry","useRegistry","blockContext","useContext","BlockContext","registeredSources","useSelect","select","unlock","blocksStore","getAllBlockBindingsSources","blockBindings","context","hasPatternOverrides","useMemo","computedContext","usesContext","Object","fromEntries","entries","filter","key","includes","metadata","bindings","values","forEach","binding","source","replacePatternOverridesDefaultBinding","hasPatternOverridesDefaultBinding","computedAttributes","attributesFromSources","blockBindingsBySource","Map","attributeName","sourceName","args","sourceArgs","canBindAttribute","set","get","size","getValues","keys","attr","label","value","isURLLike","setBoundAttributes","useCallback","nextAttributes","batch","keptAttributes","newValue","setValues","dispatch","hasParentPattern","length","caption","href","apiVersion","generatedClassName","hasBlockSupport","getBlockDefaultClassName","className","clsx","_default","exports","default"],"sources":["@wordpress/block-editor/src/components/block-edit/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tgetBlockDefaultClassName,\n\tgetBlockType,\n\thasBlockSupport,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { withFilters } from '@wordpress/components';\nimport { useRegistry, useSelect } from '@wordpress/data';\nimport { useCallback, useContext, useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BlockContext from '../block-context';\nimport isURLLike from '../link-control/is-url-like';\nimport {\n\tcanBindAttribute,\n\thasPatternOverridesDefaultBinding,\n\treplacePatternOverridesDefaultBinding,\n} from '../../utils/block-bindings';\nimport { unlock } from '../../lock-unlock';\n\n/**\n * Default value used for blocks which do not define their own context needs,\n * used to guarantee that a block's `context` prop will always be an object. It\n * is assigned as a constant since it is always expected to be an empty object,\n * and in order to avoid unnecessary React reconciliations of a changing object.\n *\n * @type {{}}\n */\nconst DEFAULT_BLOCK_CONTEXT = {};\n\nconst Edit = ( props ) => {\n\tconst { name } = props;\n\tconst blockType = getBlockType( name );\n\n\tif ( ! blockType ) {\n\t\treturn null;\n\t}\n\n\t// `edit` and `save` are functions or components describing the markup\n\t// with which a block is displayed. If `blockType` is valid, assign\n\t// them preferentially as the render value for the block.\n\tconst Component = blockType.edit || blockType.save;\n\n\treturn <Component { ...props } />;\n};\n\nconst EditWithFilters = withFilters( 'editor.BlockEdit' )( Edit );\n\nconst EditWithGeneratedProps = ( props ) => {\n\tconst { name, clientId, attributes, setAttributes } = props;\n\tconst registry = useRegistry();\n\tconst blockType = getBlockType( name );\n\tconst blockContext = useContext( BlockContext );\n\tconst registeredSources = useSelect(\n\t\t( select ) =>\n\t\t\tunlock( select( blocksStore ) ).getAllBlockBindingsSources(),\n\t\t[]\n\t);\n\n\tconst { blockBindings, context, hasPatternOverrides } = useMemo( () => {\n\t\t// Assign context values using the block type's declared context needs.\n\t\tconst computedContext = blockType?.usesContext\n\t\t\t? Object.fromEntries(\n\t\t\t\t\tObject.entries( blockContext ).filter( ( [ key ] ) =>\n\t\t\t\t\t\tblockType.usesContext.includes( key )\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: DEFAULT_BLOCK_CONTEXT;\n\t\t// Add context requested by Block Bindings sources.\n\t\tif ( attributes?.metadata?.bindings ) {\n\t\t\tObject.values( attributes?.metadata?.bindings || {} ).forEach(\n\t\t\t\t( binding ) => {\n\t\t\t\t\tregisteredSources[ binding?.source ]?.usesContext?.forEach(\n\t\t\t\t\t\t( key ) => {\n\t\t\t\t\t\t\tcomputedContext[ key ] = blockContext[ key ];\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\tblockBindings: replacePatternOverridesDefaultBinding(\n\t\t\t\tname,\n\t\t\t\tattributes?.metadata?.bindings\n\t\t\t),\n\t\t\tcontext: computedContext,\n\t\t\thasPatternOverrides: hasPatternOverridesDefaultBinding(\n\t\t\t\tattributes?.metadata?.bindings\n\t\t\t),\n\t\t};\n\t}, [\n\t\tname,\n\t\tblockType?.usesContext,\n\t\tblockContext,\n\t\tattributes?.metadata?.bindings,\n\t\tregisteredSources,\n\t] );\n\n\tconst computedAttributes = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! blockBindings ) {\n\t\t\t\treturn attributes;\n\t\t\t}\n\n\t\t\tconst attributesFromSources = {};\n\t\t\tconst blockBindingsBySource = new Map();\n\n\t\t\tfor ( const [ attributeName, binding ] of Object.entries(\n\t\t\t\tblockBindings\n\t\t\t) ) {\n\t\t\t\tconst { source: sourceName, args: sourceArgs } = binding;\n\t\t\t\tconst source = registeredSources[ sourceName ];\n\t\t\t\tif ( ! source || ! canBindAttribute( name, attributeName ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tblockBindingsBySource.set( source, {\n\t\t\t\t\t...blockBindingsBySource.get( source ),\n\t\t\t\t\t[ attributeName ]: {\n\t\t\t\t\t\targs: sourceArgs,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( blockBindingsBySource.size ) {\n\t\t\t\tfor ( const [ source, bindings ] of blockBindingsBySource ) {\n\t\t\t\t\t// Get values in batch if the source supports it.\n\t\t\t\t\tlet values = {};\n\t\t\t\t\tif ( ! source.getValues ) {\n\t\t\t\t\t\tObject.keys( bindings ).forEach( ( attr ) => {\n\t\t\t\t\t\t\t// Default to the the source label when `getValues` doesn't exist.\n\t\t\t\t\t\t\tvalues[ attr ] = source.label;\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalues = source.getValues( {\n\t\t\t\t\t\t\tselect,\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t\tbindings,\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\tfor ( const [ attributeName, value ] of Object.entries(\n\t\t\t\t\t\tvalues\n\t\t\t\t\t) ) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tattributeName === 'url' &&\n\t\t\t\t\t\t\t( ! value || ! isURLLike( value ) )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Return null if value is not a valid URL.\n\t\t\t\t\t\t\tattributesFromSources[ attributeName ] = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tattributesFromSources[ attributeName ] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...attributes,\n\t\t\t\t...attributesFromSources,\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\tattributes,\n\t\t\tblockBindings,\n\t\t\tclientId,\n\t\t\tcontext,\n\t\t\tname,\n\t\t\tregisteredSources,\n\t\t]\n\t);\n\n\tconst setBoundAttributes = useCallback(\n\t\t( nextAttributes ) => {\n\t\t\tif ( ! blockBindings ) {\n\t\t\t\tsetAttributes( nextAttributes );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tregistry.batch( () => {\n\t\t\t\tconst keptAttributes = { ...nextAttributes };\n\t\t\t\tconst blockBindingsBySource = new Map();\n\n\t\t\t\t// Loop only over the updated attributes to avoid modifying the bound ones that haven't changed.\n\t\t\t\tfor ( const [ attributeName, newValue ] of Object.entries(\n\t\t\t\t\tkeptAttributes\n\t\t\t\t) ) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t! blockBindings[ attributeName ] ||\n\t\t\t\t\t\t! canBindAttribute( name, attributeName )\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst binding = blockBindings[ attributeName ];\n\t\t\t\t\tconst source = registeredSources[ binding?.source ];\n\t\t\t\t\tif ( ! source?.setValues ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tblockBindingsBySource.set( source, {\n\t\t\t\t\t\t...blockBindingsBySource.get( source ),\n\t\t\t\t\t\t[ attributeName ]: {\n\t\t\t\t\t\t\targs: binding.args,\n\t\t\t\t\t\t\tnewValue,\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\t\t\t\t\tdelete keptAttributes[ attributeName ];\n\t\t\t\t}\n\n\t\t\t\tif ( blockBindingsBySource.size ) {\n\t\t\t\t\tfor ( const [\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\tbindings,\n\t\t\t\t\t] of blockBindingsBySource ) {\n\t\t\t\t\t\tsource.setValues( {\n\t\t\t\t\t\t\tselect: registry.select,\n\t\t\t\t\t\t\tdispatch: registry.dispatch,\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t\tbindings,\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst hasParentPattern = !! context[ 'pattern/overrides' ];\n\n\t\t\t\tif (\n\t\t\t\t\t// Don't update non-connected attributes if the block is using pattern overrides\n\t\t\t\t\t// and the editing is happening while overriding the pattern (not editing the original).\n\t\t\t\t\t! ( hasPatternOverrides && hasParentPattern ) &&\n\t\t\t\t\tObject.keys( keptAttributes ).length\n\t\t\t\t) {\n\t\t\t\t\t// Don't update caption and href until they are supported.\n\t\t\t\t\tif ( hasPatternOverrides ) {\n\t\t\t\t\t\tdelete keptAttributes.caption;\n\t\t\t\t\t\tdelete keptAttributes.href;\n\t\t\t\t\t}\n\t\t\t\t\tsetAttributes( keptAttributes );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\t[\n\t\t\tblockBindings,\n\t\t\tclientId,\n\t\t\tcontext,\n\t\t\thasPatternOverrides,\n\t\t\tsetAttributes,\n\t\t\tregisteredSources,\n\t\t\tname,\n\t\t\tregistry,\n\t\t]\n\t);\n\n\tif ( ! blockType ) {\n\t\treturn null;\n\t}\n\n\tif ( blockType.apiVersion > 1 ) {\n\t\treturn (\n\t\t\t<EditWithFilters\n\t\t\t\t{ ...props }\n\t\t\t\tattributes={ computedAttributes }\n\t\t\t\tcontext={ context }\n\t\t\t\tsetAttributes={ setBoundAttributes }\n\t\t\t/>\n\t\t);\n\t}\n\n\t// Generate a class name for the block's editable form.\n\tconst generatedClassName = hasBlockSupport( blockType, 'className', true )\n\t\t? getBlockDefaultClassName( name )\n\t\t: null;\n\tconst className = clsx(\n\t\tgeneratedClassName,\n\t\tattributes?.className,\n\t\tprops.className\n\t);\n\n\treturn (\n\t\t<EditWithFilters\n\t\t\t{ ...props }\n\t\t\tattributes={ computedAttributes }\n\t\t\tclassName={ className }\n\t\t\tcontext={ context }\n\t\t\tsetAttributes={ setBoundAttributes }\n\t\t/>\n\t);\n};\n\nexport default EditWithGeneratedProps;\n"],"mappings":"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","ignoreList":[]}