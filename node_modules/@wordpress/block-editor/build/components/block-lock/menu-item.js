"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BlockLockMenuItem;
var _i18n = require("@wordpress/i18n");
var _element = require("@wordpress/element");
var _components = require("@wordpress/components");
var _icons = require("@wordpress/icons");
var _useBlockLock = _interopRequireDefault(require("./use-block-lock"));
var _modal = _interopRequireDefault(require("./modal"));
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function BlockLockMenuItem({
  clientId
}) {
  const {
    canLock,
    isLocked
  } = (0, _useBlockLock.default)(clientId);
  const [isModalOpen, toggleModal] = (0, _element.useReducer)(isActive => !isActive, false);
  if (!canLock) {
    return null;
  }
  const label = isLocked ? (0, _i18n.__)('Unlock') : (0, _i18n.__)('Lock');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_components.MenuItem, {
      icon: isLocked ? _icons.unlock : _icons.lockOutline,
      onClick: toggleModal,
      "aria-expanded": isModalOpen,
      "aria-haspopup": "dialog",
      children: label
    }), isModalOpen && /*#__PURE__*/(0, _jsxRuntime.jsx)(_modal.default, {
      clientId: clientId,
      onClose: toggleModal
    })]
  });
}
//# sourceMappingURL=menu-item.js.map