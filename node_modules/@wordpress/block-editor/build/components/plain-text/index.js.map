{"version":3,"names":["_reactAutosizeTextarea","_interopRequireDefault","require","_clsx","_element","_editableText","_jsxRuntime","PlainText","forwardRef","__experimentalVersion","props","ref","jsx","default","className","onChange","remainingProps","clsx","event","target","value","_default","exports"],"sources":["@wordpress/block-editor/src/components/plain-text/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport TextareaAutosize from 'react-autosize-textarea';\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport EditableText from '../editable-text';\n\n/**\n * Render an auto-growing textarea allow users to fill any textual content.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/plain-text/README.md\n *\n * @example\n * ```jsx\n * import { registerBlockType } from '@wordpress/blocks';\n * import { PlainText } from '@wordpress/block-editor';\n *\n * registerBlockType( 'my-plugin/example-block', {\n *   // ...\n *\n *   attributes: {\n *     content: {\n *       type: 'string',\n *     },\n *   },\n *\n *   edit( { className, attributes, setAttributes } ) {\n *     return (\n *       <PlainText\n *         className={ className }\n *         value={ attributes.content }\n *         onChange={ ( content ) => setAttributes( { content } ) }\n *       />\n *     );\n *   },\n * } );\n * ````\n *\n * @param {Object}   props          Component props.\n * @param {string}   props.value    String value of the textarea.\n * @param {Function} props.onChange Function called when the text value changes.\n * @param {Object}   [props.ref]    The component forwards the `ref` property to the `TextareaAutosize` component.\n * @return {Element} Plain text component\n */\nconst PlainText = forwardRef( ( { __experimentalVersion, ...props }, ref ) => {\n\tif ( __experimentalVersion === 2 ) {\n\t\treturn <EditableText ref={ ref } { ...props } />;\n\t}\n\n\tconst { className, onChange, ...remainingProps } = props;\n\n\treturn (\n\t\t<TextareaAutosize\n\t\t\tref={ ref }\n\t\t\tclassName={ clsx( 'block-editor-plain-text', className ) }\n\t\t\tonChange={ ( event ) => onChange( event.target.value ) }\n\t\t\t{ ...remainingProps }\n\t\t/>\n\t);\n} );\n\nexport default PlainText;\n"],"mappings":";;;;;;;AAGA,IAAAA,sBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AAKA,IAAAE,QAAA,GAAAF,OAAA;AAKA,IAAAG,aAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA4C,IAAAI,WAAA,GAAAJ,OAAA;AAd5C;AACA;AACA;;AAIA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAMK,SAAS,GAAG,IAAAC,mBAAU,EAAE,CAAE;EAAEC,qBAAqB;EAAE,GAAGC;AAAM,CAAC,EAAEC,GAAG,KAAM;EAC7E,IAAKF,qBAAqB,KAAK,CAAC,EAAG;IAClC,oBAAO,IAAAH,WAAA,CAAAM,GAAA,EAACP,aAAA,CAAAQ,OAAY;MAACF,GAAG,EAAGA,GAAK;MAAA,GAAMD;IAAK,CAAI,CAAC;EACjD;EAEA,MAAM;IAAEI,SAAS;IAAEC,QAAQ;IAAE,GAAGC;EAAe,CAAC,GAAGN,KAAK;EAExD,oBACC,IAAAJ,WAAA,CAAAM,GAAA,EAACZ,sBAAA,CAAAa,OAAgB;IAChBF,GAAG,EAAGA,GAAK;IACXG,SAAS,EAAG,IAAAG,aAAI,EAAE,yBAAyB,EAAEH,SAAU,CAAG;IAC1DC,QAAQ,EAAKG,KAAK,IAAMH,QAAQ,CAAEG,KAAK,CAACC,MAAM,CAACC,KAAM,CAAG;IAAA,GACnDJ;EAAc,CACnB,CAAC;AAEJ,CAAE,CAAC;AAAC,IAAAK,QAAA,GAAAC,OAAA,CAAAT,OAAA,GAEWN,SAAS","ignoreList":[]}