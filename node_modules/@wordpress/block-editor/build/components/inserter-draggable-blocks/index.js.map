{"version":3,"names":["_components","require","_blocks","_data","_element","_draggableChip","_interopRequireDefault","_utils","_store","_lockUnlock","_jsxRuntime","InserterDraggableBlocks","isEnabled","blocks","icon","children","pattern","blockTypeIcon","useSelect","select","getBlockType","blocksStore","length","name","startDragging","stopDragging","unlock","useDispatch","blockEditorStore","patternBlock","useMemo","type","INSERTER_PATTERN_TYPES","user","syncStatus","createBlock","ref","id","undefined","draggable","onDragStart","onDragEnd","draggableBlocks","jsx","Draggable","__experimentalTransferDataType","transferData","event","block","dataTransfer","items","add","__experimentalDragComponent","default","count","isPattern","onDraggableStart","onDraggableEnd","_default","exports"],"sources":["@wordpress/block-editor/src/components/inserter-draggable-blocks/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Draggable } from '@wordpress/components';\nimport { createBlock, store as blocksStore } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BlockDraggableChip from '../block-draggable/draggable-chip';\nimport { INSERTER_PATTERN_TYPES } from '../inserter/block-patterns-tab/utils';\nimport { store as blockEditorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst InserterDraggableBlocks = ( {\n\tisEnabled,\n\tblocks,\n\ticon,\n\tchildren,\n\tpattern,\n} ) => {\n\tconst blockTypeIcon = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockType } = select( blocksStore );\n\t\t\treturn (\n\t\t\t\tblocks.length === 1 && getBlockType( blocks[ 0 ].name )?.icon\n\t\t\t);\n\t\t},\n\t\t[ blocks ]\n\t);\n\n\tconst { startDragging, stopDragging } = unlock(\n\t\tuseDispatch( blockEditorStore )\n\t);\n\n\tconst patternBlock = useMemo( () => {\n\t\treturn pattern?.type === INSERTER_PATTERN_TYPES.user &&\n\t\t\tpattern?.syncStatus !== 'unsynced'\n\t\t\t? [ createBlock( 'core/block', { ref: pattern.id } ) ]\n\t\t\t: undefined;\n\t}, [ pattern?.type, pattern?.syncStatus, pattern?.id ] );\n\n\tif ( ! isEnabled ) {\n\t\treturn children( {\n\t\t\tdraggable: false,\n\t\t\tonDragStart: undefined,\n\t\t\tonDragEnd: undefined,\n\t\t} );\n\t}\n\n\tconst draggableBlocks = patternBlock ?? blocks;\n\treturn (\n\t\t<Draggable\n\t\t\t__experimentalTransferDataType=\"wp-blocks\"\n\t\t\ttransferData={ { type: 'inserter', blocks: draggableBlocks } }\n\t\t\tonDragStart={ ( event ) => {\n\t\t\t\tstartDragging();\n\t\t\t\tfor ( const block of draggableBlocks ) {\n\t\t\t\t\tconst type = `wp-block:${ block.name }`;\n\t\t\t\t\t// This will fill in the dataTransfer.types array so that\n\t\t\t\t\t// the drop zone can check if the draggable is eligible.\n\t\t\t\t\t// Unfortuantely, on drag start, we don't have access to the\n\t\t\t\t\t// actual data, only the data keys/types.\n\t\t\t\t\tevent.dataTransfer.items.add( '', type );\n\t\t\t\t}\n\t\t\t} }\n\t\t\tonDragEnd={ () => {\n\t\t\t\tstopDragging();\n\t\t\t} }\n\t\t\t__experimentalDragComponent={\n\t\t\t\t<BlockDraggableChip\n\t\t\t\t\tcount={ blocks.length }\n\t\t\t\t\ticon={ icon || ( ! pattern && blockTypeIcon ) }\n\t\t\t\t\tisPattern={ !! pattern }\n\t\t\t\t/>\n\t\t\t}\n\t\t>\n\t\t\t{ ( { onDraggableStart, onDraggableEnd } ) => {\n\t\t\t\treturn children( {\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tonDragStart: onDraggableStart,\n\t\t\t\t\tonDragEnd: onDraggableEnd,\n\t\t\t\t} );\n\t\t\t} }\n\t\t</Draggable>\n\t);\n};\n\nexport default InserterDraggableBlocks;\n"],"mappings":"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","ignoreList":[]}