{"version":3,"names":["_i18n","require","_element","_compose","_blockTypesList","_interopRequireDefault","_panel","_useBlockTypesState","_inserterListbox","_sorting","_noResults","_jsxRuntime","getBlockNamespace","item","name","split","MAX_SUGGESTED_ITEMS","EMPTY_ARRAY","BlockTypesTabPanel","items","collections","categories","onSelectItem","onHover","showMostUsedBlocks","className","suggestedItems","useMemo","orderBy","slice","uncategorizedItems","filter","category","itemsPerCollection","result","Object","keys","forEach","namespace","length","useEffect","currentlyRenderedCategories","useAsyncList","didRenderAllCategories","collectionEntries","entries","currentlyRenderedCollections","jsxs","children","jsx","default","title","_x","onSelect","label","map","categoryItems","slug","icon","__","collection","collectionItems","BlockTypesTab","rootClientId","onInsert","ref","useBlockTypesState","itemsForCurrentRoot","itemsRemaining","isAllowedInCurrentRoot","push","Fragment","_default","exports","forwardRef"],"sources":["@wordpress/block-editor/src/components/inserter/block-types-tab.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { useMemo, useEffect, forwardRef } from '@wordpress/element';\nimport { useAsyncList } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport InserterPanel from './panel';\nimport useBlockTypesState from './hooks/use-block-types-state';\nimport InserterListbox from '../inserter-listbox';\nimport { orderBy } from '../../utils/sorting';\nimport InserterNoResults from './no-results';\n\nconst getBlockNamespace = ( item ) => item.name.split( '/' )[ 0 ];\n\nconst MAX_SUGGESTED_ITEMS = 6;\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation and rerendering the component.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\nexport function BlockTypesTabPanel( {\n\titems,\n\tcollections,\n\tcategories,\n\tonSelectItem,\n\tonHover,\n\tshowMostUsedBlocks,\n\tclassName,\n} ) {\n\tconst suggestedItems = useMemo( () => {\n\t\treturn orderBy( items, 'frecency', 'desc' ).slice(\n\t\t\t0,\n\t\t\tMAX_SUGGESTED_ITEMS\n\t\t);\n\t}, [ items ] );\n\n\tconst uncategorizedItems = useMemo( () => {\n\t\treturn items.filter( ( item ) => ! item.category );\n\t}, [ items ] );\n\n\tconst itemsPerCollection = useMemo( () => {\n\t\t// Create a new Object to avoid mutating collection.\n\t\tconst result = { ...collections };\n\t\tObject.keys( collections ).forEach( ( namespace ) => {\n\t\t\tresult[ namespace ] = items.filter(\n\t\t\t\t( item ) => getBlockNamespace( item ) === namespace\n\t\t\t);\n\t\t\tif ( result[ namespace ].length === 0 ) {\n\t\t\t\tdelete result[ namespace ];\n\t\t\t}\n\t\t} );\n\n\t\treturn result;\n\t}, [ items, collections ] );\n\n\t// Hide block preview on unmount.\n\tuseEffect( () => () => onHover( null ), [] );\n\n\t/**\n\t * The inserter contains a big number of blocks and opening it is a costful operation.\n\t * The rendering is the most costful part of it, in order to improve the responsiveness\n\t * of the \"opening\" action, these lazy lists allow us to render the inserter category per category,\n\t * once all the categories are rendered, we start rendering the collections and the uncategorized block types.\n\t */\n\tconst currentlyRenderedCategories = useAsyncList( categories );\n\tconst didRenderAllCategories =\n\t\tcategories.length === currentlyRenderedCategories.length;\n\n\t// Async List requires an array.\n\tconst collectionEntries = useMemo( () => {\n\t\treturn Object.entries( collections );\n\t}, [ collections ] );\n\tconst currentlyRenderedCollections = useAsyncList(\n\t\tdidRenderAllCategories ? collectionEntries : EMPTY_ARRAY\n\t);\n\n\treturn (\n\t\t<div className={ className }>\n\t\t\t{ showMostUsedBlocks &&\n\t\t\t\t// Only show the most used blocks if the total amount of block\n\t\t\t\t// is larger than 1 row, otherwise it is not so useful.\n\t\t\t\titems.length > 3 &&\n\t\t\t\t!! suggestedItems.length && (\n\t\t\t\t\t<InserterPanel title={ _x( 'Most used', 'blocks' ) }>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ suggestedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ _x( 'Most used', 'blocks' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t{ currentlyRenderedCategories.map( ( category ) => {\n\t\t\t\tconst categoryItems = items.filter(\n\t\t\t\t\t( item ) => item.category === category.slug\n\t\t\t\t);\n\t\t\t\tif ( ! categoryItems || ! categoryItems.length ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\ticon={ category.icon }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ categoryItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ category.title }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t);\n\t\t\t} ) }\n\n\t\t\t{ didRenderAllCategories && uncategorizedItems.length > 0 && (\n\t\t\t\t<InserterPanel\n\t\t\t\t\tclassName=\"block-editor-inserter__uncategorized-blocks-panel\"\n\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t>\n\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\titems={ uncategorizedItems }\n\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\tlabel={ __( 'Uncategorized' ) }\n\t\t\t\t\t/>\n\t\t\t\t</InserterPanel>\n\t\t\t) }\n\n\t\t\t{ currentlyRenderedCollections.map(\n\t\t\t\t( [ namespace, collection ] ) => {\n\t\t\t\t\tconst collectionItems = itemsPerCollection[ namespace ];\n\t\t\t\t\tif ( ! collectionItems || ! collectionItems.length ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\tkey={ namespace }\n\t\t\t\t\t\t\ttitle={ collection.title }\n\t\t\t\t\t\t\ticon={ collection.icon }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\titems={ collectionItems }\n\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\tlabel={ collection.title }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nexport function BlockTypesTab(\n\t{ rootClientId, onInsert, onHover, showMostUsedBlocks },\n\tref\n) {\n\tconst [ items, categories, collections, onSelectItem ] = useBlockTypesState(\n\t\trootClientId,\n\t\tonInsert\n\t);\n\n\tif ( ! items.length ) {\n\t\treturn <InserterNoResults />;\n\t}\n\n\tconst itemsForCurrentRoot = [];\n\tconst itemsRemaining = [];\n\n\tfor ( const item of items ) {\n\t\t// Skip reusable blocks, they moved to the patterns tab.\n\t\tif ( item.category === 'reusable' ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( item.isAllowedInCurrentRoot ) {\n\t\t\titemsForCurrentRoot.push( item );\n\t\t} else {\n\t\t\titemsRemaining.push( item );\n\t\t}\n\t}\n\n\treturn (\n\t\t<InserterListbox>\n\t\t\t<div ref={ ref }>\n\t\t\t\t{ !! itemsForCurrentRoot.length && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<BlockTypesTabPanel\n\t\t\t\t\t\t\titems={ itemsForCurrentRoot }\n\t\t\t\t\t\t\tcategories={ categories }\n\t\t\t\t\t\t\tcollections={ collections }\n\t\t\t\t\t\t\tonSelectItem={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tshowMostUsedBlocks={ showMostUsedBlocks }\n\t\t\t\t\t\t\tclassName=\"block-editor-inserter__insertable-blocks-at-selection\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t\t<BlockTypesTabPanel\n\t\t\t\t\titems={ itemsRemaining }\n\t\t\t\t\tcategories={ categories }\n\t\t\t\t\tcollections={ collections }\n\t\t\t\t\tonSelectItem={ onSelectItem }\n\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\tshowMostUsedBlocks={ showMostUsedBlocks }\n\t\t\t\t\tclassName=\"block-editor-inserter__all-blocks\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</InserterListbox>\n\t);\n}\n\nexport default forwardRef( BlockTypesTab );\n"],"mappings":"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","ignoreList":[]}