{"version":3,"names":["_blocks","require","_data","_element","_notices","_i18n","_store","_utils","_lockUnlock","useBlockTypesState","rootClientId","onInsert","isQuick","options","useMemo","isFiltered","items","useSelect","select","blockEditorStore","getInserterItems","getClosestAllowedInsertionPoint","unlock","createErrorNotice","useDispatch","noticesStore","categories","collections","getCategories","getCollections","blocksStore","onSelectItem","useCallback","name","initialAttributes","innerBlocks","syncStatus","content","shouldFocusBlock","destinationClientId","_getBlockType$title","title","getBlockType","sprintf","__","type","id","insertedBlock","parse","__unstableSkipMigrationLogs","createBlock","createBlocksFromInnerBlocksTemplate","undefined","_default","exports","default"],"sources":["@wordpress/block-editor/src/components/inserter/hooks/use-block-types-state.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tgetBlockType,\n\tcreateBlock,\n\tcreateBlocksFromInnerBlocksTemplate,\n\tstore as blocksStore,\n\tparse,\n} from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useCallback, useMemo } from '@wordpress/element';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../../store';\nimport { isFiltered } from '../../../store/utils';\nimport { unlock } from '../../../lock-unlock';\n\n/**\n * Retrieves the block types inserter state.\n *\n * @param {string=}  rootClientId Insertion's root client ID.\n * @param {Function} onInsert     function called when inserter a list of blocks.\n * @param {boolean}  isQuick\n * @return {Array} Returns the block types state. (block types, categories, collections, onSelect handler)\n */\nconst useBlockTypesState = ( rootClientId, onInsert, isQuick ) => {\n\tconst options = useMemo(\n\t\t() => ( { [ isFiltered ]: !! isQuick } ),\n\t\t[ isQuick ]\n\t);\n\tconst [ items ] = useSelect(\n\t\t( select ) => [\n\t\t\tselect( blockEditorStore ).getInserterItems(\n\t\t\t\trootClientId,\n\t\t\t\toptions\n\t\t\t),\n\t\t],\n\t\t[ rootClientId, options ]\n\t);\n\tconst { getClosestAllowedInsertionPoint } = unlock(\n\t\tuseSelect( blockEditorStore )\n\t);\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\n\tconst [ categories, collections ] = useSelect( ( select ) => {\n\t\tconst { getCategories, getCollections } = select( blocksStore );\n\t\treturn [ getCategories(), getCollections() ];\n\t}, [] );\n\n\tconst onSelectItem = useCallback(\n\t\t(\n\t\t\t{ name, initialAttributes, innerBlocks, syncStatus, content },\n\t\t\tshouldFocusBlock\n\t\t) => {\n\t\t\tconst destinationClientId = getClosestAllowedInsertionPoint(\n\t\t\t\tname,\n\t\t\t\trootClientId\n\t\t\t);\n\t\t\tif ( destinationClientId === null ) {\n\t\t\t\tconst title = getBlockType( name )?.title ?? name;\n\t\t\t\tcreateErrorNotice(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t/* translators: %s: block pattern title. */\n\t\t\t\t\t\t__( 'Block \"%s\" can\\'t be inserted.' ),\n\t\t\t\t\t\ttitle\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\tid: 'inserter-notice',\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst insertedBlock =\n\t\t\t\tsyncStatus === 'unsynced'\n\t\t\t\t\t? parse( content, {\n\t\t\t\t\t\t\t__unstableSkipMigrationLogs: true,\n\t\t\t\t\t  } )\n\t\t\t\t\t: createBlock(\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tinitialAttributes,\n\t\t\t\t\t\t\tcreateBlocksFromInnerBlocksTemplate( innerBlocks )\n\t\t\t\t\t  );\n\t\t\tonInsert(\n\t\t\t\tinsertedBlock,\n\t\t\t\tundefined,\n\t\t\t\tshouldFocusBlock,\n\t\t\t\tdestinationClientId\n\t\t\t);\n\t\t},\n\t\t[\n\t\t\tgetClosestAllowedInsertionPoint,\n\t\t\trootClientId,\n\t\t\tonInsert,\n\t\t\tcreateErrorNotice,\n\t\t]\n\t);\n\n\treturn [ items, categories, collections, onSelectItem ];\n};\n\nexport default useBlockTypesState;\n"],"mappings":";;;;;;AAGA,IAAAA,OAAA,GAAAC,OAAA;AAOA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,QAAA,GAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AACA,IAAAI,KAAA,GAAAJ,OAAA;AAKA,IAAAK,MAAA,GAAAL,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AACA,IAAAO,WAAA,GAAAP,OAAA;AApBA;AACA;AACA;;AAaA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMQ,kBAAkB,GAAGA,CAAEC,YAAY,EAAEC,QAAQ,EAAEC,OAAO,KAAM;EACjE,MAAMC,OAAO,GAAG,IAAAC,gBAAO,EACtB,OAAQ;IAAE,CAAEC,iBAAU,GAAI,CAAC,CAAEH;EAAQ,CAAC,CAAE,EACxC,CAAEA,OAAO,CACV,CAAC;EACD,MAAM,CAAEI,KAAK,CAAE,GAAG,IAAAC,eAAS,EACxBC,MAAM,IAAM,CACbA,MAAM,CAAEC,YAAiB,CAAC,CAACC,gBAAgB,CAC1CV,YAAY,EACZG,OACD,CAAC,CACD,EACD,CAAEH,YAAY,EAAEG,OAAO,CACxB,CAAC;EACD,MAAM;IAAEQ;EAAgC,CAAC,GAAG,IAAAC,kBAAM,EACjD,IAAAL,eAAS,EAAEE,YAAiB,CAC7B,CAAC;EACD,MAAM;IAAEI;EAAkB,CAAC,GAAG,IAAAC,iBAAW,EAAEC,cAAa,CAAC;EAEzD,MAAM,CAAEC,UAAU,EAAEC,WAAW,CAAE,GAAG,IAAAV,eAAS,EAAIC,MAAM,IAAM;IAC5D,MAAM;MAAEU,aAAa;MAAEC;IAAe,CAAC,GAAGX,MAAM,CAAEY,aAAY,CAAC;IAC/D,OAAO,CAAEF,aAAa,CAAC,CAAC,EAAEC,cAAc,CAAC,CAAC,CAAE;EAC7C,CAAC,EAAE,EAAG,CAAC;EAEP,MAAME,YAAY,GAAG,IAAAC,oBAAW,EAC/B,CACC;IAAEC,IAAI;IAAEC,iBAAiB;IAAEC,WAAW;IAAEC,UAAU;IAAEC;EAAQ,CAAC,EAC7DC,gBAAgB,KACZ;IACJ,MAAMC,mBAAmB,GAAGlB,+BAA+B,CAC1DY,IAAI,EACJvB,YACD,CAAC;IACD,IAAK6B,mBAAmB,KAAK,IAAI,EAAG;MAAA,IAAAC,mBAAA;MACnC,MAAMC,KAAK,IAAAD,mBAAA,GAAG,IAAAE,oBAAY,EAAET,IAAK,CAAC,EAAEQ,KAAK,cAAAD,mBAAA,cAAAA,mBAAA,GAAIP,IAAI;MACjDV,iBAAiB,CAChB,IAAAoB,aAAO,EACN;MACA,IAAAC,QAAE,EAAE,gCAAiC,CAAC,EACtCH,KACD,CAAC,EACD;QACCI,IAAI,EAAE,UAAU;QAChBC,EAAE,EAAE;MACL,CACD,CAAC;MACD;IACD;IAEA,MAAMC,aAAa,GAClBX,UAAU,KAAK,UAAU,GACtB,IAAAY,aAAK,EAAEX,OAAO,EAAE;MAChBY,2BAA2B,EAAE;IAC7B,CAAE,CAAC,GACH,IAAAC,mBAAW,EACXjB,IAAI,EACJC,iBAAiB,EACjB,IAAAiB,2CAAmC,EAAEhB,WAAY,CACjD,CAAC;IACLxB,QAAQ,CACPoC,aAAa,EACbK,SAAS,EACTd,gBAAgB,EAChBC,mBACD,CAAC;EACF,CAAC,EACD,CACClB,+BAA+B,EAC/BX,YAAY,EACZC,QAAQ,EACRY,iBAAiB,CAEnB,CAAC;EAED,OAAO,CAAEP,KAAK,EAAEU,UAAU,EAAEC,WAAW,EAAEI,YAAY,CAAE;AACxD,CAAC;AAAC,IAAAsB,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEa9C,kBAAkB","ignoreList":[]}