{"version":3,"names":["_clsx","_interopRequireDefault","require","_i18n","_blocks","_icons","_components","_blockEditingMode","_utils","_typography","_jsxRuntime","TEXT_ALIGN_SUPPORT_KEY","exports","TEXT_ALIGNMENT_OPTIONS","icon","alignLeft","title","__","align","alignCenter","alignRight","VALID_TEXT_ALIGNMENTS","NO_TEXT_ALIGNMENTS","getValidTextAlignments","blockTextAlign","Array","isArray","filter","textAlign","includes","BlockEditTextAlignmentToolbarControlsPure","style","name","blockName","setAttributes","settings","useBlockSettings","hasTextAlignControl","typography","blockEditingMode","useBlockEditingMode","validTextAlignments","getBlockSupport","length","textAlignmentControls","control","onChange","newTextAlignValue","newStyle","cleanEmptyObject","jsx","BlockControls","group","children","AlignmentControl","value","alignmentControls","_default","default","edit","useBlockProps","addSaveProps","addAssignedTextAlign","attributeKeys","hasSupport","hasBlockSupport","shouldSkipSerialization","TYPOGRAPHY_SUPPORT_KEY","className","clsx","props","blockType","attributes","isTextAlignValid"],"sources":["@wordpress/block-editor/src/hooks/text-align.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { getBlockSupport, hasBlockSupport } from '@wordpress/blocks';\nimport { alignLeft, alignRight, alignCenter } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { AlignmentControl, BlockControls } from '../components';\nimport { useBlockEditingMode } from '../components/block-editing-mode';\nimport {\n\tcleanEmptyObject,\n\tshouldSkipSerialization,\n\tuseBlockSettings,\n} from './utils';\nimport { TYPOGRAPHY_SUPPORT_KEY } from './typography';\n\nexport const TEXT_ALIGN_SUPPORT_KEY = 'typography.textAlign';\n\nconst TEXT_ALIGNMENT_OPTIONS = [\n\t{\n\t\ticon: alignLeft,\n\t\ttitle: __( 'Align text left' ),\n\t\talign: 'left',\n\t},\n\t{\n\t\ticon: alignCenter,\n\t\ttitle: __( 'Align text center' ),\n\t\talign: 'center',\n\t},\n\t{\n\t\ticon: alignRight,\n\t\ttitle: __( 'Align text right' ),\n\t\talign: 'right',\n\t},\n];\n\nconst VALID_TEXT_ALIGNMENTS = [ 'left', 'center', 'right' ];\nconst NO_TEXT_ALIGNMENTS = [];\n\n/**\n * Returns the valid text alignments.\n * Takes into consideration the text aligns supported by a block.\n * Exported just for testing purposes, not exported outside the module.\n *\n * @param {?boolean|string[]} blockTextAlign Text aligns supported by the block.\n *\n * @return {string[]} Valid text alignments.\n */\nexport function getValidTextAlignments( blockTextAlign ) {\n\tif ( Array.isArray( blockTextAlign ) ) {\n\t\treturn VALID_TEXT_ALIGNMENTS.filter( ( textAlign ) =>\n\t\t\tblockTextAlign.includes( textAlign )\n\t\t);\n\t}\n\n\treturn blockTextAlign === true ? VALID_TEXT_ALIGNMENTS : NO_TEXT_ALIGNMENTS;\n}\n\nfunction BlockEditTextAlignmentToolbarControlsPure( {\n\tstyle,\n\tname: blockName,\n\tsetAttributes,\n} ) {\n\tconst settings = useBlockSettings( blockName );\n\tconst hasTextAlignControl = settings?.typography?.textAlign;\n\tconst blockEditingMode = useBlockEditingMode();\n\n\tif ( ! hasTextAlignControl || blockEditingMode !== 'default' ) {\n\t\treturn null;\n\t}\n\n\tconst validTextAlignments = getValidTextAlignments(\n\t\tgetBlockSupport( blockName, TEXT_ALIGN_SUPPORT_KEY )\n\t);\n\tif ( ! validTextAlignments.length ) {\n\t\treturn null;\n\t}\n\n\tconst textAlignmentControls = TEXT_ALIGNMENT_OPTIONS.filter( ( control ) =>\n\t\tvalidTextAlignments.includes( control.align )\n\t);\n\n\tconst onChange = ( newTextAlignValue ) => {\n\t\tconst newStyle = {\n\t\t\t...style,\n\t\t\ttypography: {\n\t\t\t\t...style?.typography,\n\t\t\t\ttextAlign: newTextAlignValue,\n\t\t\t},\n\t\t};\n\n\t\tsetAttributes( { style: cleanEmptyObject( newStyle ) } );\n\t};\n\n\treturn (\n\t\t<BlockControls group=\"block\">\n\t\t\t<AlignmentControl\n\t\t\t\tvalue={ style?.typography?.textAlign }\n\t\t\t\tonChange={ onChange }\n\t\t\t\talignmentControls={ textAlignmentControls }\n\t\t\t/>\n\t\t</BlockControls>\n\t);\n}\n\nexport default {\n\tedit: BlockEditTextAlignmentToolbarControlsPure,\n\tuseBlockProps,\n\taddSaveProps: addAssignedTextAlign,\n\tattributeKeys: [ 'style' ],\n\thasSupport( name ) {\n\t\treturn hasBlockSupport( name, TEXT_ALIGN_SUPPORT_KEY, false );\n\t},\n};\n\nfunction useBlockProps( { name, style } ) {\n\tif ( ! style?.typography?.textAlign ) {\n\t\treturn null;\n\t}\n\n\tconst validTextAlignments = getValidTextAlignments(\n\t\tgetBlockSupport( name, TEXT_ALIGN_SUPPORT_KEY )\n\t);\n\n\tif ( ! validTextAlignments.length ) {\n\t\treturn null;\n\t}\n\n\tif (\n\t\tshouldSkipSerialization( name, TYPOGRAPHY_SUPPORT_KEY, 'textAlign' )\n\t) {\n\t\treturn null;\n\t}\n\n\tconst textAlign = style.typography.textAlign;\n\n\tconst className = clsx( {\n\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t} );\n\treturn { className };\n}\n\n/**\n * Override props assigned to save component to inject text alignment class\n * name if block supports it.\n *\n * @param {Object} props      Additional props applied to save element.\n * @param {Object} blockType  Block type.\n * @param {Object} attributes Block attributes.\n *\n * @return {Object} Filtered props applied to save element.\n */\nexport function addAssignedTextAlign( props, blockType, attributes ) {\n\tif ( ! attributes?.style?.typography?.textAlign ) {\n\t\treturn props;\n\t}\n\n\tconst { textAlign } = attributes.style.typography;\n\tconst blockTextAlign = getBlockSupport( blockType, TEXT_ALIGN_SUPPORT_KEY );\n\tconst isTextAlignValid =\n\t\tgetValidTextAlignments( blockTextAlign ).includes( textAlign );\n\tif (\n\t\tisTextAlignValid &&\n\t\t! shouldSkipSerialization(\n\t\t\tblockType,\n\t\t\tTYPOGRAPHY_SUPPORT_KEY,\n\t\t\t'textAlign'\n\t\t)\n\t) {\n\t\tprops.className = clsx(\n\t\t\t`has-text-align-${ textAlign }`,\n\t\t\tprops.className\n\t\t);\n\t}\n\treturn props;\n}\n"],"mappings":";;;;;;;;;;AAGA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAKA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AAKA,IAAAI,WAAA,GAAAJ,OAAA;AACA,IAAAK,iBAAA,GAAAL,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AAKA,IAAAO,WAAA,GAAAP,OAAA;AAAsD,IAAAQ,WAAA,GAAAR,OAAA;AAtBtD;AACA;AACA;;AAGA;AACA;AACA;;AAKA;AACA;AACA;;AAUO,MAAMS,sBAAsB,GAAAC,OAAA,CAAAD,sBAAA,GAAG,sBAAsB;AAE5D,MAAME,sBAAsB,GAAG,CAC9B;EACCC,IAAI,EAAEC,gBAAS;EACfC,KAAK,EAAE,IAAAC,QAAE,EAAE,iBAAkB,CAAC;EAC9BC,KAAK,EAAE;AACR,CAAC,EACD;EACCJ,IAAI,EAAEK,kBAAW;EACjBH,KAAK,EAAE,IAAAC,QAAE,EAAE,mBAAoB,CAAC;EAChCC,KAAK,EAAE;AACR,CAAC,EACD;EACCJ,IAAI,EAAEM,iBAAU;EAChBJ,KAAK,EAAE,IAAAC,QAAE,EAAE,kBAAmB,CAAC;EAC/BC,KAAK,EAAE;AACR,CAAC,CACD;AAED,MAAMG,qBAAqB,GAAG,CAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAE;AAC3D,MAAMC,kBAAkB,GAAG,EAAE;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAsBA,CAAEC,cAAc,EAAG;EACxD,IAAKC,KAAK,CAACC,OAAO,CAAEF,cAAe,CAAC,EAAG;IACtC,OAAOH,qBAAqB,CAACM,MAAM,CAAIC,SAAS,IAC/CJ,cAAc,CAACK,QAAQ,CAAED,SAAU,CACpC,CAAC;EACF;EAEA,OAAOJ,cAAc,KAAK,IAAI,GAAGH,qBAAqB,GAAGC,kBAAkB;AAC5E;AAEA,SAASQ,yCAAyCA,CAAE;EACnDC,KAAK;EACLC,IAAI,EAAEC,SAAS;EACfC;AACD,CAAC,EAAG;EACH,MAAMC,QAAQ,GAAG,IAAAC,uBAAgB,EAAEH,SAAU,CAAC;EAC9C,MAAMI,mBAAmB,GAAGF,QAAQ,EAAEG,UAAU,EAAEV,SAAS;EAC3D,MAAMW,gBAAgB,GAAG,IAAAC,qCAAmB,EAAC,CAAC;EAE9C,IAAK,CAAEH,mBAAmB,IAAIE,gBAAgB,KAAK,SAAS,EAAG;IAC9D,OAAO,IAAI;EACZ;EAEA,MAAME,mBAAmB,GAAGlB,sBAAsB,CACjD,IAAAmB,uBAAe,EAAET,SAAS,EAAEtB,sBAAuB,CACpD,CAAC;EACD,IAAK,CAAE8B,mBAAmB,CAACE,MAAM,EAAG;IACnC,OAAO,IAAI;EACZ;EAEA,MAAMC,qBAAqB,GAAG/B,sBAAsB,CAACc,MAAM,CAAIkB,OAAO,IACrEJ,mBAAmB,CAACZ,QAAQ,CAAEgB,OAAO,CAAC3B,KAAM,CAC7C,CAAC;EAED,MAAM4B,QAAQ,GAAKC,iBAAiB,IAAM;IACzC,MAAMC,QAAQ,GAAG;MAChB,GAAGjB,KAAK;MACRO,UAAU,EAAE;QACX,GAAGP,KAAK,EAAEO,UAAU;QACpBV,SAAS,EAAEmB;MACZ;IACD,CAAC;IAEDb,aAAa,CAAE;MAAEH,KAAK,EAAE,IAAAkB,uBAAgB,EAAED,QAAS;IAAE,CAAE,CAAC;EACzD,CAAC;EAED,oBACC,IAAAtC,WAAA,CAAAwC,GAAA,EAAC5C,WAAA,CAAA6C,aAAa;IAACC,KAAK,EAAC,OAAO;IAAAC,QAAA,eAC3B,IAAA3C,WAAA,CAAAwC,GAAA,EAAC5C,WAAA,CAAAgD,gBAAgB;MAChBC,KAAK,EAAGxB,KAAK,EAAEO,UAAU,EAAEV,SAAW;MACtCkB,QAAQ,EAAGA,QAAU;MACrBU,iBAAiB,EAAGZ;IAAuB,CAC3C;EAAC,CACY,CAAC;AAElB;AAAC,IAAAa,QAAA,GAAA7C,OAAA,CAAA8C,OAAA,GAEc;EACdC,IAAI,EAAE7B,yCAAyC;EAC/C8B,aAAa;EACbC,YAAY,EAAEC,oBAAoB;EAClCC,aAAa,EAAE,CAAE,OAAO,CAAE;EAC1BC,UAAUA,CAAEhC,IAAI,EAAG;IAClB,OAAO,IAAAiC,uBAAe,EAAEjC,IAAI,EAAErB,sBAAsB,EAAE,KAAM,CAAC;EAC9D;AACD,CAAC;AAED,SAASiD,aAAaA,CAAE;EAAE5B,IAAI;EAAED;AAAM,CAAC,EAAG;EACzC,IAAK,CAAEA,KAAK,EAAEO,UAAU,EAAEV,SAAS,EAAG;IACrC,OAAO,IAAI;EACZ;EAEA,MAAMa,mBAAmB,GAAGlB,sBAAsB,CACjD,IAAAmB,uBAAe,EAAEV,IAAI,EAAErB,sBAAuB,CAC/C,CAAC;EAED,IAAK,CAAE8B,mBAAmB,CAACE,MAAM,EAAG;IACnC,OAAO,IAAI;EACZ;EAEA,IACC,IAAAuB,8BAAuB,EAAElC,IAAI,EAAEmC,kCAAsB,EAAE,WAAY,CAAC,EACnE;IACD,OAAO,IAAI;EACZ;EAEA,MAAMvC,SAAS,GAAGG,KAAK,CAACO,UAAU,CAACV,SAAS;EAE5C,MAAMwC,SAAS,GAAG,IAAAC,aAAI,EAAE;IACvB,CAAE,kBAAmBzC,SAAS,EAAG,GAAIA;EACtC,CAAE,CAAC;EACH,OAAO;IAAEwC;EAAU,CAAC;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASN,oBAAoBA,CAAEQ,KAAK,EAAEC,SAAS,EAAEC,UAAU,EAAG;EACpE,IAAK,CAAEA,UAAU,EAAEzC,KAAK,EAAEO,UAAU,EAAEV,SAAS,EAAG;IACjD,OAAO0C,KAAK;EACb;EAEA,MAAM;IAAE1C;EAAU,CAAC,GAAG4C,UAAU,CAACzC,KAAK,CAACO,UAAU;EACjD,MAAMd,cAAc,GAAG,IAAAkB,uBAAe,EAAE6B,SAAS,EAAE5D,sBAAuB,CAAC;EAC3E,MAAM8D,gBAAgB,GACrBlD,sBAAsB,CAAEC,cAAe,CAAC,CAACK,QAAQ,CAAED,SAAU,CAAC;EAC/D,IACC6C,gBAAgB,IAChB,CAAE,IAAAP,8BAAuB,EACxBK,SAAS,EACTJ,kCAAsB,EACtB,WACD,CAAC,EACA;IACDG,KAAK,CAACF,SAAS,GAAG,IAAAC,aAAI,EACrB,kBAAmBzC,SAAS,EAAG,EAC/B0C,KAAK,CAACF,SACP,CAAC;EACF;EACA,OAAOE,KAAK;AACb","ignoreList":[]}