{"version":3,"names":["useState","AspectRatioTool","ScaleTool","WidthHeightTool","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DimensionsTool","panelId","value","onChange","aspectRatioOptions","defaultAspectRatio","scaleOptions","defaultScale","unitsOptions","tools","width","undefined","height","aspectRatio","scale","lastScale","setLastScale","lastAspectRatio","setLastAspectRatio","aspectRatioValue","showScaleControl","children","includes","options","defaultValue","nextAspectRatio","nextValue","units","nextWidth","nextHeight","nextScale"],"sources":["@wordpress/block-editor/src/components/dimensions-tool/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport AspectRatioTool from './aspect-ratio-tool';\nimport ScaleTool from './scale-tool';\nimport WidthHeightTool from './width-height-tool';\n\n/**\n * @typedef {import('@wordpress/components/build-types/select-control/types').SelectControlProps} SelectControlProps\n */\n\n/**\n * @typedef {import('@wordpress/components/build-types/unit-control/types').WPUnitControlUnit} WPUnitControlUnit\n */\n\n/**\n * @typedef {Object} Dimensions\n * @property {string} [width]       CSS width property.\n * @property {string} [height]      CSS height property.\n * @property {string} [scale]       CSS object-fit property.\n * @property {string} [aspectRatio] CSS aspect-ratio property.\n */\n\n/**\n * @callback DimensionsControlsOnChange\n * @param {Dimensions} nextValue\n * @return {void}\n */\n\n/**\n * @typedef {Object} DimensionsControlsProps\n * @property {string}                     [panelId]            ID of the panel that contains the controls.\n * @property {Dimensions}                 [value]              Current dimensions values.\n * @property {DimensionsControlsOnChange} [onChange]           Callback to update the dimensions values.\n * @property {SelectControlProps[]}       [aspectRatioOptions] Aspect ratio options.\n * @property {SelectControlProps[]}       [scaleOptions]       Scale options.\n * @property {WPUnitControlUnit[]}        [unitsOptions]       Units options.\n */\n\n/**\n * Component that renders controls to edit the dimensions of an image or container.\n *\n * @param {DimensionsControlsProps} props The component props.\n *\n * @return {Element} The dimensions controls.\n */\nfunction DimensionsTool( {\n\tpanelId,\n\tvalue = {},\n\tonChange = () => {},\n\taspectRatioOptions, // Default options handled by AspectRatioTool.\n\tdefaultAspectRatio = 'auto', // Match CSS default value for aspect-ratio.\n\tscaleOptions, // Default options handled by ScaleTool.\n\tdefaultScale = 'fill', // Match CSS default value for object-fit.\n\tunitsOptions, // Default options handled by UnitControl.\n\ttools = [ 'aspectRatio', 'widthHeight', 'scale' ],\n} ) {\n\t// Coerce undefined and CSS default values to be null.\n\tconst width =\n\t\tvalue.width === undefined || value.width === 'auto'\n\t\t\t? null\n\t\t\t: value.width;\n\tconst height =\n\t\tvalue.height === undefined || value.height === 'auto'\n\t\t\t? null\n\t\t\t: value.height;\n\tconst aspectRatio =\n\t\tvalue.aspectRatio === undefined || value.aspectRatio === 'auto'\n\t\t\t? null\n\t\t\t: value.aspectRatio;\n\tconst scale =\n\t\tvalue.scale === undefined || value.scale === 'fill'\n\t\t\t? null\n\t\t\t: value.scale;\n\n\t// Keep track of state internally, so when the value is cleared by means\n\t// other than directly editing that field, it's easier to restore the\n\t// previous value.\n\tconst [ lastScale, setLastScale ] = useState( scale );\n\tconst [ lastAspectRatio, setLastAspectRatio ] = useState( aspectRatio );\n\n\t// 'custom' is not a valid value for CSS aspect-ratio, but it is used in the\n\t// dropdown to indicate that setting both the width and height is the same\n\t// as a custom aspect ratio.\n\tconst aspectRatioValue = width && height ? 'custom' : lastAspectRatio;\n\n\tconst showScaleControl = aspectRatio || ( width && height );\n\n\treturn (\n\t\t<>\n\t\t\t{ tools.includes( 'aspectRatio' ) && (\n\t\t\t\t<AspectRatioTool\n\t\t\t\t\tpanelId={ panelId }\n\t\t\t\t\toptions={ aspectRatioOptions }\n\t\t\t\t\tdefaultValue={ defaultAspectRatio }\n\t\t\t\t\tvalue={ aspectRatioValue }\n\t\t\t\t\tonChange={ ( nextAspectRatio ) => {\n\t\t\t\t\t\tconst nextValue = { ...value };\n\n\t\t\t\t\t\t// 'auto' is CSS default, so it gets treated as null.\n\t\t\t\t\t\tnextAspectRatio =\n\t\t\t\t\t\t\tnextAspectRatio === 'auto' ? null : nextAspectRatio;\n\n\t\t\t\t\t\tsetLastAspectRatio( nextAspectRatio );\n\n\t\t\t\t\t\t// Update aspectRatio.\n\t\t\t\t\t\tif ( ! nextAspectRatio ) {\n\t\t\t\t\t\t\tdelete nextValue.aspectRatio;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnextValue.aspectRatio = nextAspectRatio;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Auto-update scale.\n\t\t\t\t\t\tif ( ! nextAspectRatio ) {\n\t\t\t\t\t\t\tdelete nextValue.scale;\n\t\t\t\t\t\t} else if ( lastScale ) {\n\t\t\t\t\t\t\tnextValue.scale = lastScale;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnextValue.scale = defaultScale;\n\t\t\t\t\t\t\tsetLastScale( defaultScale );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Auto-update width and height.\n\t\t\t\t\t\tif ( 'custom' !== nextAspectRatio && width && height ) {\n\t\t\t\t\t\t\tdelete nextValue.height;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange( nextValue );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ tools.includes( 'widthHeight' ) && (\n\t\t\t\t<WidthHeightTool\n\t\t\t\t\tpanelId={ panelId }\n\t\t\t\t\tunits={ unitsOptions }\n\t\t\t\t\tvalue={ { width, height } }\n\t\t\t\t\tonChange={ ( { width: nextWidth, height: nextHeight } ) => {\n\t\t\t\t\t\tconst nextValue = { ...value };\n\n\t\t\t\t\t\t// 'auto' is CSS default, so it gets treated as null.\n\t\t\t\t\t\tnextWidth = nextWidth === 'auto' ? null : nextWidth;\n\t\t\t\t\t\tnextHeight = nextHeight === 'auto' ? null : nextHeight;\n\n\t\t\t\t\t\t// Update width.\n\t\t\t\t\t\tif ( ! nextWidth ) {\n\t\t\t\t\t\t\tdelete nextValue.width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnextValue.width = nextWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Update height.\n\t\t\t\t\t\tif ( ! nextHeight ) {\n\t\t\t\t\t\t\tdelete nextValue.height;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnextValue.height = nextHeight;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Auto-update aspectRatio.\n\t\t\t\t\t\tif ( nextWidth && nextHeight ) {\n\t\t\t\t\t\t\tdelete nextValue.aspectRatio;\n\t\t\t\t\t\t} else if ( lastAspectRatio ) {\n\t\t\t\t\t\t\tnextValue.aspectRatio = lastAspectRatio;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// No setting defaultAspectRatio here, because\n\t\t\t\t\t\t\t// aspectRatio is optional in this scenario,\n\t\t\t\t\t\t\t// unlike scale.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Auto-update scale.\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t! lastAspectRatio &&\n\t\t\t\t\t\t\t!! nextWidth !== !! nextHeight\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdelete nextValue.scale;\n\t\t\t\t\t\t} else if ( lastScale ) {\n\t\t\t\t\t\t\tnextValue.scale = lastScale;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnextValue.scale = defaultScale;\n\t\t\t\t\t\t\tsetLastScale( defaultScale );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange( nextValue );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ tools.includes( 'scale' ) && showScaleControl && (\n\t\t\t\t<ScaleTool\n\t\t\t\t\tpanelId={ panelId }\n\t\t\t\t\toptions={ scaleOptions }\n\t\t\t\t\tdefaultValue={ defaultScale }\n\t\t\t\t\tvalue={ lastScale }\n\t\t\t\t\tonChange={ ( nextScale ) => {\n\t\t\t\t\t\tconst nextValue = { ...value };\n\n\t\t\t\t\t\t// 'fill' is CSS default, so it gets treated as null.\n\t\t\t\t\t\tnextScale = nextScale === 'fill' ? null : nextScale;\n\n\t\t\t\t\t\tsetLastScale( nextScale );\n\n\t\t\t\t\t\t// Update scale.\n\t\t\t\t\t\tif ( ! nextScale ) {\n\t\t\t\t\t\t\tdelete nextValue.scale;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnextValue.scale = nextScale;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange( nextValue );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default DimensionsTool;\n"],"mappings":"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","ignoreList":[]}