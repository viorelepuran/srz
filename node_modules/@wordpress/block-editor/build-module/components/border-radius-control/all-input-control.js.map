{"version":3,"names":["__experimentalUnitControl","UnitControl","__","getAllValue","getAllUnit","hasMixedValues","hasDefinedValues","jsx","_jsx","AllInputControl","onChange","selectedUnits","setSelectedUnits","values","props","allValue","undefined","hasValues","isMixed","allPlaceholder","handleOnChange","next","isNumeric","isNaN","parseFloat","nextValue","handleOnUnitChange","unit","topLeft","topRight","bottomLeft","bottomRight","disableUnits","isOnly","value","onUnitChange","placeholder","size"],"sources":["@wordpress/block-editor/src/components/border-radius-control/all-input-control.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __experimentalUnitControl as UnitControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetAllValue,\n\tgetAllUnit,\n\thasMixedValues,\n\thasDefinedValues,\n} from './utils';\n\nexport default function AllInputControl( {\n\tonChange,\n\tselectedUnits,\n\tsetSelectedUnits,\n\tvalues,\n\t...props\n} ) {\n\tlet allValue = getAllValue( values );\n\n\tif ( allValue === undefined ) {\n\t\t// If we don't have any value set the unit to any current selection\n\t\t// or the most common unit from the individual radii values.\n\t\tallValue = getAllUnit( selectedUnits );\n\t}\n\n\tconst hasValues = hasDefinedValues( values );\n\tconst isMixed = hasValues && hasMixedValues( values );\n\tconst allPlaceholder = isMixed ? __( 'Mixed' ) : null;\n\n\t// Filter out CSS-unit-only values to prevent invalid styles.\n\tconst handleOnChange = ( next ) => {\n\t\tconst isNumeric = ! isNaN( parseFloat( next ) );\n\t\tconst nextValue = isNumeric ? next : undefined;\n\t\tonChange( nextValue );\n\t};\n\n\t// Store current unit selection for use as fallback for individual\n\t// radii controls.\n\tconst handleOnUnitChange = ( unit ) => {\n\t\tsetSelectedUnits( {\n\t\t\ttopLeft: unit,\n\t\t\ttopRight: unit,\n\t\t\tbottomLeft: unit,\n\t\t\tbottomRight: unit,\n\t\t} );\n\t};\n\n\treturn (\n\t\t<UnitControl\n\t\t\t{ ...props }\n\t\t\taria-label={ __( 'Border radius' ) }\n\t\t\tdisableUnits={ isMixed }\n\t\t\tisOnly\n\t\t\tvalue={ allValue }\n\t\t\tonChange={ handleOnChange }\n\t\t\tonUnitChange={ handleOnUnitChange }\n\t\t\tplaceholder={ allPlaceholder }\n\t\t\tsize=\"__unstable-large\"\n\t\t/>\n\t);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,yBAAyB,IAAIC,WAAW,QAAQ,uBAAuB;AAChF,SAASC,EAAE,QAAQ,iBAAiB;;AAEpC;AACA;AACA;AACA,SACCC,WAAW,EACXC,UAAU,EACVC,cAAc,EACdC,gBAAgB,QACV,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEjB,eAAe,SAASC,eAAeA,CAAE;EACxCC,QAAQ;EACRC,aAAa;EACbC,gBAAgB;EAChBC,MAAM;EACN,GAAGC;AACJ,CAAC,EAAG;EACH,IAAIC,QAAQ,GAAGZ,WAAW,CAAEU,MAAO,CAAC;EAEpC,IAAKE,QAAQ,KAAKC,SAAS,EAAG;IAC7B;IACA;IACAD,QAAQ,GAAGX,UAAU,CAAEO,aAAc,CAAC;EACvC;EAEA,MAAMM,SAAS,GAAGX,gBAAgB,CAAEO,MAAO,CAAC;EAC5C,MAAMK,OAAO,GAAGD,SAAS,IAAIZ,cAAc,CAAEQ,MAAO,CAAC;EACrD,MAAMM,cAAc,GAAGD,OAAO,GAAGhB,EAAE,CAAE,OAAQ,CAAC,GAAG,IAAI;;EAErD;EACA,MAAMkB,cAAc,GAAKC,IAAI,IAAM;IAClC,MAAMC,SAAS,GAAG,CAAEC,KAAK,CAAEC,UAAU,CAAEH,IAAK,CAAE,CAAC;IAC/C,MAAMI,SAAS,GAAGH,SAAS,GAAGD,IAAI,GAAGL,SAAS;IAC9CN,QAAQ,CAAEe,SAAU,CAAC;EACtB,CAAC;;EAED;EACA;EACA,MAAMC,kBAAkB,GAAKC,IAAI,IAAM;IACtCf,gBAAgB,CAAE;MACjBgB,OAAO,EAAED,IAAI;MACbE,QAAQ,EAAEF,IAAI;MACdG,UAAU,EAAEH,IAAI;MAChBI,WAAW,EAAEJ;IACd,CAAE,CAAC;EACJ,CAAC;EAED,oBACCnB,IAAA,CAACP,WAAW;IAAA,GACNa,KAAK;IACV,cAAaZ,EAAE,CAAE,eAAgB,CAAG;IACpC8B,YAAY,EAAGd,OAAS;IACxBe,MAAM;IACNC,KAAK,EAAGnB,QAAU;IAClBL,QAAQ,EAAGU,cAAgB;IAC3Be,YAAY,EAAGT,kBAAoB;IACnCU,WAAW,EAAGjB,cAAgB;IAC9BkB,IAAI,EAAC;EAAkB,CACvB,CAAC;AAEJ","ignoreList":[]}