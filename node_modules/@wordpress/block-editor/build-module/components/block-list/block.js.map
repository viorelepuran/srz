{"version":3,"names":["clsx","memo","RawHTML","useContext","useMemo","getBlockType","getSaveContent","isUnmodifiedDefaultBlock","serializeRawBlock","switchToBlockType","getDefaultBlockName","isUnmodifiedBlock","isReusableBlock","getBlockDefaultClassName","hasBlockSupport","createBlock","store","blocksStore","withFilters","withDispatch","useSelect","compose","safeHTML","BlockEdit","BlockInvalidWarning","BlockCrashWarning","BlockCrashBoundary","BlockHtml","useBlockProps","blockEditorStore","useLayout","PrivateBlockContext","unlock","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","mergeWrapperProps","propsA","propsB","newProps","hasOwnProperty","className","style","Block","children","isHtml","props","__unstableIsHtml","BlockListBlock","block","__unstableBlockSource","mode","isLocked","canRemove","clientId","isSelected","isSelectionEnabled","__unstableLayoutClassNames","layoutClassNames","name","isValid","attributes","wrapperProps","setAttributes","onReplace","onRemove","onInsertBlocksAfter","onMerge","toggleSelection","_wrapperProps","mayDisplayControls","mayDisplayParentControls","themeSupportsLayout","context","parentLayout","blockEdit","insertBlocksAfter","undefined","mergeBlocks","__unstableParentLayout","Object","keys","length","blockEditingMode","isPreviewMode","blockType","getEditWrapperProps","isAligned","isSticky","includes","saveContent","display","apiVersion","dataAlign","restWrapperProps","updatedWrapperProps","Provider","value","fallback","applyWithDispatch","dispatch","ownProps","registry","updateBlockAttributes","insertBlocks","replaceBlocks","__unstableMarkLastChangeAsPersistent","moveBlocksToPosition","removeBlock","selectBlock","nextAttributes","getMultiSelectedBlockClientIds","select","multiSelectedBlockClientIds","clientIds","newAttributes","onInsertBlocks","blocks","index","rootClientId","getBlockIndex","forward","getPreviousBlockClientId","getNextBlockClientId","getBlock","getBlockAttributes","getBlockName","getBlockOrder","getBlockRootClientId","canInsertBlockType","switchToDefaultOrRemove","defaultBlockName","defaultBlockType","replacement","nextBlockClientId","batch","merge","moveFirstItemUp","_clientId","changeSelection","wrapperBlockName","wrapperBlockType","isTextualWrapper","category","targetRootClientId","blockOrder","firstClientId","every","nextRootClientId","rootAttributes","previousRootAttributes","key","previousBlockClientId","previousRootClientId","indexToSelect","initialPosition","replacementBlocks","Array","isArray","selectionEnabled","BlockListBlockProvider","selectedProps","isBlockSelected","getBlockMode","getTemplateLock","isSectionBlock","_isSectionBlock","getBlockWithoutAttributes","canRemoveBlock","canMoveBlock","getSettings","getTemporarilyEditingAsBlocks","getBlockEditingMode","isFirstMultiSelectedBlock","hasSelectedInnerBlock","getBlocksByName","isBlockMultiSelected","isBlockSubtreeDisabled","isBlockHighlighted","__unstableIsFullySelected","__unstableSelectionHasUnmergeableBlock","isBlockBeingDragged","isDragging","__unstableHasActiveBlockOverlayActive","getSelectedBlocksInitialCaretPosition","blockWithoutAttributes","_hasBlockSupport","getActiveBlockVariation","blockName","supportsLayout","hasLightBlockWrapper","previewContext","isReusable","defaultClassName","blockTitle","title","_isSelected","canMove","match","isMultiSelected","checkDeep","isAncestorOfSelectedBlock","multiple","blocksWithSameName","isInvalid","isTemporarilyEditingAsBlocks","id","blockApiVersion","isSubtreeDisabled","hasOverlay","isHighlighted","isPartiallySelected","hasChildSelected","isEditingDisabled","hasEditableOutline","originalBlockClientId","privateContext"],"sources":["@wordpress/block-editor/src/components/block-list/block.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { memo, RawHTML, useContext, useMemo } from '@wordpress/element';\nimport {\n\tgetBlockType,\n\tgetSaveContent,\n\tisUnmodifiedDefaultBlock,\n\tserializeRawBlock,\n\tswitchToBlockType,\n\tgetDefaultBlockName,\n\tisUnmodifiedBlock,\n\tisReusableBlock,\n\tgetBlockDefaultClassName,\n\thasBlockSupport,\n\tcreateBlock,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { withFilters } from '@wordpress/components';\nimport { withDispatch, useSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { safeHTML } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport BlockEdit from '../block-edit';\nimport BlockInvalidWarning from './block-invalid-warning';\nimport BlockCrashWarning from './block-crash-warning';\nimport BlockCrashBoundary from './block-crash-boundary';\nimport BlockHtml from './block-html';\nimport { useBlockProps } from './use-block-props';\nimport { store as blockEditorStore } from '../../store';\nimport { useLayout } from './layout';\nimport { PrivateBlockContext } from './private-block-context';\n\nimport { unlock } from '../../lock-unlock';\n\n/**\n * Merges wrapper props with special handling for classNames and styles.\n *\n * @param {Object} propsA\n * @param {Object} propsB\n *\n * @return {Object} Merged props.\n */\nfunction mergeWrapperProps( propsA, propsB ) {\n\tconst newProps = {\n\t\t...propsA,\n\t\t...propsB,\n\t};\n\n\t// May be set to undefined, so check if the property is set!\n\tif (\n\t\tpropsA?.hasOwnProperty( 'className' ) &&\n\t\tpropsB?.hasOwnProperty( 'className' )\n\t) {\n\t\tnewProps.className = clsx( propsA.className, propsB.className );\n\t}\n\n\tif (\n\t\tpropsA?.hasOwnProperty( 'style' ) &&\n\t\tpropsB?.hasOwnProperty( 'style' )\n\t) {\n\t\tnewProps.style = { ...propsA.style, ...propsB.style };\n\t}\n\n\treturn newProps;\n}\n\nfunction Block( { children, isHtml, ...props } ) {\n\treturn (\n\t\t<div { ...useBlockProps( props, { __unstableIsHtml: isHtml } ) }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n}\n\nfunction BlockListBlock( {\n\tblock: { __unstableBlockSource },\n\tmode,\n\tisLocked,\n\tcanRemove,\n\tclientId,\n\tisSelected,\n\tisSelectionEnabled,\n\tclassName,\n\t__unstableLayoutClassNames: layoutClassNames,\n\tname,\n\tisValid,\n\tattributes,\n\twrapperProps,\n\tsetAttributes,\n\tonReplace,\n\tonRemove,\n\tonInsertBlocksAfter,\n\tonMerge,\n\ttoggleSelection,\n} ) {\n\tconst {\n\t\tmayDisplayControls,\n\t\tmayDisplayParentControls,\n\t\tthemeSupportsLayout,\n\t\t...context\n\t} = useContext( PrivateBlockContext );\n\n\tconst parentLayout = useLayout() || {};\n\n\t// We wrap the BlockEdit component in a div that hides it when editing in\n\t// HTML mode. This allows us to render all of the ancillary pieces\n\t// (InspectorControls, etc.) which are inside `BlockEdit` but not\n\t// `BlockHTML`, even in HTML mode.\n\tlet blockEdit = (\n\t\t<BlockEdit\n\t\t\tname={ name }\n\t\t\tisSelected={ isSelected }\n\t\t\tattributes={ attributes }\n\t\t\tsetAttributes={ setAttributes }\n\t\t\tinsertBlocksAfter={ isLocked ? undefined : onInsertBlocksAfter }\n\t\t\tonReplace={ canRemove ? onReplace : undefined }\n\t\t\tonRemove={ canRemove ? onRemove : undefined }\n\t\t\tmergeBlocks={ canRemove ? onMerge : undefined }\n\t\t\tclientId={ clientId }\n\t\t\tisSelectionEnabled={ isSelectionEnabled }\n\t\t\ttoggleSelection={ toggleSelection }\n\t\t\t__unstableLayoutClassNames={ layoutClassNames }\n\t\t\t__unstableParentLayout={\n\t\t\t\tObject.keys( parentLayout ).length ? parentLayout : undefined\n\t\t\t}\n\t\t\tmayDisplayControls={ mayDisplayControls }\n\t\t\tmayDisplayParentControls={ mayDisplayParentControls }\n\t\t\tblockEditingMode={ context.blockEditingMode }\n\t\t\tisPreviewMode={ context.isPreviewMode }\n\t\t/>\n\t);\n\n\tconst blockType = getBlockType( name );\n\n\t// Determine whether the block has props to apply to the wrapper.\n\tif ( blockType?.getEditWrapperProps ) {\n\t\twrapperProps = mergeWrapperProps(\n\t\t\twrapperProps,\n\t\t\tblockType.getEditWrapperProps( attributes )\n\t\t);\n\t}\n\n\tconst isAligned =\n\t\twrapperProps &&\n\t\t!! wrapperProps[ 'data-align' ] &&\n\t\t! themeSupportsLayout;\n\n\t// Support for sticky position in classic themes with alignment wrappers.\n\n\tconst isSticky = className?.includes( 'is-position-sticky' );\n\n\t// For aligned blocks, provide a wrapper element so the block can be\n\t// positioned relative to the block column.\n\t// This is only kept for classic themes that don't support layout\n\t// Historically we used to rely on extra divs and data-align to\n\t// provide the alignments styles in the editor.\n\t// Due to the differences between frontend and backend, we migrated\n\t// to the layout feature, and we're now aligning the markup of frontend\n\t// and backend.\n\tif ( isAligned ) {\n\t\tblockEdit = (\n\t\t\t<div\n\t\t\t\tclassName={ clsx( 'wp-block', isSticky && className ) }\n\t\t\t\tdata-align={ wrapperProps[ 'data-align' ] }\n\t\t\t>\n\t\t\t\t{ blockEdit }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tlet block;\n\n\tif ( ! isValid ) {\n\t\tconst saveContent = __unstableBlockSource\n\t\t\t? serializeRawBlock( __unstableBlockSource )\n\t\t\t: getSaveContent( blockType, attributes );\n\n\t\tblock = (\n\t\t\t<Block className=\"has-warning\">\n\t\t\t\t<BlockInvalidWarning clientId={ clientId } />\n\t\t\t\t<RawHTML>{ safeHTML( saveContent ) }</RawHTML>\n\t\t\t</Block>\n\t\t);\n\t} else if ( mode === 'html' ) {\n\t\t// Render blockEdit so the inspector controls don't disappear.\n\t\t// See #8969.\n\t\tblock = (\n\t\t\t<>\n\t\t\t\t<div style={ { display: 'none' } }>{ blockEdit }</div>\n\t\t\t\t<Block isHtml>\n\t\t\t\t\t<BlockHtml clientId={ clientId } />\n\t\t\t\t</Block>\n\t\t\t</>\n\t\t);\n\t} else if ( blockType?.apiVersion > 1 ) {\n\t\tblock = blockEdit;\n\t} else {\n\t\tblock = <Block>{ blockEdit }</Block>;\n\t}\n\n\tconst { 'data-align': dataAlign, ...restWrapperProps } = wrapperProps ?? {};\n\tconst updatedWrapperProps = {\n\t\t...restWrapperProps,\n\t\tclassName: clsx(\n\t\t\trestWrapperProps.className,\n\t\t\tdataAlign && themeSupportsLayout && `align${ dataAlign }`,\n\t\t\t! ( dataAlign && isSticky ) && className\n\t\t),\n\t};\n\n\t// We set a new context with the adjusted and filtered wrapperProps (through\n\t// `editor.BlockListBlock`), which the `BlockListBlockProvider` did not have\n\t// access to.\n\t// Note that the context value doesn't have to be memoized in this case\n\t// because when it changes, this component will be re-rendered anyway, and\n\t// none of the consumers (BlockListBlock and useBlockProps) are memoized or\n\t// \"pure\". This is different from the public BlockEditContext, where\n\t// consumers might be memoized or \"pure\".\n\treturn (\n\t\t<PrivateBlockContext.Provider\n\t\t\tvalue={ {\n\t\t\t\twrapperProps: updatedWrapperProps,\n\t\t\t\tisAligned,\n\t\t\t\t...context,\n\t\t\t} }\n\t\t>\n\t\t\t<BlockCrashBoundary\n\t\t\t\tfallback={\n\t\t\t\t\t<Block className=\"has-warning\">\n\t\t\t\t\t\t<BlockCrashWarning />\n\t\t\t\t\t</Block>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{ block }\n\t\t\t</BlockCrashBoundary>\n\t\t</PrivateBlockContext.Provider>\n\t);\n}\n\nconst applyWithDispatch = withDispatch( ( dispatch, ownProps, registry ) => {\n\tconst {\n\t\tupdateBlockAttributes,\n\t\tinsertBlocks,\n\t\tmergeBlocks,\n\t\treplaceBlocks,\n\t\ttoggleSelection,\n\t\t__unstableMarkLastChangeAsPersistent,\n\t\tmoveBlocksToPosition,\n\t\tremoveBlock,\n\t\tselectBlock,\n\t} = dispatch( blockEditorStore );\n\n\t// Do not add new properties here, use `useDispatch` instead to avoid\n\t// leaking new props to the public API (editor.BlockListBlock filter).\n\treturn {\n\t\tsetAttributes( nextAttributes ) {\n\t\t\tconst { getMultiSelectedBlockClientIds } =\n\t\t\t\tregistry.select( blockEditorStore );\n\t\t\tconst multiSelectedBlockClientIds =\n\t\t\t\tgetMultiSelectedBlockClientIds();\n\t\t\tconst { clientId, attributes } = ownProps;\n\t\t\tconst clientIds = multiSelectedBlockClientIds.length\n\t\t\t\t? multiSelectedBlockClientIds\n\t\t\t\t: [ clientId ];\n\t\t\tconst newAttributes =\n\t\t\t\ttypeof nextAttributes === 'function'\n\t\t\t\t\t? nextAttributes( attributes )\n\t\t\t\t\t: nextAttributes;\n\n\t\t\tupdateBlockAttributes( clientIds, newAttributes );\n\t\t},\n\t\tonInsertBlocks( blocks, index ) {\n\t\t\tconst { rootClientId } = ownProps;\n\t\t\tinsertBlocks( blocks, index, rootClientId );\n\t\t},\n\t\tonInsertBlocksAfter( blocks ) {\n\t\t\tconst { clientId, rootClientId } = ownProps;\n\t\t\tconst { getBlockIndex } = registry.select( blockEditorStore );\n\t\t\tconst index = getBlockIndex( clientId );\n\t\t\tinsertBlocks( blocks, index + 1, rootClientId );\n\t\t},\n\t\tonMerge( forward ) {\n\t\t\tconst { clientId, rootClientId } = ownProps;\n\t\t\tconst {\n\t\t\t\tgetPreviousBlockClientId,\n\t\t\t\tgetNextBlockClientId,\n\t\t\t\tgetBlock,\n\t\t\t\tgetBlockAttributes,\n\t\t\t\tgetBlockName,\n\t\t\t\tgetBlockOrder,\n\t\t\t\tgetBlockIndex,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tcanInsertBlockType,\n\t\t\t} = registry.select( blockEditorStore );\n\n\t\t\tfunction switchToDefaultOrRemove() {\n\t\t\t\tconst block = getBlock( clientId );\n\t\t\t\tconst defaultBlockName = getDefaultBlockName();\n\t\t\t\tconst defaultBlockType = getBlockType( defaultBlockName );\n\t\t\t\tif ( getBlockName( clientId ) !== defaultBlockName ) {\n\t\t\t\t\tconst replacement = switchToBlockType(\n\t\t\t\t\t\tblock,\n\t\t\t\t\t\tdefaultBlockName\n\t\t\t\t\t);\n\t\t\t\t\tif ( replacement && replacement.length ) {\n\t\t\t\t\t\treplaceBlocks( clientId, replacement );\n\t\t\t\t\t}\n\t\t\t\t} else if ( isUnmodifiedDefaultBlock( block ) ) {\n\t\t\t\t\tconst nextBlockClientId = getNextBlockClientId( clientId );\n\t\t\t\t\tif ( nextBlockClientId ) {\n\t\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\t\tremoveBlock( clientId );\n\t\t\t\t\t\t\tselectBlock( nextBlockClientId );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} else if ( defaultBlockType.merge ) {\n\t\t\t\t\tconst attributes = defaultBlockType.merge(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tblock.attributes\n\t\t\t\t\t);\n\t\t\t\t\treplaceBlocks(\n\t\t\t\t\t\t[ clientId ],\n\t\t\t\t\t\t[ createBlock( defaultBlockName, attributes ) ]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Moves the block with clientId up one level. If the block type\n\t\t\t * cannot be inserted at the new location, it will be attempted to\n\t\t\t * convert to the default block type.\n\t\t\t *\n\t\t\t * @param {string}  _clientId       The block to move.\n\t\t\t * @param {boolean} changeSelection Whether to change the selection\n\t\t\t *                                  to the moved block.\n\t\t\t */\n\t\t\tfunction moveFirstItemUp( _clientId, changeSelection = true ) {\n\t\t\t\tconst wrapperBlockName = getBlockName( _clientId );\n\t\t\t\tconst wrapperBlockType = getBlockType( wrapperBlockName );\n\t\t\t\tconst isTextualWrapper = wrapperBlockType.category === 'text';\n\t\t\t\tconst targetRootClientId = getBlockRootClientId( _clientId );\n\t\t\t\tconst blockOrder = getBlockOrder( _clientId );\n\t\t\t\tconst [ firstClientId ] = blockOrder;\n\n\t\t\t\tif (\n\t\t\t\t\tblockOrder.length === 1 &&\n\t\t\t\t\tisUnmodifiedBlock( getBlock( firstClientId ) )\n\t\t\t\t) {\n\t\t\t\t\tremoveBlock( _clientId );\n\t\t\t\t} else if ( isTextualWrapper ) {\n\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tcanInsertBlockType(\n\t\t\t\t\t\t\t\tgetBlockName( firstClientId ),\n\t\t\t\t\t\t\t\ttargetRootClientId\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmoveBlocksToPosition(\n\t\t\t\t\t\t\t\t[ firstClientId ],\n\t\t\t\t\t\t\t\t_clientId,\n\t\t\t\t\t\t\t\ttargetRootClientId,\n\t\t\t\t\t\t\t\tgetBlockIndex( _clientId )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst replacement = switchToBlockType(\n\t\t\t\t\t\t\t\tgetBlock( firstClientId ),\n\t\t\t\t\t\t\t\tgetDefaultBlockName()\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\treplacement &&\n\t\t\t\t\t\t\t\treplacement.length &&\n\t\t\t\t\t\t\t\treplacement.every( ( block ) =>\n\t\t\t\t\t\t\t\t\tcanInsertBlockType(\n\t\t\t\t\t\t\t\t\t\tblock.name,\n\t\t\t\t\t\t\t\t\t\ttargetRootClientId\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tinsertBlocks(\n\t\t\t\t\t\t\t\t\treplacement,\n\t\t\t\t\t\t\t\t\tgetBlockIndex( _clientId ),\n\t\t\t\t\t\t\t\t\ttargetRootClientId,\n\t\t\t\t\t\t\t\t\tchangeSelection\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tremoveBlock( firstClientId, false );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tswitchToDefaultOrRemove();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t! getBlockOrder( _clientId ).length &&\n\t\t\t\t\t\t\tisUnmodifiedBlock( getBlock( _clientId ) )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveBlock( _clientId, false );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tswitchToDefaultOrRemove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For `Delete` or forward merge, we should do the exact same thing\n\t\t\t// as `Backspace`, but from the other block.\n\t\t\tif ( forward ) {\n\t\t\t\tif ( rootClientId ) {\n\t\t\t\t\tconst nextRootClientId =\n\t\t\t\t\t\tgetNextBlockClientId( rootClientId );\n\n\t\t\t\t\tif ( nextRootClientId ) {\n\t\t\t\t\t\t// If there is a block that follows with the same parent\n\t\t\t\t\t\t// block name and the same attributes, merge the inner\n\t\t\t\t\t\t// blocks.\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tgetBlockName( rootClientId ) ===\n\t\t\t\t\t\t\tgetBlockName( nextRootClientId )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst rootAttributes =\n\t\t\t\t\t\t\t\tgetBlockAttributes( rootClientId );\n\t\t\t\t\t\t\tconst previousRootAttributes =\n\t\t\t\t\t\t\t\tgetBlockAttributes( nextRootClientId );\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tObject.keys( rootAttributes ).every(\n\t\t\t\t\t\t\t\t\t( key ) =>\n\t\t\t\t\t\t\t\t\t\trootAttributes[ key ] ===\n\t\t\t\t\t\t\t\t\t\tpreviousRootAttributes[ key ]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\t\t\t\tmoveBlocksToPosition(\n\t\t\t\t\t\t\t\t\t\tgetBlockOrder( nextRootClientId ),\n\t\t\t\t\t\t\t\t\t\tnextRootClientId,\n\t\t\t\t\t\t\t\t\t\trootClientId\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tremoveBlock( nextRootClientId, false );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmergeBlocks( rootClientId, nextRootClientId );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst nextBlockClientId = getNextBlockClientId( clientId );\n\n\t\t\t\tif ( ! nextBlockClientId ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( getBlockOrder( nextBlockClientId ).length ) {\n\t\t\t\t\tmoveFirstItemUp( nextBlockClientId, false );\n\t\t\t\t} else {\n\t\t\t\t\tmergeBlocks( clientId, nextBlockClientId );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst previousBlockClientId =\n\t\t\t\t\tgetPreviousBlockClientId( clientId );\n\n\t\t\t\tif ( previousBlockClientId ) {\n\t\t\t\t\tmergeBlocks( previousBlockClientId, clientId );\n\t\t\t\t} else if ( rootClientId ) {\n\t\t\t\t\tconst previousRootClientId =\n\t\t\t\t\t\tgetPreviousBlockClientId( rootClientId );\n\n\t\t\t\t\t// If there is a preceding block with the same parent block\n\t\t\t\t\t// name and the same attributes, merge the inner blocks.\n\t\t\t\t\tif (\n\t\t\t\t\t\tpreviousRootClientId &&\n\t\t\t\t\t\tgetBlockName( rootClientId ) ===\n\t\t\t\t\t\t\tgetBlockName( previousRootClientId )\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst rootAttributes =\n\t\t\t\t\t\t\tgetBlockAttributes( rootClientId );\n\t\t\t\t\t\tconst previousRootAttributes =\n\t\t\t\t\t\t\tgetBlockAttributes( previousRootClientId );\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tObject.keys( rootAttributes ).every(\n\t\t\t\t\t\t\t\t( key ) =>\n\t\t\t\t\t\t\t\t\trootAttributes[ key ] ===\n\t\t\t\t\t\t\t\t\tpreviousRootAttributes[ key ]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\t\t\tmoveBlocksToPosition(\n\t\t\t\t\t\t\t\t\tgetBlockOrder( rootClientId ),\n\t\t\t\t\t\t\t\t\trootClientId,\n\t\t\t\t\t\t\t\t\tpreviousRootClientId\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tremoveBlock( rootClientId, false );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tmoveFirstItemUp( rootClientId );\n\t\t\t\t} else {\n\t\t\t\t\tswitchToDefaultOrRemove();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonReplace( blocks, indexToSelect, initialPosition ) {\n\t\t\tif (\n\t\t\t\tblocks.length &&\n\t\t\t\t! isUnmodifiedDefaultBlock( blocks[ blocks.length - 1 ] )\n\t\t\t) {\n\t\t\t\t__unstableMarkLastChangeAsPersistent();\n\t\t\t}\n\t\t\t//Unsynced patterns are nested in an array so we need to flatten them.\n\t\t\tconst replacementBlocks =\n\t\t\t\tblocks?.length === 1 && Array.isArray( blocks[ 0 ] )\n\t\t\t\t\t? blocks[ 0 ]\n\t\t\t\t\t: blocks;\n\t\t\treplaceBlocks(\n\t\t\t\t[ ownProps.clientId ],\n\t\t\t\treplacementBlocks,\n\t\t\t\tindexToSelect,\n\t\t\t\tinitialPosition\n\t\t\t);\n\t\t},\n\t\tonRemove() {\n\t\t\tremoveBlock( ownProps.clientId );\n\t\t},\n\t\ttoggleSelection( selectionEnabled ) {\n\t\t\ttoggleSelection( selectionEnabled );\n\t\t},\n\t};\n} );\n\n// This component is used by the BlockListBlockProvider component below. It will\n// add the props necessary for the `editor.BlockListBlock` filters.\nBlockListBlock = compose(\n\tapplyWithDispatch,\n\twithFilters( 'editor.BlockListBlock' )\n)( BlockListBlock );\n\n// This component provides all the information we need through a single store\n// subscription (useSelect mapping). Only the necessary props are passed down\n// to the BlockListBlock component, which is a filtered component, so these\n// props are public API. To avoid adding to the public API, we use a private\n// context to pass the rest of the information to the filtered BlockListBlock\n// component, and useBlockProps.\nfunction BlockListBlockProvider( props ) {\n\tconst { clientId, rootClientId } = props;\n\tconst selectedProps = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tisBlockSelected,\n\t\t\t\tgetBlockMode,\n\t\t\t\tisSelectionEnabled,\n\t\t\t\tgetTemplateLock,\n\t\t\t\tisSectionBlock: _isSectionBlock,\n\t\t\t\tgetBlockWithoutAttributes,\n\t\t\t\tgetBlockAttributes,\n\t\t\t\tcanRemoveBlock,\n\t\t\t\tcanMoveBlock,\n\n\t\t\t\tgetSettings,\n\t\t\t\tgetTemporarilyEditingAsBlocks,\n\t\t\t\tgetBlockEditingMode,\n\t\t\t\tgetBlockName,\n\t\t\t\tisFirstMultiSelectedBlock,\n\t\t\t\tgetMultiSelectedBlockClientIds,\n\t\t\t\thasSelectedInnerBlock,\n\t\t\t\tgetBlocksByName,\n\n\t\t\t\tgetBlockIndex,\n\t\t\t\tisBlockMultiSelected,\n\t\t\t\tisBlockSubtreeDisabled,\n\t\t\t\tisBlockHighlighted,\n\t\t\t\t__unstableIsFullySelected,\n\t\t\t\t__unstableSelectionHasUnmergeableBlock,\n\t\t\t\tisBlockBeingDragged,\n\t\t\t\tisDragging,\n\t\t\t\t__unstableHasActiveBlockOverlayActive,\n\t\t\t\tgetSelectedBlocksInitialCaretPosition,\n\t\t\t} = unlock( select( blockEditorStore ) );\n\t\t\tconst blockWithoutAttributes =\n\t\t\t\tgetBlockWithoutAttributes( clientId );\n\n\t\t\t// This is a temporary fix.\n\t\t\t// This function should never be called when a block is not\n\t\t\t// present in the state. It happens now because the order in\n\t\t\t// withSelect rendering is not correct.\n\t\t\tif ( ! blockWithoutAttributes ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\thasBlockSupport: _hasBlockSupport,\n\t\t\t\tgetActiveBlockVariation,\n\t\t\t} = select( blocksStore );\n\t\t\tconst attributes = getBlockAttributes( clientId );\n\t\t\tconst { name: blockName, isValid } = blockWithoutAttributes;\n\t\t\tconst blockType = getBlockType( blockName );\n\t\t\tconst { supportsLayout, isPreviewMode } = getSettings();\n\t\t\tconst hasLightBlockWrapper = blockType?.apiVersion > 1;\n\t\t\tconst previewContext = {\n\t\t\t\tisPreviewMode,\n\t\t\t\tblockWithoutAttributes,\n\t\t\t\tname: blockName,\n\t\t\t\tattributes,\n\t\t\t\tisValid,\n\t\t\t\tthemeSupportsLayout: supportsLayout,\n\t\t\t\tindex: getBlockIndex( clientId ),\n\t\t\t\tisReusable: isReusableBlock( blockType ),\n\t\t\t\tclassName: hasLightBlockWrapper\n\t\t\t\t\t? attributes.className\n\t\t\t\t\t: undefined,\n\t\t\t\tdefaultClassName: hasLightBlockWrapper\n\t\t\t\t\t? getBlockDefaultClassName( blockName )\n\t\t\t\t\t: undefined,\n\t\t\t\tblockTitle: blockType?.title,\n\t\t\t};\n\n\t\t\t// When in preview mode, we can avoid a lot of selection and\n\t\t\t// editing related selectors.\n\t\t\tif ( isPreviewMode ) {\n\t\t\t\treturn previewContext;\n\t\t\t}\n\n\t\t\tconst _isSelected = isBlockSelected( clientId );\n\t\t\tconst canRemove = canRemoveBlock( clientId );\n\t\t\tconst canMove = canMoveBlock( clientId );\n\t\t\tconst match = getActiveBlockVariation( blockName, attributes );\n\t\t\tconst isMultiSelected = isBlockMultiSelected( clientId );\n\t\t\tconst checkDeep = true;\n\t\t\tconst isAncestorOfSelectedBlock = hasSelectedInnerBlock(\n\t\t\t\tclientId,\n\t\t\t\tcheckDeep\n\t\t\t);\n\t\t\tconst blockEditingMode = getBlockEditingMode( clientId );\n\n\t\t\tconst multiple = hasBlockSupport( blockName, 'multiple', true );\n\n\t\t\t// For block types with `multiple` support, there is no \"original\n\t\t\t// block\" to be found in the content, as the block itself is valid.\n\t\t\tconst blocksWithSameName = multiple\n\t\t\t\t? []\n\t\t\t\t: getBlocksByName( blockName );\n\t\t\tconst isInvalid =\n\t\t\t\tblocksWithSameName.length &&\n\t\t\t\tblocksWithSameName[ 0 ] !== clientId;\n\n\t\t\treturn {\n\t\t\t\t...previewContext,\n\t\t\t\tmode: getBlockMode( clientId ),\n\t\t\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\t\t\tisLocked: !! getTemplateLock( rootClientId ),\n\t\t\t\tisSectionBlock: _isSectionBlock( clientId ),\n\t\t\t\tcanRemove,\n\t\t\t\tcanMove,\n\t\t\t\tisSelected: _isSelected,\n\t\t\t\tisTemporarilyEditingAsBlocks:\n\t\t\t\t\tgetTemporarilyEditingAsBlocks() === clientId,\n\t\t\t\tblockEditingMode,\n\t\t\t\tmayDisplayControls:\n\t\t\t\t\t_isSelected ||\n\t\t\t\t\t( isFirstMultiSelectedBlock( clientId ) &&\n\t\t\t\t\t\tgetMultiSelectedBlockClientIds().every(\n\t\t\t\t\t\t\t( id ) => getBlockName( id ) === blockName\n\t\t\t\t\t\t) ),\n\t\t\t\tmayDisplayParentControls:\n\t\t\t\t\t_hasBlockSupport(\n\t\t\t\t\t\tgetBlockName( clientId ),\n\t\t\t\t\t\t'__experimentalExposeControlsToChildren',\n\t\t\t\t\t\tfalse\n\t\t\t\t\t) && hasSelectedInnerBlock( clientId ),\n\t\t\t\tblockApiVersion: blockType?.apiVersion || 1,\n\t\t\t\tblockTitle: match?.title || blockType?.title,\n\t\t\t\tisSubtreeDisabled:\n\t\t\t\t\tblockEditingMode === 'disabled' &&\n\t\t\t\t\tisBlockSubtreeDisabled( clientId ),\n\t\t\t\thasOverlay:\n\t\t\t\t\t__unstableHasActiveBlockOverlayActive( clientId ) &&\n\t\t\t\t\t! isDragging(),\n\t\t\t\tinitialPosition: _isSelected\n\t\t\t\t\t? getSelectedBlocksInitialCaretPosition()\n\t\t\t\t\t: undefined,\n\t\t\t\tisHighlighted: isBlockHighlighted( clientId ),\n\t\t\t\tisMultiSelected,\n\t\t\t\tisPartiallySelected:\n\t\t\t\t\tisMultiSelected &&\n\t\t\t\t\t! __unstableIsFullySelected() &&\n\t\t\t\t\t! __unstableSelectionHasUnmergeableBlock(),\n\t\t\t\tisDragging: isBlockBeingDragged( clientId ),\n\t\t\t\thasChildSelected: isAncestorOfSelectedBlock,\n\t\t\t\tisEditingDisabled: blockEditingMode === 'disabled',\n\t\t\t\thasEditableOutline:\n\t\t\t\t\tblockEditingMode !== 'disabled' &&\n\t\t\t\t\tgetBlockEditingMode( rootClientId ) === 'disabled',\n\t\t\t\toriginalBlockClientId: isInvalid\n\t\t\t\t\t? blocksWithSameName[ 0 ]\n\t\t\t\t\t: false,\n\t\t\t};\n\t\t},\n\t\t[ clientId, rootClientId ]\n\t);\n\n\tconst {\n\t\tisPreviewMode,\n\t\t// Fill values that end up as a public API and may not be defined in\n\t\t// preview mode.\n\t\tmode = 'visual',\n\t\tisSelectionEnabled = false,\n\t\tisLocked = false,\n\t\tcanRemove = false,\n\t\tcanMove = false,\n\t\tblockWithoutAttributes,\n\t\tname,\n\t\tattributes,\n\t\tisValid,\n\t\tisSelected = false,\n\t\tthemeSupportsLayout,\n\t\tisTemporarilyEditingAsBlocks,\n\t\tblockEditingMode,\n\t\tmayDisplayControls,\n\t\tmayDisplayParentControls,\n\t\tindex,\n\t\tblockApiVersion,\n\t\tblockTitle,\n\t\tisSubtreeDisabled,\n\t\thasOverlay,\n\t\tinitialPosition,\n\t\tisHighlighted,\n\t\tisMultiSelected,\n\t\tisPartiallySelected,\n\t\tisReusable,\n\t\tisDragging,\n\t\thasChildSelected,\n\t\tisSectionBlock,\n\t\tisEditingDisabled,\n\t\thasEditableOutline,\n\t\tclassName,\n\t\tdefaultClassName,\n\t\toriginalBlockClientId,\n\t} = selectedProps;\n\n\t// Users of the editor.BlockListBlock filter used to be able to\n\t// access the block prop.\n\t// Ideally these blocks would rely on the clientId prop only.\n\t// This is kept for backward compatibility reasons.\n\tconst block = useMemo(\n\t\t() => ( { ...blockWithoutAttributes, attributes } ),\n\t\t[ blockWithoutAttributes, attributes ]\n\t);\n\n\t// Block is sometimes not mounted at the right time, causing it be\n\t// undefined see issue for more info\n\t// https://github.com/WordPress/gutenberg/issues/17013\n\tif ( ! selectedProps ) {\n\t\treturn null;\n\t}\n\n\tconst privateContext = {\n\t\tisPreviewMode,\n\t\tclientId,\n\t\tclassName,\n\t\tindex,\n\t\tmode,\n\t\tname,\n\t\tblockApiVersion,\n\t\tblockTitle,\n\t\tisSelected,\n\t\tisSubtreeDisabled,\n\t\thasOverlay,\n\t\tinitialPosition,\n\t\tblockEditingMode,\n\t\tisHighlighted,\n\t\tisMultiSelected,\n\t\tisPartiallySelected,\n\t\tisReusable,\n\t\tisDragging,\n\t\thasChildSelected,\n\t\tisSectionBlock,\n\t\tisEditingDisabled,\n\t\thasEditableOutline,\n\t\tisTemporarilyEditingAsBlocks,\n\t\tdefaultClassName,\n\t\tmayDisplayControls,\n\t\tmayDisplayParentControls,\n\t\toriginalBlockClientId,\n\t\tthemeSupportsLayout,\n\t\tcanMove,\n\t};\n\n\t// Here we separate between the props passed to BlockListBlock and any other\n\t// information we selected for internal use. BlockListBlock is a filtered\n\t// component and thus ALL the props are PUBLIC API.\n\n\t// Note that the context value doesn't have to be memoized in this case\n\t// because when it changes, this component will be re-rendered anyway, and\n\t// none of the consumers (BlockListBlock and useBlockProps) are memoized or\n\t// \"pure\". This is different from the public BlockEditContext, where\n\t// consumers might be memoized or \"pure\".\n\treturn (\n\t\t<PrivateBlockContext.Provider value={ privateContext }>\n\t\t\t<BlockListBlock\n\t\t\t\t{ ...props }\n\t\t\t\t// WARNING: all the following props are public API (through the\n\t\t\t\t// editor.BlockListBlock filter) and normally nothing new should\n\t\t\t\t// be added to it.\n\t\t\t\t{ ...{\n\t\t\t\t\tmode,\n\t\t\t\t\tisSelectionEnabled,\n\t\t\t\t\tisLocked,\n\t\t\t\t\tcanRemove,\n\t\t\t\t\tcanMove,\n\t\t\t\t\t// Users of the editor.BlockListBlock filter used to be able\n\t\t\t\t\t// to access the block prop. Ideally these blocks would rely\n\t\t\t\t\t// on the clientId prop only. This is kept for backward\n\t\t\t\t\t// compatibility reasons.\n\t\t\t\t\tblock,\n\t\t\t\t\tname,\n\t\t\t\t\tattributes,\n\t\t\t\t\tisValid,\n\t\t\t\t\tisSelected,\n\t\t\t\t} }\n\t\t\t/>\n\t\t</PrivateBlockContext.Provider>\n\t);\n}\n\nexport default memo( BlockListBlockProvider );\n"],"mappings":"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","ignoreList":[]}