{"version":3,"names":["MenuItem","useDispatch","useSelect","_x","store","blockEditorStore","unlock","jsx","_jsx","ModifyContentLockMenuItem","clientId","onClose","templateLock","isLockedByParent","isEditingAsBlocks","select","getContentLockingParent","getTemplateLock","getTemporarilyEditingAsBlocks","blockEditorActions","isContentLocked","modifyContentLockBlock","showStartEditingAsBlocks","onClick","children"],"sources":["@wordpress/block-editor/src/components/content-lock/modify-content-lock-menu-item.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\n// The implementation of content locking is mainly in this file, although the mechanism\n// to stop temporarily editing as blocks when an outside block is selected is on component StopEditingAsBlocksOnOutsideSelect\n// at block-editor/src/components/block-list/index.js.\n// Besides the components on this file and the file referenced above the implementation\n// also includes artifacts on the store (actions, reducers, and selector).\n\nexport function ModifyContentLockMenuItem( { clientId, onClose } ) {\n\tconst { templateLock, isLockedByParent, isEditingAsBlocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetContentLockingParent,\n\t\t\t\tgetTemplateLock,\n\t\t\t\tgetTemporarilyEditingAsBlocks,\n\t\t\t} = unlock( select( blockEditorStore ) );\n\t\t\treturn {\n\t\t\t\ttemplateLock: getTemplateLock( clientId ),\n\t\t\t\tisLockedByParent: !! getContentLockingParent( clientId ),\n\t\t\t\tisEditingAsBlocks: getTemporarilyEditingAsBlocks() === clientId,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst blockEditorActions = useDispatch( blockEditorStore );\n\tconst isContentLocked =\n\t\t! isLockedByParent && templateLock === 'contentOnly';\n\tif ( ! isContentLocked && ! isEditingAsBlocks ) {\n\t\treturn null;\n\t}\n\n\tconst { modifyContentLockBlock } = unlock( blockEditorActions );\n\tconst showStartEditingAsBlocks = ! isEditingAsBlocks && isContentLocked;\n\n\treturn (\n\t\tshowStartEditingAsBlocks && (\n\t\t\t<MenuItem\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tmodifyContentLockBlock( clientId );\n\t\t\t\t\tonClose();\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ _x( 'Modify', 'Unlock content locked blocks' ) }\n\t\t\t</MenuItem>\n\t\t)\n\t);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,WAAW,EAAEC,SAAS,QAAQ,iBAAiB;AACxD,SAASC,EAAE,QAAQ,iBAAiB;;AAEpC;AACA;AACA;AACA,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,aAAa;AACvD,SAASC,MAAM,QAAQ,mBAAmB;;AAE1C;AACA;AACA;AACA;AACA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAEA,OAAO,SAASC,yBAAyBA,CAAE;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,EAAG;EAClE,MAAM;IAAEC,YAAY;IAAEC,gBAAgB;IAAEC;EAAkB,CAAC,GAAGZ,SAAS,CACpEa,MAAM,IAAM;IACb,MAAM;MACLC,uBAAuB;MACvBC,eAAe;MACfC;IACD,CAAC,GAAGZ,MAAM,CAAES,MAAM,CAAEV,gBAAiB,CAAE,CAAC;IACxC,OAAO;MACNO,YAAY,EAAEK,eAAe,CAAEP,QAAS,CAAC;MACzCG,gBAAgB,EAAE,CAAC,CAAEG,uBAAuB,CAAEN,QAAS,CAAC;MACxDI,iBAAiB,EAAEI,6BAA6B,CAAC,CAAC,KAAKR;IACxD,CAAC;EACF,CAAC,EACD,CAAEA,QAAQ,CACX,CAAC;EACD,MAAMS,kBAAkB,GAAGlB,WAAW,CAAEI,gBAAiB,CAAC;EAC1D,MAAMe,eAAe,GACpB,CAAEP,gBAAgB,IAAID,YAAY,KAAK,aAAa;EACrD,IAAK,CAAEQ,eAAe,IAAI,CAAEN,iBAAiB,EAAG;IAC/C,OAAO,IAAI;EACZ;EAEA,MAAM;IAAEO;EAAuB,CAAC,GAAGf,MAAM,CAAEa,kBAAmB,CAAC;EAC/D,MAAMG,wBAAwB,GAAG,CAAER,iBAAiB,IAAIM,eAAe;EAEvE,OACCE,wBAAwB,iBACvBd,IAAA,CAACR,QAAQ;IACRuB,OAAO,EAAGA,CAAA,KAAM;MACfF,sBAAsB,CAAEX,QAAS,CAAC;MAClCC,OAAO,CAAC,CAAC;IACV,CAAG;IAAAa,QAAA,EAEDrB,EAAE,CAAE,QAAQ,EAAE,8BAA+B;EAAC,CACvC,CACV;AAEH","ignoreList":[]}