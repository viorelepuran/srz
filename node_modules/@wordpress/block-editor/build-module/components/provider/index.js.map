{"version":3,"names":["useDispatch","useEffect","useMemo","SlotFillProvider","MediaUploadProvider","store","uploadStore","withRegistryProvider","useBlockSync","blockEditorStore","BlockRefsProvider","unlock","KeyboardShortcuts","useMediaUploadSettings","jsx","_jsx","jsxs","_jsxs","noop","mediaUpload","registry","allowedTypes","additionalData","filesList","onError","onFileChange","onSuccess","onBatchSuccess","dispatch","addItems","files","onChange","message","ExperimentalBlockEditorProvider","props","settings","_settings","stripExperimentalSettings","mediaUploadSettings","window","__experimentalMediaProcessing","bind","__experimentalUpdateSettings","__internalIsInitialized","reset","children","passthrough","isPreviewMode","Register","useSubRegistry","BlockEditorProvider"],"sources":["@wordpress/block-editor/src/components/provider/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useDispatch } from '@wordpress/data';\nimport { useEffect, useMemo } from '@wordpress/element';\nimport { SlotFillProvider } from '@wordpress/components';\nimport {\n\tMediaUploadProvider,\n\tstore as uploadStore,\n} from '@wordpress/upload-media';\n\n/**\n * Internal dependencies\n */\nimport withRegistryProvider from './with-registry-provider';\nimport useBlockSync from './use-block-sync';\nimport { store as blockEditorStore } from '../../store';\nimport { BlockRefsProvider } from './block-refs-provider';\nimport { unlock } from '../../lock-unlock';\nimport KeyboardShortcuts from '../keyboard-shortcuts';\nimport useMediaUploadSettings from './use-media-upload-settings';\n\n/** @typedef {import('@wordpress/data').WPDataRegistry} WPDataRegistry */\n\nconst noop = () => {};\n\n/**\n * Upload a media file when the file upload button is activated\n * or when adding a file to the editor via drag & drop.\n *\n * @param {WPDataRegistry} registry\n * @param {Object}         $3                Parameters object passed to the function.\n * @param {Array}          $3.allowedTypes   Array with the types of media that can be uploaded, if unset all types are allowed.\n * @param {Object}         $3.additionalData Additional data to include in the request.\n * @param {Array<File>}    $3.filesList      List of files.\n * @param {Function}       $3.onError        Function called when an error happens.\n * @param {Function}       $3.onFileChange   Function called each time a file or a temporary representation of the file is available.\n * @param {Function}       $3.onSuccess      Function called once a file has completely finished uploading, including thumbnails.\n * @param {Function}       $3.onBatchSuccess Function called once all files in a group have completely finished uploading, including thumbnails.\n */\nfunction mediaUpload(\n\tregistry,\n\t{\n\t\tallowedTypes,\n\t\tadditionalData = {},\n\t\tfilesList,\n\t\tonError = noop,\n\t\tonFileChange,\n\t\tonSuccess,\n\t\tonBatchSuccess,\n\t}\n) {\n\tvoid registry.dispatch( uploadStore ).addItems( {\n\t\tfiles: filesList,\n\t\tonChange: onFileChange,\n\t\tonSuccess,\n\t\tonBatchSuccess,\n\t\tonError: ( { message } ) => onError( message ),\n\t\tadditionalData,\n\t\tallowedTypes,\n\t} );\n}\n\nexport const ExperimentalBlockEditorProvider = withRegistryProvider(\n\t( props ) => {\n\t\tconst {\n\t\t\tsettings: _settings,\n\t\t\tregistry,\n\t\t\tstripExperimentalSettings = false,\n\t\t} = props;\n\n\t\tconst mediaUploadSettings = useMediaUploadSettings( _settings );\n\n\t\tlet settings = _settings;\n\n\t\tif ( window.__experimentalMediaProcessing && _settings.mediaUpload ) {\n\t\t\t// Create a new variable so that the original props.settings.mediaUpload is not modified.\n\t\t\tsettings = useMemo(\n\t\t\t\t() => ( {\n\t\t\t\t\t..._settings,\n\t\t\t\t\tmediaUpload: mediaUpload.bind( null, registry ),\n\t\t\t\t} ),\n\t\t\t\t[ _settings, registry ]\n\t\t\t);\n\t\t}\n\n\t\tconst { __experimentalUpdateSettings } = unlock(\n\t\t\tuseDispatch( blockEditorStore )\n\t\t);\n\t\tuseEffect( () => {\n\t\t\t__experimentalUpdateSettings(\n\t\t\t\t{\n\t\t\t\t\t...settings,\n\t\t\t\t\t__internalIsInitialized: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tstripExperimentalSettings,\n\t\t\t\t\treset: true,\n\t\t\t\t}\n\t\t\t);\n\t\t}, [\n\t\t\tsettings,\n\t\t\tstripExperimentalSettings,\n\t\t\t__experimentalUpdateSettings,\n\t\t] );\n\n\t\t// Syncs the entity provider with changes in the block-editor store.\n\t\tuseBlockSync( props );\n\n\t\tconst children = (\n\t\t\t<SlotFillProvider passthrough>\n\t\t\t\t{ ! settings?.isPreviewMode && <KeyboardShortcuts.Register /> }\n\t\t\t\t<BlockRefsProvider>{ props.children }</BlockRefsProvider>\n\t\t\t</SlotFillProvider>\n\t\t);\n\n\t\tif ( window.__experimentalMediaProcessing ) {\n\t\t\treturn (\n\t\t\t\t<MediaUploadProvider\n\t\t\t\t\tsettings={ mediaUploadSettings }\n\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</MediaUploadProvider>\n\t\t\t);\n\t\t}\n\n\t\treturn children;\n\t}\n);\n\nexport const BlockEditorProvider = ( props ) => {\n\treturn (\n\t\t<ExperimentalBlockEditorProvider { ...props } stripExperimentalSettings>\n\t\t\t{ props.children }\n\t\t</ExperimentalBlockEditorProvider>\n\t);\n};\n\nexport default BlockEditorProvider;\n"],"mappings":"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","ignoreList":[]}