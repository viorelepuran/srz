{"version":3,"names":["useDispatch","useSelect","switchToBlockType","store","blocksStore","ToolbarButton","ToolbarGroup","group","row","stack","grid","_x","useConvertToGroupButtonProps","blockEditorStore","jsx","_jsx","jsxs","_jsxs","layouts","type","flexWrap","orientation","BlockGroupToolbar","blocksSelection","clientIds","groupingBlockName","isGroupable","replaceBlocks","canRemove","variations","select","canRemoveBlocks","getBlockVariations","onConvertToGroup","layout","newBlocks","length","attributes","onConvertToRow","onConvertToStack","onConvertToGrid","canInsertRow","find","name","canInsertStack","canInsertGrid","children","icon","label","onClick"],"sources":["@wordpress/block-editor/src/components/convert-to-group-buttons/toolbar.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { switchToBlockType, store as blocksStore } from '@wordpress/blocks';\nimport { ToolbarButton, ToolbarGroup } from '@wordpress/components';\nimport { group, row, stack, grid } from '@wordpress/icons';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { useConvertToGroupButtonProps } from '../convert-to-group-buttons';\nimport { store as blockEditorStore } from '../../store';\n\nconst layouts = {\n\tgroup: { type: 'constrained' },\n\trow: { type: 'flex', flexWrap: 'nowrap' },\n\tstack: { type: 'flex', orientation: 'vertical' },\n\tgrid: { type: 'grid' },\n};\n\nfunction BlockGroupToolbar() {\n\tconst { blocksSelection, clientIds, groupingBlockName, isGroupable } =\n\t\tuseConvertToGroupButtonProps();\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\n\tconst { canRemove, variations } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canRemoveBlocks } = select( blockEditorStore );\n\t\t\tconst { getBlockVariations } = select( blocksStore );\n\n\t\t\treturn {\n\t\t\t\tcanRemove: canRemoveBlocks( clientIds ),\n\t\t\t\tvariations: getBlockVariations(\n\t\t\t\t\tgroupingBlockName,\n\t\t\t\t\t'transform'\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientIds, groupingBlockName ]\n\t);\n\n\tconst onConvertToGroup = ( layout ) => {\n\t\tconst newBlocks = switchToBlockType(\n\t\t\tblocksSelection,\n\t\t\tgroupingBlockName\n\t\t);\n\n\t\tif ( typeof layout !== 'string' ) {\n\t\t\tlayout = 'group';\n\t\t}\n\n\t\tif ( newBlocks && newBlocks.length > 0 ) {\n\t\t\t// Because the block is not in the store yet we can't use\n\t\t\t// updateBlockAttributes so need to manually update attributes.\n\t\t\tnewBlocks[ 0 ].attributes.layout = layouts[ layout ];\n\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t}\n\t};\n\n\tconst onConvertToRow = () => onConvertToGroup( 'row' );\n\tconst onConvertToStack = () => onConvertToGroup( 'stack' );\n\tconst onConvertToGrid = () => onConvertToGroup( 'grid' );\n\n\t// Don't render the button if the current selection cannot be grouped.\n\t// A good example is selecting multiple button blocks within a Buttons block:\n\t// The group block is not a valid child of Buttons, so we should not show the button.\n\t// Any blocks that are locked against removal also cannot be grouped.\n\tif ( ! isGroupable || ! canRemove ) {\n\t\treturn null;\n\t}\n\n\tconst canInsertRow = !! variations.find(\n\t\t( { name } ) => name === 'group-row'\n\t);\n\tconst canInsertStack = !! variations.find(\n\t\t( { name } ) => name === 'group-stack'\n\t);\n\tconst canInsertGrid = !! variations.find(\n\t\t( { name } ) => name === 'group-grid'\n\t);\n\n\treturn (\n\t\t<ToolbarGroup>\n\t\t\t<ToolbarButton\n\t\t\t\ticon={ group }\n\t\t\t\tlabel={ _x( 'Group', 'action: convert blocks to group' ) }\n\t\t\t\tonClick={ onConvertToGroup }\n\t\t\t/>\n\t\t\t{ canInsertRow && (\n\t\t\t\t<ToolbarButton\n\t\t\t\t\ticon={ row }\n\t\t\t\t\tlabel={ _x( 'Row', 'action: convert blocks to row' ) }\n\t\t\t\t\tonClick={ onConvertToRow }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ canInsertStack && (\n\t\t\t\t<ToolbarButton\n\t\t\t\t\ticon={ stack }\n\t\t\t\t\tlabel={ _x( 'Stack', 'action: convert blocks to stack' ) }\n\t\t\t\t\tonClick={ onConvertToStack }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ canInsertGrid && (\n\t\t\t\t<ToolbarButton\n\t\t\t\t\ticon={ grid }\n\t\t\t\t\tlabel={ _x( 'Grid', 'action: convert blocks to grid' ) }\n\t\t\t\t\tonClick={ onConvertToGrid }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</ToolbarGroup>\n\t);\n}\n\nexport default BlockGroupToolbar;\n"],"mappings":"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","ignoreList":[]}