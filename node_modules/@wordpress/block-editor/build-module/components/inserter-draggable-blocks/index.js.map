{"version":3,"names":["Draggable","createBlock","store","blocksStore","useDispatch","useSelect","useMemo","BlockDraggableChip","INSERTER_PATTERN_TYPES","blockEditorStore","unlock","jsx","_jsx","InserterDraggableBlocks","isEnabled","blocks","icon","children","pattern","blockTypeIcon","select","getBlockType","length","name","startDragging","stopDragging","patternBlock","type","user","syncStatus","ref","id","undefined","draggable","onDragStart","onDragEnd","draggableBlocks","__experimentalTransferDataType","transferData","event","block","dataTransfer","items","add","__experimentalDragComponent","count","isPattern","onDraggableStart","onDraggableEnd"],"sources":["@wordpress/block-editor/src/components/inserter-draggable-blocks/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Draggable } from '@wordpress/components';\nimport { createBlock, store as blocksStore } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BlockDraggableChip from '../block-draggable/draggable-chip';\nimport { INSERTER_PATTERN_TYPES } from '../inserter/block-patterns-tab/utils';\nimport { store as blockEditorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst InserterDraggableBlocks = ( {\n\tisEnabled,\n\tblocks,\n\ticon,\n\tchildren,\n\tpattern,\n} ) => {\n\tconst blockTypeIcon = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockType } = select( blocksStore );\n\t\t\treturn (\n\t\t\t\tblocks.length === 1 && getBlockType( blocks[ 0 ].name )?.icon\n\t\t\t);\n\t\t},\n\t\t[ blocks ]\n\t);\n\n\tconst { startDragging, stopDragging } = unlock(\n\t\tuseDispatch( blockEditorStore )\n\t);\n\n\tconst patternBlock = useMemo( () => {\n\t\treturn pattern?.type === INSERTER_PATTERN_TYPES.user &&\n\t\t\tpattern?.syncStatus !== 'unsynced'\n\t\t\t? [ createBlock( 'core/block', { ref: pattern.id } ) ]\n\t\t\t: undefined;\n\t}, [ pattern?.type, pattern?.syncStatus, pattern?.id ] );\n\n\tif ( ! isEnabled ) {\n\t\treturn children( {\n\t\t\tdraggable: false,\n\t\t\tonDragStart: undefined,\n\t\t\tonDragEnd: undefined,\n\t\t} );\n\t}\n\n\tconst draggableBlocks = patternBlock ?? blocks;\n\treturn (\n\t\t<Draggable\n\t\t\t__experimentalTransferDataType=\"wp-blocks\"\n\t\t\ttransferData={ { type: 'inserter', blocks: draggableBlocks } }\n\t\t\tonDragStart={ ( event ) => {\n\t\t\t\tstartDragging();\n\t\t\t\tfor ( const block of draggableBlocks ) {\n\t\t\t\t\tconst type = `wp-block:${ block.name }`;\n\t\t\t\t\t// This will fill in the dataTransfer.types array so that\n\t\t\t\t\t// the drop zone can check if the draggable is eligible.\n\t\t\t\t\t// Unfortuantely, on drag start, we don't have access to the\n\t\t\t\t\t// actual data, only the data keys/types.\n\t\t\t\t\tevent.dataTransfer.items.add( '', type );\n\t\t\t\t}\n\t\t\t} }\n\t\t\tonDragEnd={ () => {\n\t\t\t\tstopDragging();\n\t\t\t} }\n\t\t\t__experimentalDragComponent={\n\t\t\t\t<BlockDraggableChip\n\t\t\t\t\tcount={ blocks.length }\n\t\t\t\t\ticon={ icon || ( ! pattern && blockTypeIcon ) }\n\t\t\t\t\tisPattern={ !! pattern }\n\t\t\t\t/>\n\t\t\t}\n\t\t>\n\t\t\t{ ( { onDraggableStart, onDraggableEnd } ) => {\n\t\t\t\treturn children( {\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tonDragStart: onDraggableStart,\n\t\t\t\t\tonDragEnd: onDraggableEnd,\n\t\t\t\t} );\n\t\t\t} }\n\t\t</Draggable>\n\t);\n};\n\nexport default InserterDraggableBlocks;\n"],"mappings":"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","ignoreList":[]}