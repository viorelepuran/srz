{"version":3,"names":["__experimentalToolsPanel","ToolsPanel","__experimentalToolsPanelItem","ToolsPanelItem","ToggleControl","__","_x","useToolsPanelDropdownMenuProps","jsx","_jsx","Fragment","_Fragment","useHasImageSettingsPanel","name","value","inheritedValue","lightbox","allowEditing","ImageSettingsPanel","onChange","panelId","dropdownMenuProps","resetLightbox","undefined","onChangeLightbox","newSetting","enabled","lightboxChecked","children","label","resetAll","hasValue","onDeselect","isShownByDefault","__nextHasNoMarginBottom","checked"],"sources":["@wordpress/block-editor/src/components/global-styles/image-settings-panel.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalToolsPanel as ToolsPanel,\n\t__experimentalToolsPanelItem as ToolsPanelItem,\n\tToggleControl,\n} from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { useToolsPanelDropdownMenuProps } from './utils';\n\nexport function useHasImageSettingsPanel( name, value, inheritedValue ) {\n\t// Note: If lightbox `value` exists, that means it was\n\t// defined via the the Global Styles UI and will NOT\n\t// be a boolean value or contain the `allowEditing` property,\n\t// so we should show the settings panel in those cases.\n\treturn (\n\t\t( name === 'core/image' && inheritedValue?.lightbox?.allowEditing ) ||\n\t\t!! value?.lightbox\n\t);\n}\n\nexport default function ImageSettingsPanel( {\n\tonChange,\n\tvalue,\n\tinheritedValue,\n\tpanelId,\n} ) {\n\tconst dropdownMenuProps = useToolsPanelDropdownMenuProps();\n\tconst resetLightbox = () => {\n\t\tonChange( undefined );\n\t};\n\n\tconst onChangeLightbox = ( newSetting ) => {\n\t\tonChange( {\n\t\t\tenabled: newSetting,\n\t\t} );\n\t};\n\n\tlet lightboxChecked = false;\n\n\tif ( inheritedValue?.lightbox?.enabled ) {\n\t\tlightboxChecked = inheritedValue.lightbox.enabled;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ToolsPanel\n\t\t\t\tlabel={ _x( 'Settings', 'Image settings' ) }\n\t\t\t\tresetAll={ resetLightbox }\n\t\t\t\tpanelId={ panelId }\n\t\t\t\tdropdownMenuProps={ dropdownMenuProps }\n\t\t\t>\n\t\t\t\t<ToolsPanelItem\n\t\t\t\t\t// We use the `userSettings` prop instead of `settings`, because `settings`\n\t\t\t\t\t// contains the core/theme values for the lightbox and we want to show the\n\t\t\t\t\t// \"RESET\" button ONLY when the user has explicitly set a value in the\n\t\t\t\t\t// Global Styles.\n\t\t\t\t\thasValue={ () => !! value?.lightbox }\n\t\t\t\t\tlabel={ __( 'Enlarge on click' ) }\n\t\t\t\t\tonDeselect={ resetLightbox }\n\t\t\t\t\tisShownByDefault\n\t\t\t\t\tpanelId={ panelId }\n\t\t\t\t>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Enlarge on click' ) }\n\t\t\t\t\t\tchecked={ lightboxChecked }\n\t\t\t\t\t\tonChange={ onChangeLightbox }\n\t\t\t\t\t/>\n\t\t\t\t</ToolsPanelItem>\n\t\t\t</ToolsPanel>\n\t\t</>\n\t);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SACCA,wBAAwB,IAAIC,UAAU,EACtCC,4BAA4B,IAAIC,cAAc,EAC9CC,aAAa,QACP,uBAAuB;AAC9B,SAASC,EAAE,EAAEC,EAAE,QAAQ,iBAAiB;;AAExC;AACA;AACA;AACA,SAASC,8BAA8B,QAAQ,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzD,OAAO,SAASC,wBAAwBA,CAAEC,IAAI,EAAEC,KAAK,EAAEC,cAAc,EAAG;EACvE;EACA;EACA;EACA;EACA,OACGF,IAAI,KAAK,YAAY,IAAIE,cAAc,EAAEC,QAAQ,EAAEC,YAAY,IACjE,CAAC,CAAEH,KAAK,EAAEE,QAAQ;AAEpB;AAEA,eAAe,SAASE,kBAAkBA,CAAE;EAC3CC,QAAQ;EACRL,KAAK;EACLC,cAAc;EACdK;AACD,CAAC,EAAG;EACH,MAAMC,iBAAiB,GAAGd,8BAA8B,CAAC,CAAC;EAC1D,MAAMe,aAAa,GAAGA,CAAA,KAAM;IAC3BH,QAAQ,CAAEI,SAAU,CAAC;EACtB,CAAC;EAED,MAAMC,gBAAgB,GAAKC,UAAU,IAAM;IAC1CN,QAAQ,CAAE;MACTO,OAAO,EAAED;IACV,CAAE,CAAC;EACJ,CAAC;EAED,IAAIE,eAAe,GAAG,KAAK;EAE3B,IAAKZ,cAAc,EAAEC,QAAQ,EAAEU,OAAO,EAAG;IACxCC,eAAe,GAAGZ,cAAc,CAACC,QAAQ,CAACU,OAAO;EAClD;EAEA,oBACCjB,IAAA,CAAAE,SAAA;IAAAiB,QAAA,eACCnB,IAAA,CAACR,UAAU;MACV4B,KAAK,EAAGvB,EAAE,CAAE,UAAU,EAAE,gBAAiB,CAAG;MAC5CwB,QAAQ,EAAGR,aAAe;MAC1BF,OAAO,EAAGA,OAAS;MACnBC,iBAAiB,EAAGA,iBAAmB;MAAAO,QAAA,eAEvCnB,IAAA,CAACN;MACA;MACA;MACA;MACA;MAAA;QACA4B,QAAQ,EAAGA,CAAA,KAAM,CAAC,CAAEjB,KAAK,EAAEE,QAAU;QACrCa,KAAK,EAAGxB,EAAE,CAAE,kBAAmB,CAAG;QAClC2B,UAAU,EAAGV,aAAe;QAC5BW,gBAAgB;QAChBb,OAAO,EAAGA,OAAS;QAAAQ,QAAA,eAEnBnB,IAAA,CAACL,aAAa;UACb8B,uBAAuB;UACvBL,KAAK,EAAGxB,EAAE,CAAE,kBAAmB,CAAG;UAClC8B,OAAO,EAAGR,eAAiB;UAC3BR,QAAQ,EAAGK;QAAkB,CAC7B;MAAC,CACa;IAAC,CACN;EAAC,CACZ,CAAC;AAEL","ignoreList":[]}