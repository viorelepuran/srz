{"version":3,"names":["TextareaAutosize","clsx","forwardRef","EditableText","jsx","_jsx","PlainText","__experimentalVersion","props","ref","className","onChange","remainingProps","event","target","value"],"sources":["@wordpress/block-editor/src/components/plain-text/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport TextareaAutosize from 'react-autosize-textarea';\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport EditableText from '../editable-text';\n\n/**\n * Render an auto-growing textarea allow users to fill any textual content.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/plain-text/README.md\n *\n * @example\n * ```jsx\n * import { registerBlockType } from '@wordpress/blocks';\n * import { PlainText } from '@wordpress/block-editor';\n *\n * registerBlockType( 'my-plugin/example-block', {\n *   // ...\n *\n *   attributes: {\n *     content: {\n *       type: 'string',\n *     },\n *   },\n *\n *   edit( { className, attributes, setAttributes } ) {\n *     return (\n *       <PlainText\n *         className={ className }\n *         value={ attributes.content }\n *         onChange={ ( content ) => setAttributes( { content } ) }\n *       />\n *     );\n *   },\n * } );\n * ````\n *\n * @param {Object}   props          Component props.\n * @param {string}   props.value    String value of the textarea.\n * @param {Function} props.onChange Function called when the text value changes.\n * @param {Object}   [props.ref]    The component forwards the `ref` property to the `TextareaAutosize` component.\n * @return {Element} Plain text component\n */\nconst PlainText = forwardRef( ( { __experimentalVersion, ...props }, ref ) => {\n\tif ( __experimentalVersion === 2 ) {\n\t\treturn <EditableText ref={ ref } { ...props } />;\n\t}\n\n\tconst { className, onChange, ...remainingProps } = props;\n\n\treturn (\n\t\t<TextareaAutosize\n\t\t\tref={ ref }\n\t\t\tclassName={ clsx( 'block-editor-plain-text', className ) }\n\t\t\tonChange={ ( event ) => onChange( event.target.value ) }\n\t\t\t{ ...remainingProps }\n\t\t/>\n\t);\n} );\n\nexport default PlainText;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,gBAAgB,MAAM,yBAAyB;AACtD,OAAOC,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA;AACA,SAASC,UAAU,QAAQ,oBAAoB;;AAE/C;AACA;AACA;AACA,OAAOC,YAAY,MAAM,kBAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA,SAAAC,GAAA,IAAAC,IAAA;AAqCA,MAAMC,SAAS,GAAGJ,UAAU,CAAE,CAAE;EAAEK,qBAAqB;EAAE,GAAGC;AAAM,CAAC,EAAEC,GAAG,KAAM;EAC7E,IAAKF,qBAAqB,KAAK,CAAC,EAAG;IAClC,oBAAOF,IAAA,CAACF,YAAY;MAACM,GAAG,EAAGA,GAAK;MAAA,GAAMD;IAAK,CAAI,CAAC;EACjD;EAEA,MAAM;IAAEE,SAAS;IAAEC,QAAQ;IAAE,GAAGC;EAAe,CAAC,GAAGJ,KAAK;EAExD,oBACCH,IAAA,CAACL,gBAAgB;IAChBS,GAAG,EAAGA,GAAK;IACXC,SAAS,EAAGT,IAAI,CAAE,yBAAyB,EAAES,SAAU,CAAG;IAC1DC,QAAQ,EAAKE,KAAK,IAAMF,QAAQ,CAAEE,KAAK,CAACC,MAAM,CAACC,KAAM,CAAG;IAAA,GACnDH;EAAc,CACnB,CAAC;AAEJ,CAAE,CAAC;AAEH,eAAeN,SAAS","ignoreList":[]}