{"version":3,"names":["__","sprintf","hasBlockSupport","store","blocksStore","switchToBlockType","isTemplatePart","useSelect","useDispatch","useCommandLoader","copy","trash","remove","plus","add","group","ungroup","BlockIcon","blockEditorStore","jsx","_jsx","getTransformCommands","useTransformCommands","replaceBlocks","multiSelect","blocks","clientIds","canRemove","possibleBlockTransformations","invalidSelection","select","getBlockRootClientId","getBlockTransformItems","getSelectedBlockClientIds","getBlocksByClientId","canRemoveBlocks","selectedBlockClientIds","selectedBlocks","filter","block","length","rootClientId","isLoading","commands","isTemplate","selectForMultipleBlocks","insertedBlocks","clientId","onBlockTransform","name","newBlocks","hasPossibleBlockTransformations","map","transformation","title","icon","replace","label","callback","close","getQuickActionsCommands","useQuickActionsCommands","isUngroupable","isGroupable","_isUngroupable","_isGroupable","canInsertBlockType","getDefaultBlockName","getGroupingBlockName","removeBlocks","duplicateBlocks","insertAfterBlock","insertBeforeBlock","onGroup","groupingBlockName","onUngroup","innerBlocks","canInsertDefaultBlock","canDuplicate","every","push","Array","isArray","command","useBlockCommands","hook","context"],"sources":["@wordpress/block-editor/src/components/use-block-commands/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\thasBlockSupport,\n\tstore as blocksStore,\n\tswitchToBlockType,\n\tisTemplatePart,\n} from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useCommandLoader } from '@wordpress/commands';\nimport {\n\tcopy,\n\ttrash as remove,\n\tplus as add,\n\tgroup,\n\tungroup,\n} from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport BlockIcon from '../block-icon';\nimport { store as blockEditorStore } from '../../store';\n\nconst getTransformCommands = () =>\n\tfunction useTransformCommands() {\n\t\tconst { replaceBlocks, multiSelect } = useDispatch( blockEditorStore );\n\t\tconst {\n\t\t\tblocks,\n\t\t\tclientIds,\n\t\t\tcanRemove,\n\t\t\tpossibleBlockTransformations,\n\t\t\tinvalidSelection,\n\t\t} = useSelect( ( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockTransformItems,\n\t\t\t\tgetSelectedBlockClientIds,\n\t\t\t\tgetBlocksByClientId,\n\t\t\t\tcanRemoveBlocks,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\t\t\tconst selectedBlocks = getBlocksByClientId(\n\t\t\t\tselectedBlockClientIds\n\t\t\t);\n\n\t\t\t// selectedBlocks can have `null`s when something tries to call `selectBlock` with an inexistent clientId.\n\t\t\t// These nulls will cause fatal errors down the line.\n\t\t\t// In order to prevent discrepancies between selectedBlockClientIds and selectedBlocks, we effectively treat the entire selection as invalid.\n\t\t\t// @see https://github.com/WordPress/gutenberg/pull/59410#issuecomment-2006304536\n\t\t\tif ( selectedBlocks.filter( ( block ) => ! block ).length > 0 ) {\n\t\t\t\treturn {\n\t\t\t\t\tinvalidSelection: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst rootClientId = getBlockRootClientId(\n\t\t\t\tselectedBlockClientIds[ 0 ]\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tblocks: selectedBlocks,\n\t\t\t\tclientIds: selectedBlockClientIds,\n\t\t\t\tpossibleBlockTransformations: getBlockTransformItems(\n\t\t\t\t\tselectedBlocks,\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t\tcanRemove: canRemoveBlocks( selectedBlockClientIds ),\n\t\t\t\tinvalidSelection: false,\n\t\t\t};\n\t\t}, [] );\n\n\t\tif ( invalidSelection ) {\n\t\t\treturn {\n\t\t\t\tisLoading: false,\n\t\t\t\tcommands: [],\n\t\t\t};\n\t\t}\n\t\tconst isTemplate = blocks.length === 1 && isTemplatePart( blocks[ 0 ] );\n\n\t\tfunction selectForMultipleBlocks( insertedBlocks ) {\n\t\t\tif ( insertedBlocks.length > 1 ) {\n\t\t\t\tmultiSelect(\n\t\t\t\t\tinsertedBlocks[ 0 ].clientId,\n\t\t\t\t\tinsertedBlocks[ insertedBlocks.length - 1 ].clientId\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Simple block transformation based on the `Block Transforms` API.\n\t\tfunction onBlockTransform( name ) {\n\t\t\tconst newBlocks = switchToBlockType( blocks, name );\n\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t\tselectForMultipleBlocks( newBlocks );\n\t\t}\n\n\t\t/**\n\t\t * The `isTemplate` check is a stopgap solution here.\n\t\t * Ideally, the Transforms API should handle this\n\t\t * by allowing to exclude blocks from wildcard transformations.\n\t\t */\n\t\tconst hasPossibleBlockTransformations =\n\t\t\t!! possibleBlockTransformations.length && canRemove && ! isTemplate;\n\n\t\tif (\n\t\t\t! clientIds ||\n\t\t\tclientIds.length < 1 ||\n\t\t\t! hasPossibleBlockTransformations\n\t\t) {\n\t\t\treturn { isLoading: false, commands: [] };\n\t\t}\n\n\t\tconst commands = possibleBlockTransformations.map(\n\t\t\t( transformation ) => {\n\t\t\t\tconst { name, title, icon } = transformation;\n\t\t\t\treturn {\n\t\t\t\t\tname:\n\t\t\t\t\t\t'core/block-editor/transform-to-' +\n\t\t\t\t\t\tname.replace( '/', '-' ),\n\t\t\t\t\t/* translators: %s: Block or block variation name. */\n\t\t\t\t\tlabel: sprintf( __( 'Transform to %s' ), title ),\n\t\t\t\t\ticon: <BlockIcon icon={ icon } />,\n\t\t\t\t\tcallback: ( { close } ) => {\n\t\t\t\t\t\tonBlockTransform( name );\n\t\t\t\t\t\tclose();\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\treturn { isLoading: false, commands };\n\t};\n\nconst getQuickActionsCommands = () =>\n\tfunction useQuickActionsCommands() {\n\t\tconst { clientIds, isUngroupable, isGroupable } = useSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst {\n\t\t\t\t\tgetSelectedBlockClientIds,\n\t\t\t\t\tisUngroupable: _isUngroupable,\n\t\t\t\t\tisGroupable: _isGroupable,\n\t\t\t\t} = select( blockEditorStore );\n\t\t\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\n\t\t\t\treturn {\n\t\t\t\t\tclientIds: selectedBlockClientIds,\n\t\t\t\t\tisUngroupable: _isUngroupable(),\n\t\t\t\t\tisGroupable: _isGroupable(),\n\t\t\t\t};\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t\tconst {\n\t\t\tcanInsertBlockType,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlocksByClientId,\n\t\t\tcanRemoveBlocks,\n\t\t} = useSelect( blockEditorStore );\n\t\tconst { getDefaultBlockName, getGroupingBlockName } =\n\t\t\tuseSelect( blocksStore );\n\n\t\tconst blocks = getBlocksByClientId( clientIds );\n\n\t\tconst {\n\t\t\tremoveBlocks,\n\t\t\treplaceBlocks,\n\t\t\tduplicateBlocks,\n\t\t\tinsertAfterBlock,\n\t\t\tinsertBeforeBlock,\n\t\t} = useDispatch( blockEditorStore );\n\n\t\tconst onGroup = () => {\n\t\t\tif ( ! blocks.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst groupingBlockName = getGroupingBlockName();\n\n\t\t\t// Activate the `transform` on `core/group` which does the conversion.\n\t\t\tconst newBlocks = switchToBlockType( blocks, groupingBlockName );\n\n\t\t\tif ( ! newBlocks ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t};\n\t\tconst onUngroup = () => {\n\t\t\tif ( ! blocks.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst innerBlocks = blocks[ 0 ].innerBlocks;\n\n\t\t\tif ( ! innerBlocks.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treplaceBlocks( clientIds, innerBlocks );\n\t\t};\n\n\t\tif ( ! clientIds || clientIds.length < 1 ) {\n\t\t\treturn { isLoading: false, commands: [] };\n\t\t}\n\n\t\tconst rootClientId = getBlockRootClientId( clientIds[ 0 ] );\n\t\tconst canInsertDefaultBlock = canInsertBlockType(\n\t\t\tgetDefaultBlockName(),\n\t\t\trootClientId\n\t\t);\n\t\tconst canDuplicate = blocks.every( ( block ) => {\n\t\t\treturn (\n\t\t\t\t!! block &&\n\t\t\t\thasBlockSupport( block.name, 'multiple', true ) &&\n\t\t\t\tcanInsertBlockType( block.name, rootClientId )\n\t\t\t);\n\t\t} );\n\t\tconst canRemove = canRemoveBlocks( clientIds );\n\n\t\tconst commands = [];\n\n\t\tif ( canDuplicate ) {\n\t\t\tcommands.push( {\n\t\t\t\tname: 'duplicate',\n\t\t\t\tlabel: __( 'Duplicate' ),\n\t\t\t\tcallback: () => duplicateBlocks( clientIds, true ),\n\t\t\t\ticon: copy,\n\t\t\t} );\n\t\t}\n\n\t\tif ( canInsertDefaultBlock ) {\n\t\t\tcommands.push(\n\t\t\t\t{\n\t\t\t\t\tname: 'add-before',\n\t\t\t\t\tlabel: __( 'Add before' ),\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst clientId = Array.isArray( clientIds )\n\t\t\t\t\t\t\t? clientIds[ 0 ]\n\t\t\t\t\t\t\t: clientId;\n\t\t\t\t\t\tinsertBeforeBlock( clientId );\n\t\t\t\t\t},\n\t\t\t\t\ticon: add,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'add-after',\n\t\t\t\t\tlabel: __( 'Add after' ),\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconst clientId = Array.isArray( clientIds )\n\t\t\t\t\t\t\t? clientIds[ clientIds.length - 1 ]\n\t\t\t\t\t\t\t: clientId;\n\t\t\t\t\t\tinsertAfterBlock( clientId );\n\t\t\t\t\t},\n\t\t\t\t\ticon: add,\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif ( isGroupable ) {\n\t\t\tcommands.push( {\n\t\t\t\tname: 'Group',\n\t\t\t\tlabel: __( 'Group' ),\n\t\t\t\tcallback: onGroup,\n\t\t\t\ticon: group,\n\t\t\t} );\n\t\t}\n\n\t\tif ( isUngroupable ) {\n\t\t\tcommands.push( {\n\t\t\t\tname: 'ungroup',\n\t\t\t\tlabel: __( 'Ungroup' ),\n\t\t\t\tcallback: onUngroup,\n\t\t\t\ticon: ungroup,\n\t\t\t} );\n\t\t}\n\n\t\tif ( canRemove ) {\n\t\t\tcommands.push( {\n\t\t\t\tname: 'remove',\n\t\t\t\tlabel: __( 'Delete' ),\n\t\t\t\tcallback: () => removeBlocks( clientIds, true ),\n\t\t\t\ticon: remove,\n\t\t\t} );\n\t\t}\n\n\t\treturn {\n\t\t\tisLoading: false,\n\t\t\tcommands: commands.map( ( command ) => ( {\n\t\t\t\t...command,\n\t\t\t\tname: 'core/block-editor/action-' + command.name,\n\t\t\t\tcallback: ( { close } ) => {\n\t\t\t\t\tcommand.callback();\n\t\t\t\t\tclose();\n\t\t\t\t},\n\t\t\t} ) ),\n\t\t};\n\t};\n\nexport const useBlockCommands = () => {\n\tuseCommandLoader( {\n\t\tname: 'core/block-editor/blockTransforms',\n\t\thook: getTransformCommands(),\n\t} );\n\tuseCommandLoader( {\n\t\tname: 'core/block-editor/blockQuickActions',\n\t\thook: getQuickActionsCommands(),\n\t\tcontext: 'block-selection-edit',\n\t} );\n};\n"],"mappings":"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","ignoreList":[]}