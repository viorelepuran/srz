{"version":3,"names":["useCallback","store","blocksStore","useDispatch","useSelect","__","_n","sprintf","noticesStore","blockEditorStore","useNotifyCopy","getBlockName","getBlockType","createSuccessNotice","eventType","selectedBlockClientIds","notice","length","clientId","title","type"],"sources":["@wordpress/block-editor/src/utils/use-notify-copy.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../store';\n\nexport function useNotifyCopy() {\n\tconst { getBlockName } = useSelect( blockEditorStore );\n\tconst { getBlockType } = useSelect( blocksStore );\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\n\treturn useCallback(\n\t\t( eventType, selectedBlockClientIds ) => {\n\t\t\tlet notice = '';\n\n\t\t\tif ( eventType === 'copyStyles' ) {\n\t\t\t\tnotice = __( 'Styles copied to clipboard.' );\n\t\t\t} else if ( selectedBlockClientIds.length === 1 ) {\n\t\t\t\tconst clientId = selectedBlockClientIds[ 0 ];\n\t\t\t\tconst title = getBlockType( getBlockName( clientId ) )?.title;\n\n\t\t\t\tif ( eventType === 'copy' ) {\n\t\t\t\t\tnotice = sprintf(\n\t\t\t\t\t\t// Translators: Name of the block being copied, e.g. \"Paragraph\".\n\t\t\t\t\t\t__( 'Copied \"%s\" to clipboard.' ),\n\t\t\t\t\t\ttitle\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tnotice = sprintf(\n\t\t\t\t\t\t// Translators: Name of the block being cut, e.g. \"Paragraph\".\n\t\t\t\t\t\t__( 'Moved \"%s\" to clipboard.' ),\n\t\t\t\t\t\ttitle\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if ( eventType === 'copy' ) {\n\t\t\t\tnotice = sprintf(\n\t\t\t\t\t// Translators: %d: Number of blocks being copied.\n\t\t\t\t\t_n(\n\t\t\t\t\t\t'Copied %d block to clipboard.',\n\t\t\t\t\t\t'Copied %d blocks to clipboard.',\n\t\t\t\t\t\tselectedBlockClientIds.length\n\t\t\t\t\t),\n\t\t\t\t\tselectedBlockClientIds.length\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tnotice = sprintf(\n\t\t\t\t\t// Translators: %d: Number of blocks being moved.\n\t\t\t\t\t_n(\n\t\t\t\t\t\t'Moved %d block to clipboard.',\n\t\t\t\t\t\t'Moved %d blocks to clipboard.',\n\t\t\t\t\t\tselectedBlockClientIds.length\n\t\t\t\t\t),\n\t\t\t\t\tselectedBlockClientIds.length\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tcreateSuccessNotice( notice, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t},\n\t\t[ createSuccessNotice, getBlockName, getBlockType ]\n\t);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,oBAAoB;AAChD,SAASC,KAAK,IAAIC,WAAW,QAAQ,mBAAmB;AACxD,SAASC,WAAW,EAAEC,SAAS,QAAQ,iBAAiB;AACxD,SAASC,EAAE,EAAEC,EAAE,EAAEC,OAAO,QAAQ,iBAAiB;AACjD,SAASN,KAAK,IAAIO,YAAY,QAAQ,oBAAoB;;AAE1D;AACA;AACA;AACA,SAASP,KAAK,IAAIQ,gBAAgB,QAAQ,UAAU;AAEpD,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC/B,MAAM;IAAEC;EAAa,CAAC,GAAGP,SAAS,CAAEK,gBAAiB,CAAC;EACtD,MAAM;IAAEG;EAAa,CAAC,GAAGR,SAAS,CAAEF,WAAY,CAAC;EACjD,MAAM;IAAEW;EAAoB,CAAC,GAAGV,WAAW,CAAEK,YAAa,CAAC;EAE3D,OAAOR,WAAW,CACjB,CAAEc,SAAS,EAAEC,sBAAsB,KAAM;IACxC,IAAIC,MAAM,GAAG,EAAE;IAEf,IAAKF,SAAS,KAAK,YAAY,EAAG;MACjCE,MAAM,GAAGX,EAAE,CAAE,6BAA8B,CAAC;IAC7C,CAAC,MAAM,IAAKU,sBAAsB,CAACE,MAAM,KAAK,CAAC,EAAG;MACjD,MAAMC,QAAQ,GAAGH,sBAAsB,CAAE,CAAC,CAAE;MAC5C,MAAMI,KAAK,GAAGP,YAAY,CAAED,YAAY,CAAEO,QAAS,CAAE,CAAC,EAAEC,KAAK;MAE7D,IAAKL,SAAS,KAAK,MAAM,EAAG;QAC3BE,MAAM,GAAGT,OAAO;QACf;QACAF,EAAE,CAAE,2BAA4B,CAAC,EACjCc,KACD,CAAC;MACF,CAAC,MAAM;QACNH,MAAM,GAAGT,OAAO;QACf;QACAF,EAAE,CAAE,0BAA2B,CAAC,EAChCc,KACD,CAAC;MACF;IACD,CAAC,MAAM,IAAKL,SAAS,KAAK,MAAM,EAAG;MAClCE,MAAM,GAAGT,OAAO;MACf;MACAD,EAAE,CACD,+BAA+B,EAC/B,gCAAgC,EAChCS,sBAAsB,CAACE,MACxB,CAAC,EACDF,sBAAsB,CAACE,MACxB,CAAC;IACF,CAAC,MAAM;MACND,MAAM,GAAGT,OAAO;MACf;MACAD,EAAE,CACD,8BAA8B,EAC9B,+BAA+B,EAC/BS,sBAAsB,CAACE,MACxB,CAAC,EACDF,sBAAsB,CAACE,MACxB,CAAC;IACF;IAEAJ,mBAAmB,CAAEG,MAAM,EAAE;MAC5BI,IAAI,EAAE;IACP,CAAE,CAAC;EACJ,CAAC,EACD,CAAEP,mBAAmB,EAAEF,YAAY,EAAEC,YAAY,CAClD,CAAC;AACF","ignoreList":[]}