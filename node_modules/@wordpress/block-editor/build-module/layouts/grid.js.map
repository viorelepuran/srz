{"version":3,"names":["__","BaseControl","Flex","FlexItem","RangeControl","__experimentalNumberControl","NumberControl","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOption","ToggleGroupControlOption","__experimentalUnitControl","UnitControl","__experimentalParseQuantityAndUnitFromRawValue","parseQuantityAndUnitFromRawValue","__experimentalVStack","VStack","useState","appendSelectors","getBlockGapCSS","getGapCSSValue","shouldSkipSerialization","LAYOUT_DEFINITIONS","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RANGE_CONTROL_MAX_VALUES","px","vw","vh","em","rem","svw","lvw","dvw","svh","lvh","dvh","vi","svi","lvi","dvi","vb","svb","lvb","dvb","vmin","svmin","lvmin","dvmin","vmax","svmax","lvmax","dvmax","units","value","label","default","name","inspectorControls","GridLayoutInspectorControls","layout","onChange","layoutBlockSupport","allowSizingOnChildren","showColumnsControl","window","__experimentalEnableGridInteractivity","columnCount","showMinWidthControl","children","GridLayoutTypeControl","spacing","GridLayoutColumnsAndRowsControl","GridLayoutMinimumWidthControl","toolBarControls","GridLayoutToolbarControls","getLayoutStyle","selector","style","blockName","hasBlockGapSupport","layoutDefinitions","minimumColumnWidth","rowCount","process","env","NODE_ENV","Error","blockGapValue","blockGap","undefined","output","rules","maxValue","push","length","join","getOrientation","getAlignments","isManualPlacement","defaultValue","quantity","unit","handleSliderChange","next","handleUnitChange","newUnit","newValue","includes","toFixed","Math","round","VisualLabel","as","gap","isBlock","size","onUnitChange","min","hideLabelFromVision","__next40pxDefaultSize","__nextHasNoMarginBottom","max","withInputField","defaultColumnCount","defaultNewColumnCount","newColumnCount","parseInt","newRowCount","tempColumnCount","setTempColumnCount","tempRowCount","setTempRowCount","tempMinimumColumnWidth","setTempMinimumColumnWidth","gridPlacement","onChangeType","helpText","help"],"sources":["@wordpress/block-editor/src/layouts/grid.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nimport {\n\tBaseControl,\n\tFlex,\n\tFlexItem,\n\tRangeControl,\n\t__experimentalNumberControl as NumberControl,\n\t__experimentalToggleGroupControl as ToggleGroupControl,\n\t__experimentalToggleGroupControlOption as ToggleGroupControlOption,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalParseQuantityAndUnitFromRawValue as parseQuantityAndUnitFromRawValue,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { appendSelectors, getBlockGapCSS } from './utils';\nimport { getGapCSSValue } from '../hooks/gap';\nimport { shouldSkipSerialization } from '../hooks/utils';\nimport { LAYOUT_DEFINITIONS } from './definitions';\n\nconst RANGE_CONTROL_MAX_VALUES = {\n\tpx: 600,\n\t'%': 100,\n\tvw: 100,\n\tvh: 100,\n\tem: 38,\n\trem: 38,\n\tsvw: 100,\n\tlvw: 100,\n\tdvw: 100,\n\tsvh: 100,\n\tlvh: 100,\n\tdvh: 100,\n\tvi: 100,\n\tsvi: 100,\n\tlvi: 100,\n\tdvi: 100,\n\tvb: 100,\n\tsvb: 100,\n\tlvb: 100,\n\tdvb: 100,\n\tvmin: 100,\n\tsvmin: 100,\n\tlvmin: 100,\n\tdvmin: 100,\n\tvmax: 100,\n\tsvmax: 100,\n\tlvmax: 100,\n\tdvmax: 100,\n};\n\nconst units = [\n\t{ value: 'px', label: 'px', default: 0 },\n\t{ value: 'rem', label: 'rem', default: 0 },\n\t{ value: 'em', label: 'em', default: 0 },\n];\n\nexport default {\n\tname: 'grid',\n\tlabel: __( 'Grid' ),\n\tinspectorControls: function GridLayoutInspectorControls( {\n\t\tlayout = {},\n\t\tonChange,\n\t\tlayoutBlockSupport = {},\n\t} ) {\n\t\tconst { allowSizingOnChildren = false } = layoutBlockSupport;\n\n\t\t// In the experiment we want to also show column control in Auto mode, and\n\t\t// the minimum width control in Manual mode.\n\t\tconst showColumnsControl =\n\t\t\twindow.__experimentalEnableGridInteractivity ||\n\t\t\t!! layout?.columnCount;\n\t\tconst showMinWidthControl =\n\t\t\twindow.__experimentalEnableGridInteractivity ||\n\t\t\t! layout?.columnCount;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<GridLayoutTypeControl\n\t\t\t\t\tlayout={ layout }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t/>\n\t\t\t\t<VStack spacing={ 4 }>\n\t\t\t\t\t{ showColumnsControl && (\n\t\t\t\t\t\t<GridLayoutColumnsAndRowsControl\n\t\t\t\t\t\t\tlayout={ layout }\n\t\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\t\tallowSizingOnChildren={ allowSizingOnChildren }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ showMinWidthControl && (\n\t\t\t\t\t\t<GridLayoutMinimumWidthControl\n\t\t\t\t\t\t\tlayout={ layout }\n\t\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</VStack>\n\t\t\t</>\n\t\t);\n\t},\n\ttoolBarControls: function GridLayoutToolbarControls() {\n\t\treturn null;\n\t},\n\tgetLayoutStyle: function getLayoutStyle( {\n\t\tselector,\n\t\tlayout,\n\t\tstyle,\n\t\tblockName,\n\t\thasBlockGapSupport,\n\t\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\t} ) {\n\t\tconst {\n\t\t\tminimumColumnWidth = null,\n\t\t\tcolumnCount = null,\n\t\t\trowCount = null,\n\t\t} = layout;\n\n\t\t// Check that the grid layout attributes are of the correct type, so that we don't accidentally\n\t\t// write code that stores a string attribute instead of a number.\n\t\tif ( process.env.NODE_ENV === 'development' ) {\n\t\t\tif (\n\t\t\t\tminimumColumnWidth &&\n\t\t\t\ttypeof minimumColumnWidth !== 'string'\n\t\t\t) {\n\t\t\t\tthrow new Error( 'minimumColumnWidth must be a string' );\n\t\t\t}\n\t\t\tif ( columnCount && typeof columnCount !== 'number' ) {\n\t\t\t\tthrow new Error( 'columnCount must be a number' );\n\t\t\t}\n\t\t\tif ( rowCount && typeof rowCount !== 'number' ) {\n\t\t\t\tthrow new Error( 'rowCount must be a number' );\n\t\t\t}\n\t\t}\n\n\t\t// If a block's block.json skips serialization for spacing or spacing.blockGap,\n\t\t// don't apply the user-defined value to the styles.\n\t\tconst blockGapValue =\n\t\t\tstyle?.spacing?.blockGap &&\n\t\t\t! shouldSkipSerialization( blockName, 'spacing', 'blockGap' )\n\t\t\t\t? getGapCSSValue( style?.spacing?.blockGap, '0.5em' )\n\t\t\t\t: undefined;\n\n\t\tlet output = '';\n\t\tconst rules = [];\n\n\t\tif ( minimumColumnWidth && columnCount > 0 ) {\n\t\t\tconst maxValue = `max(${ minimumColumnWidth }, ( 100% - (${\n\t\t\t\tblockGapValue || '1.2rem'\n\t\t\t}*${ columnCount - 1 }) ) / ${ columnCount })`;\n\t\t\trules.push(\n\t\t\t\t`grid-template-columns: repeat(auto-fill, minmax(${ maxValue }, 1fr))`,\n\t\t\t\t`container-type: inline-size`\n\t\t\t);\n\t\t\tif ( rowCount ) {\n\t\t\t\trules.push(\n\t\t\t\t\t`grid-template-rows: repeat(${ rowCount }, minmax(1rem, auto))`\n\t\t\t\t);\n\t\t\t}\n\t\t} else if ( columnCount ) {\n\t\t\trules.push(\n\t\t\t\t`grid-template-columns: repeat(${ columnCount }, minmax(0, 1fr))`\n\t\t\t);\n\t\t\tif ( rowCount ) {\n\t\t\t\trules.push(\n\t\t\t\t\t`grid-template-rows: repeat(${ rowCount }, minmax(1rem, auto))`\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\trules.push(\n\t\t\t\t`grid-template-columns: repeat(auto-fill, minmax(min(${\n\t\t\t\t\tminimumColumnWidth || '12rem'\n\t\t\t\t}, 100%), 1fr))`,\n\t\t\t\t'container-type: inline-size'\n\t\t\t);\n\t\t}\n\n\t\tif ( rules.length ) {\n\t\t\t// Reason to disable: the extra line breaks added by prettier mess with the unit tests.\n\t\t\t// eslint-disable-next-line prettier/prettier\n\t\t\toutput = `${ appendSelectors( selector ) } { ${ rules.join(\n\t\t\t\t'; '\n\t\t\t) }; }`;\n\t\t}\n\n\t\t// Output blockGap styles based on rules contained in layout definitions in theme.json.\n\t\tif ( hasBlockGapSupport && blockGapValue ) {\n\t\t\toutput += getBlockGapCSS(\n\t\t\t\tselector,\n\t\t\t\tlayoutDefinitions,\n\t\t\t\t'grid',\n\t\t\t\tblockGapValue\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t},\n\tgetOrientation() {\n\t\treturn 'horizontal';\n\t},\n\tgetAlignments() {\n\t\treturn [];\n\t},\n};\n\n// Enables setting minimum width of grid items.\nfunction GridLayoutMinimumWidthControl( { layout, onChange } ) {\n\tconst { minimumColumnWidth, columnCount, isManualPlacement } = layout;\n\tconst defaultValue = isManualPlacement || columnCount ? null : '12rem';\n\tconst value = minimumColumnWidth || defaultValue;\n\tconst [ quantity, unit = 'rem' ] =\n\t\tparseQuantityAndUnitFromRawValue( value );\n\n\tconst handleSliderChange = ( next ) => {\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tminimumColumnWidth: [ next, unit ].join( '' ),\n\t\t} );\n\t};\n\n\t// Mostly copied from HeightControl.\n\tconst handleUnitChange = ( newUnit ) => {\n\t\t// Attempt to smooth over differences between currentUnit and newUnit.\n\t\t// This should slightly improve the experience of switching between unit types.\n\t\tlet newValue;\n\n\t\tif ( [ 'em', 'rem' ].includes( newUnit ) && unit === 'px' ) {\n\t\t\t// Convert pixel value to an approximate of the new unit, assuming a root size of 16px.\n\t\t\tnewValue = ( quantity / 16 ).toFixed( 2 ) + newUnit;\n\t\t} else if ( [ 'em', 'rem' ].includes( unit ) && newUnit === 'px' ) {\n\t\t\t// Convert to pixel value assuming a root size of 16px.\n\t\t\tnewValue = Math.round( quantity * 16 ) + newUnit;\n\t\t}\n\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tminimumColumnWidth: newValue,\n\t\t} );\n\t};\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t{ __( 'Minimum column width' ) }\n\t\t\t</BaseControl.VisualLabel>\n\t\t\t<Flex gap={ 4 }>\n\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t<UnitControl\n\t\t\t\t\t\tsize=\"__unstable-large\"\n\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\tminimumColumnWidth:\n\t\t\t\t\t\t\t\t\tnewValue === '' ? undefined : newValue,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonUnitChange={ handleUnitChange }\n\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\tlabel={ __( 'Minimum column width' ) }\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tonChange={ handleSliderChange }\n\t\t\t\t\t\tvalue={ quantity || 0 }\n\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\tmax={ RANGE_CONTROL_MAX_VALUES[ unit ] || 600 }\n\t\t\t\t\t\twithInputField={ false }\n\t\t\t\t\t\tlabel={ __( 'Minimum column width' ) }\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t</Flex>\n\t\t</fieldset>\n\t);\n}\n\n// Enables setting number of grid columns\nfunction GridLayoutColumnsAndRowsControl( {\n\tlayout,\n\tonChange,\n\tallowSizingOnChildren,\n} ) {\n\t// If the grid interactivity experiment is enabled, allow unsetting the column count.\n\tconst defaultColumnCount = window.__experimentalEnableGridInteractivity\n\t\t? undefined\n\t\t: 3;\n\tconst {\n\t\tcolumnCount = defaultColumnCount,\n\t\trowCount,\n\t\tisManualPlacement,\n\t} = layout;\n\n\treturn (\n\t\t<>\n\t\t\t<fieldset>\n\t\t\t\t{ ( ! window.__experimentalEnableGridInteractivity ||\n\t\t\t\t\t! isManualPlacement ) && (\n\t\t\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t\t\t{ __( 'Columns' ) }\n\t\t\t\t\t</BaseControl.VisualLabel>\n\t\t\t\t) }\n\t\t\t\t<Flex gap={ 4 }>\n\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\tsize=\"__unstable-large\"\n\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\twindow.__experimentalEnableGridInteractivity\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t// Allow unsetting the column count when in auto mode.\n\t\t\t\t\t\t\t\t\tconst defaultNewColumnCount =\n\t\t\t\t\t\t\t\t\t\tisManualPlacement ? 1 : undefined;\n\t\t\t\t\t\t\t\t\tconst newColumnCount =\n\t\t\t\t\t\t\t\t\t\tvalue === '' || value === '0'\n\t\t\t\t\t\t\t\t\t\t\t? defaultNewColumnCount\n\t\t\t\t\t\t\t\t\t\t\t: parseInt( value, 10 );\n\t\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\t\tcolumnCount: newColumnCount,\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Don't allow unsetting the column count.\n\t\t\t\t\t\t\t\t\tconst newColumnCount =\n\t\t\t\t\t\t\t\t\t\tvalue === '' || value === '0'\n\t\t\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t\t\t: parseInt( value, 10 );\n\t\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\t\tcolumnCount: newColumnCount,\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tvalue={ columnCount }\n\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\thideLabelFromVision={\n\t\t\t\t\t\t\t\t! window.__experimentalEnableGridInteractivity ||\n\t\t\t\t\t\t\t\t! isManualPlacement\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexItem>\n\n\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t{ window.__experimentalEnableGridInteractivity &&\n\t\t\t\t\t\tallowSizingOnChildren &&\n\t\t\t\t\t\tisManualPlacement ? (\n\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\tsize=\"__unstable-large\"\n\t\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\t\t// Don't allow unsetting the row count.\n\t\t\t\t\t\t\t\t\tconst newRowCount =\n\t\t\t\t\t\t\t\t\t\tvalue === '' || value === '0'\n\t\t\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t\t\t: parseInt( value, 10 );\n\t\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\t\trowCount: newRowCount,\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tvalue={ rowCount }\n\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\tlabel={ __( 'Rows' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tvalue={ columnCount ?? 1 }\n\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\t\tcolumnCount:\n\t\t\t\t\t\t\t\t\t\t\tvalue === '' || value === '0'\n\t\t\t\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t\t\t\t: value,\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\tmax={ 16 }\n\t\t\t\t\t\t\t\twithInputField={ false }\n\t\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</FlexItem>\n\t\t\t\t</Flex>\n\t\t\t</fieldset>\n\t\t</>\n\t);\n}\n\n// Enables switching between grid types\nfunction GridLayoutTypeControl( { layout, onChange } ) {\n\tconst { columnCount, rowCount, minimumColumnWidth, isManualPlacement } =\n\t\tlayout;\n\n\t/**\n\t * When switching, temporarily save any custom values set on the\n\t * previous type so we can switch back without loss.\n\t */\n\tconst [ tempColumnCount, setTempColumnCount ] = useState(\n\t\tcolumnCount || 3\n\t);\n\tconst [ tempRowCount, setTempRowCount ] = useState( rowCount );\n\tconst [ tempMinimumColumnWidth, setTempMinimumColumnWidth ] = useState(\n\t\tminimumColumnWidth || '12rem'\n\t);\n\n\tconst gridPlacement =\n\t\tisManualPlacement ||\n\t\t( !! columnCount && ! window.__experimentalEnableGridInteractivity )\n\t\t\t? 'manual'\n\t\t\t: 'auto';\n\n\tconst onChangeType = ( value ) => {\n\t\tif ( value === 'manual' ) {\n\t\t\tsetTempMinimumColumnWidth( minimumColumnWidth || '12rem' );\n\t\t} else {\n\t\t\tsetTempColumnCount( columnCount || 3 );\n\t\t\tsetTempRowCount( rowCount );\n\t\t}\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tcolumnCount: value === 'manual' ? tempColumnCount : null,\n\t\t\trowCount:\n\t\t\t\tvalue === 'manual' &&\n\t\t\t\twindow.__experimentalEnableGridInteractivity\n\t\t\t\t\t? tempRowCount\n\t\t\t\t\t: undefined,\n\t\t\tisManualPlacement:\n\t\t\t\tvalue === 'manual' &&\n\t\t\t\twindow.__experimentalEnableGridInteractivity\n\t\t\t\t\t? true\n\t\t\t\t\t: undefined,\n\t\t\tminimumColumnWidth:\n\t\t\t\tvalue === 'auto' ? tempMinimumColumnWidth : null,\n\t\t} );\n\t};\n\n\tconst helpText =\n\t\tgridPlacement === 'manual'\n\t\t\t? __(\n\t\t\t\t\t'Grid items can be manually placed in any position on the grid.'\n\t\t\t  )\n\t\t\t: __(\n\t\t\t\t\t'Grid items are placed automatically depending on their order.'\n\t\t\t  );\n\n\treturn (\n\t\t<ToggleGroupControl\n\t\t\t__next40pxDefaultSize\n\t\t\t__nextHasNoMarginBottom\n\t\t\tlabel={ __( 'Grid item position' ) }\n\t\t\tvalue={ gridPlacement }\n\t\t\tonChange={ onChangeType }\n\t\t\tisBlock\n\t\t\thelp={\n\t\t\t\twindow.__experimentalEnableGridInteractivity\n\t\t\t\t\t? helpText\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t>\n\t\t\t<ToggleGroupControlOption\n\t\t\t\tkey=\"auto\"\n\t\t\t\tvalue=\"auto\"\n\t\t\t\tlabel={ __( 'Auto' ) }\n\t\t\t/>\n\t\t\t<ToggleGroupControlOption\n\t\t\t\tkey=\"manual\"\n\t\t\t\tvalue=\"manual\"\n\t\t\t\tlabel={ __( 'Manual' ) }\n\t\t\t/>\n\t\t</ToggleGroupControl>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}