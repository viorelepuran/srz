{"version":3,"names":["clsx","__","getBlockSupport","hasBlockSupport","alignLeft","alignRight","alignCenter","AlignmentControl","BlockControls","useBlockEditingMode","cleanEmptyObject","shouldSkipSerialization","useBlockSettings","TYPOGRAPHY_SUPPORT_KEY","jsx","_jsx","TEXT_ALIGN_SUPPORT_KEY","TEXT_ALIGNMENT_OPTIONS","icon","title","align","VALID_TEXT_ALIGNMENTS","NO_TEXT_ALIGNMENTS","getValidTextAlignments","blockTextAlign","Array","isArray","filter","textAlign","includes","BlockEditTextAlignmentToolbarControlsPure","style","name","blockName","setAttributes","settings","hasTextAlignControl","typography","blockEditingMode","validTextAlignments","length","textAlignmentControls","control","onChange","newTextAlignValue","newStyle","group","children","value","alignmentControls","edit","useBlockProps","addSaveProps","addAssignedTextAlign","attributeKeys","hasSupport","className","props","blockType","attributes","isTextAlignValid"],"sources":["@wordpress/block-editor/src/hooks/text-align.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { getBlockSupport, hasBlockSupport } from '@wordpress/blocks';\nimport { alignLeft, alignRight, alignCenter } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { AlignmentControl, BlockControls } from '../components';\nimport { useBlockEditingMode } from '../components/block-editing-mode';\nimport {\n\tcleanEmptyObject,\n\tshouldSkipSerialization,\n\tuseBlockSettings,\n} from './utils';\nimport { TYPOGRAPHY_SUPPORT_KEY } from './typography';\n\nexport const TEXT_ALIGN_SUPPORT_KEY = 'typography.textAlign';\n\nconst TEXT_ALIGNMENT_OPTIONS = [\n\t{\n\t\ticon: alignLeft,\n\t\ttitle: __( 'Align text left' ),\n\t\talign: 'left',\n\t},\n\t{\n\t\ticon: alignCenter,\n\t\ttitle: __( 'Align text center' ),\n\t\talign: 'center',\n\t},\n\t{\n\t\ticon: alignRight,\n\t\ttitle: __( 'Align text right' ),\n\t\talign: 'right',\n\t},\n];\n\nconst VALID_TEXT_ALIGNMENTS = [ 'left', 'center', 'right' ];\nconst NO_TEXT_ALIGNMENTS = [];\n\n/**\n * Returns the valid text alignments.\n * Takes into consideration the text aligns supported by a block.\n * Exported just for testing purposes, not exported outside the module.\n *\n * @param {?boolean|string[]} blockTextAlign Text aligns supported by the block.\n *\n * @return {string[]} Valid text alignments.\n */\nexport function getValidTextAlignments( blockTextAlign ) {\n\tif ( Array.isArray( blockTextAlign ) ) {\n\t\treturn VALID_TEXT_ALIGNMENTS.filter( ( textAlign ) =>\n\t\t\tblockTextAlign.includes( textAlign )\n\t\t);\n\t}\n\n\treturn blockTextAlign === true ? VALID_TEXT_ALIGNMENTS : NO_TEXT_ALIGNMENTS;\n}\n\nfunction BlockEditTextAlignmentToolbarControlsPure( {\n\tstyle,\n\tname: blockName,\n\tsetAttributes,\n} ) {\n\tconst settings = useBlockSettings( blockName );\n\tconst hasTextAlignControl = settings?.typography?.textAlign;\n\tconst blockEditingMode = useBlockEditingMode();\n\n\tif ( ! hasTextAlignControl || blockEditingMode !== 'default' ) {\n\t\treturn null;\n\t}\n\n\tconst validTextAlignments = getValidTextAlignments(\n\t\tgetBlockSupport( blockName, TEXT_ALIGN_SUPPORT_KEY )\n\t);\n\tif ( ! validTextAlignments.length ) {\n\t\treturn null;\n\t}\n\n\tconst textAlignmentControls = TEXT_ALIGNMENT_OPTIONS.filter( ( control ) =>\n\t\tvalidTextAlignments.includes( control.align )\n\t);\n\n\tconst onChange = ( newTextAlignValue ) => {\n\t\tconst newStyle = {\n\t\t\t...style,\n\t\t\ttypography: {\n\t\t\t\t...style?.typography,\n\t\t\t\ttextAlign: newTextAlignValue,\n\t\t\t},\n\t\t};\n\n\t\tsetAttributes( { style: cleanEmptyObject( newStyle ) } );\n\t};\n\n\treturn (\n\t\t<BlockControls group=\"block\">\n\t\t\t<AlignmentControl\n\t\t\t\tvalue={ style?.typography?.textAlign }\n\t\t\t\tonChange={ onChange }\n\t\t\t\talignmentControls={ textAlignmentControls }\n\t\t\t/>\n\t\t</BlockControls>\n\t);\n}\n\nexport default {\n\tedit: BlockEditTextAlignmentToolbarControlsPure,\n\tuseBlockProps,\n\taddSaveProps: addAssignedTextAlign,\n\tattributeKeys: [ 'style' ],\n\thasSupport( name ) {\n\t\treturn hasBlockSupport( name, TEXT_ALIGN_SUPPORT_KEY, false );\n\t},\n};\n\nfunction useBlockProps( { name, style } ) {\n\tif ( ! style?.typography?.textAlign ) {\n\t\treturn null;\n\t}\n\n\tconst validTextAlignments = getValidTextAlignments(\n\t\tgetBlockSupport( name, TEXT_ALIGN_SUPPORT_KEY )\n\t);\n\n\tif ( ! validTextAlignments.length ) {\n\t\treturn null;\n\t}\n\n\tif (\n\t\tshouldSkipSerialization( name, TYPOGRAPHY_SUPPORT_KEY, 'textAlign' )\n\t) {\n\t\treturn null;\n\t}\n\n\tconst textAlign = style.typography.textAlign;\n\n\tconst className = clsx( {\n\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t} );\n\treturn { className };\n}\n\n/**\n * Override props assigned to save component to inject text alignment class\n * name if block supports it.\n *\n * @param {Object} props      Additional props applied to save element.\n * @param {Object} blockType  Block type.\n * @param {Object} attributes Block attributes.\n *\n * @return {Object} Filtered props applied to save element.\n */\nexport function addAssignedTextAlign( props, blockType, attributes ) {\n\tif ( ! attributes?.style?.typography?.textAlign ) {\n\t\treturn props;\n\t}\n\n\tconst { textAlign } = attributes.style.typography;\n\tconst blockTextAlign = getBlockSupport( blockType, TEXT_ALIGN_SUPPORT_KEY );\n\tconst isTextAlignValid =\n\t\tgetValidTextAlignments( blockTextAlign ).includes( textAlign );\n\tif (\n\t\tisTextAlignValid &&\n\t\t! shouldSkipSerialization(\n\t\t\tblockType,\n\t\t\tTYPOGRAPHY_SUPPORT_KEY,\n\t\t\t'textAlign'\n\t\t)\n\t) {\n\t\tprops.className = clsx(\n\t\t\t`has-text-align-${ textAlign }`,\n\t\t\tprops.className\n\t\t);\n\t}\n\treturn props;\n}\n"],"mappings":"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","ignoreList":[]}