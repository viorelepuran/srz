{"version":3,"names":["clsx","createHigherOrderComponent","useInstanceId","addFilter","getBlockSupport","hasBlockSupport","useSelect","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOption","ToggleGroupControlOption","ToggleControl","PanelBody","privateApis","componentsPrivateApis","__","store","blockEditorStore","InspectorControls","useSettings","getLayoutType","getLayoutTypes","useBlockEditingMode","LAYOUT_DEFINITIONS","useBlockSettings","useStyleOverride","unlock","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","layoutBlockSupportKey","kebabCase","hasLayoutBlockSupport","blockName","useLayoutClasses","blockAttributes","layout","default","defaultBlockLayout","usedLayout","inherit","contentSize","wideSize","type","layoutClassnames","className","baseClassName","splitBlockName","split","fullBlockName","pop","join","compoundClassName","push","hasGlobalPadding","select","getSettings","__experimentalFeatures","useRootPaddingAwareAlignments","orientation","justifyContent","flexWrap","useLayoutStyles","selector","style","fullLayoutType","blockGapSupport","hasBlockGapSupport","getLayoutStyle","LayoutPanelPure","setAttributes","name","clientId","settings","layoutSettings","themeSupportsLayout","supportsLayout","blockEditingMode","layoutBlockSupport","blockSupportAndThemeSettings","allowSwitching","allowEditing","allowInheriting","blockSupportAndLayout","defaultType","blockLayoutType","showInheritToggle","layoutType","constrainedType","displayControlsForLegacyLayouts","hasContentSizeOrLegacySettings","onChangeType","newType","onChangeLayout","newLayout","children","title","__nextHasNoMarginBottom","label","checked","onChange","help","LayoutTypeSwitcher","inspectorControls","toolBarControls","shareWithChildBlocks","edit","attributeKeys","hasSupport","__next40pxDefaultSize","isBlock","hideLabelFromVision","isAdaptiveWidth","value","map","addAttribute","_settings$attributes$","attributes","BlockWithLayoutStyles","block","BlockListBlock","props","layoutClasses","id","selectorPrefix","css","layoutClassNames","__unstableLayoutClassNames","withLayoutStyles","blockSupportsLayout","extraProps","getBlockSettings","disableLayoutStyles","undefined"],"sources":["@wordpress/block-editor/src/hooks/layout.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent, useInstanceId } from '@wordpress/compose';\nimport { addFilter } from '@wordpress/hooks';\nimport { getBlockSupport, hasBlockSupport } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport {\n\t__experimentalToggleGroupControl as ToggleGroupControl,\n\t__experimentalToggleGroupControlOption as ToggleGroupControlOption,\n\tToggleControl,\n\tPanelBody,\n\tprivateApis as componentsPrivateApis,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../store';\nimport { InspectorControls } from '../components';\nimport { useSettings } from '../components/use-settings';\nimport { getLayoutType, getLayoutTypes } from '../layouts';\nimport { useBlockEditingMode } from '../components/block-editing-mode';\nimport { LAYOUT_DEFINITIONS } from '../layouts/definitions';\nimport { useBlockSettings, useStyleOverride } from './utils';\nimport { unlock } from '../lock-unlock';\n\nconst layoutBlockSupportKey = 'layout';\nconst { kebabCase } = unlock( componentsPrivateApis );\n\nfunction hasLayoutBlockSupport( blockName ) {\n\treturn (\n\t\thasBlockSupport( blockName, 'layout' ) ||\n\t\thasBlockSupport( blockName, '__experimentalLayout' )\n\t);\n}\n\n/**\n * Generates the utility classnames for the given block's layout attributes.\n *\n * @param { Object } blockAttributes Block attributes.\n * @param { string } blockName       Block name.\n *\n * @return { Array } Array of CSS classname strings.\n */\nexport function useLayoutClasses( blockAttributes = {}, blockName = '' ) {\n\tconst { layout } = blockAttributes;\n\tconst { default: defaultBlockLayout } =\n\t\tgetBlockSupport( blockName, layoutBlockSupportKey ) || {};\n\tconst usedLayout =\n\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\n\t\t\t? { ...layout, type: 'constrained' }\n\t\t\t: layout || defaultBlockLayout || {};\n\n\tconst layoutClassnames = [];\n\n\tif ( LAYOUT_DEFINITIONS[ usedLayout?.type || 'default' ]?.className ) {\n\t\tconst baseClassName =\n\t\t\tLAYOUT_DEFINITIONS[ usedLayout?.type || 'default' ]?.className;\n\t\tconst splitBlockName = blockName.split( '/' );\n\t\tconst fullBlockName =\n\t\t\tsplitBlockName[ 0 ] === 'core'\n\t\t\t\t? splitBlockName.pop()\n\t\t\t\t: splitBlockName.join( '-' );\n\t\tconst compoundClassName = `wp-block-${ fullBlockName }-${ baseClassName }`;\n\t\tlayoutClassnames.push( baseClassName, compoundClassName );\n\t}\n\n\tconst hasGlobalPadding = useSelect(\n\t\t( select ) => {\n\t\t\treturn (\n\t\t\t\t( usedLayout?.inherit ||\n\t\t\t\t\tusedLayout?.contentSize ||\n\t\t\t\t\tusedLayout?.type === 'constrained' ) &&\n\t\t\t\tselect( blockEditorStore ).getSettings().__experimentalFeatures\n\t\t\t\t\t?.useRootPaddingAwareAlignments\n\t\t\t);\n\t\t},\n\t\t[ usedLayout?.contentSize, usedLayout?.inherit, usedLayout?.type ]\n\t);\n\n\tif ( hasGlobalPadding ) {\n\t\tlayoutClassnames.push( 'has-global-padding' );\n\t}\n\n\tif ( usedLayout?.orientation ) {\n\t\tlayoutClassnames.push( `is-${ kebabCase( usedLayout.orientation ) }` );\n\t}\n\n\tif ( usedLayout?.justifyContent ) {\n\t\tlayoutClassnames.push(\n\t\t\t`is-content-justification-${ kebabCase(\n\t\t\t\tusedLayout.justifyContent\n\t\t\t) }`\n\t\t);\n\t}\n\n\tif ( usedLayout?.flexWrap && usedLayout.flexWrap === 'nowrap' ) {\n\t\tlayoutClassnames.push( 'is-nowrap' );\n\t}\n\n\treturn layoutClassnames;\n}\n\n/**\n * Generates a CSS rule with the given block's layout styles.\n *\n * @param { Object } blockAttributes Block attributes.\n * @param { string } blockName       Block name.\n * @param { string } selector        A selector to use in generating the CSS rule.\n *\n * @return { string } CSS rule.\n */\nexport function useLayoutStyles( blockAttributes = {}, blockName, selector ) {\n\tconst { layout = {}, style = {} } = blockAttributes;\n\t// Update type for blocks using legacy layouts.\n\tconst usedLayout =\n\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\n\t\t\t? { ...layout, type: 'constrained' }\n\t\t\t: layout || {};\n\tconst fullLayoutType = getLayoutType( usedLayout?.type || 'default' );\n\tconst [ blockGapSupport ] = useSettings( 'spacing.blockGap' );\n\tconst hasBlockGapSupport = blockGapSupport !== null;\n\treturn fullLayoutType?.getLayoutStyle?.( {\n\t\tblockName,\n\t\tselector,\n\t\tlayout,\n\t\tstyle,\n\t\thasBlockGapSupport,\n\t} );\n}\n\nfunction LayoutPanelPure( {\n\tlayout,\n\tsetAttributes,\n\tname: blockName,\n\tclientId,\n} ) {\n\tconst settings = useBlockSettings( blockName );\n\t// Block settings come from theme.json under settings.[blockName].\n\tconst { layout: layoutSettings } = settings;\n\tconst { themeSupportsLayout } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn {\n\t\t\tthemeSupportsLayout: getSettings().supportsLayout,\n\t\t};\n\t}, [] );\n\tconst blockEditingMode = useBlockEditingMode();\n\n\tif ( blockEditingMode !== 'default' ) {\n\t\treturn null;\n\t}\n\n\t// Layout block support comes from the block's block.json.\n\tconst layoutBlockSupport = getBlockSupport(\n\t\tblockName,\n\t\tlayoutBlockSupportKey,\n\t\t{}\n\t);\n\tconst blockSupportAndThemeSettings = {\n\t\t...layoutSettings,\n\t\t...layoutBlockSupport,\n\t};\n\tconst {\n\t\tallowSwitching,\n\t\tallowEditing = true,\n\t\tallowInheriting = true,\n\t\tdefault: defaultBlockLayout,\n\t} = blockSupportAndThemeSettings;\n\n\tif ( ! allowEditing ) {\n\t\treturn null;\n\t}\n\n\t/*\n\t * Try to find the layout type from either the\n\t * block's layout settings or any saved layout config.\n\t */\n\tconst blockSupportAndLayout = {\n\t\t...layoutBlockSupport,\n\t\t...layout,\n\t};\n\tconst { type, default: { type: defaultType = 'default' } = {} } =\n\t\tblockSupportAndLayout;\n\tconst blockLayoutType = type || defaultType;\n\n\t// Only show the inherit toggle if it's supported,\n\t// and either the default / flow or the constrained layout type is in use, as the toggle switches from one to the other.\n\tconst showInheritToggle = !! (\n\t\tallowInheriting &&\n\t\t( ! blockLayoutType ||\n\t\t\tblockLayoutType === 'default' ||\n\t\t\tblockLayoutType === 'constrained' ||\n\t\t\tblockSupportAndLayout.inherit )\n\t);\n\n\tconst usedLayout = layout || defaultBlockLayout || {};\n\tconst { inherit = false, contentSize = null } = usedLayout;\n\t/**\n\t * `themeSupportsLayout` is only relevant to the `default/flow` or\n\t * `constrained` layouts and it should not be taken into account when other\n\t * `layout` types are used.\n\t */\n\tif (\n\t\t( blockLayoutType === 'default' ||\n\t\t\tblockLayoutType === 'constrained' ) &&\n\t\t! themeSupportsLayout\n\t) {\n\t\treturn null;\n\t}\n\tconst layoutType = getLayoutType( blockLayoutType );\n\tconst constrainedType = getLayoutType( 'constrained' );\n\tconst displayControlsForLegacyLayouts =\n\t\t! usedLayout.type && ( contentSize || inherit );\n\tconst hasContentSizeOrLegacySettings = !! inherit || !! contentSize;\n\n\tconst onChangeType = ( newType ) =>\n\t\tsetAttributes( { layout: { type: newType } } );\n\tconst onChangeLayout = ( newLayout ) =>\n\t\tsetAttributes( { layout: newLayout } );\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Layout' ) }>\n\t\t\t\t\t{ showInheritToggle && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={ __( 'Inner blocks use content width' ) }\n\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\tlayoutType?.name === 'constrained' ||\n\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t\t\t\ttype:\n\t\t\t\t\t\t\t\t\t\t\t\tlayoutType?.name ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t'constrained' ||\n\t\t\t\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'default'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'constrained',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t\tlayoutType?.name === 'constrained' ||\n\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\n\t\t\t\t\t\t\t\t\t\t? __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Nested blocks use content width with options for full and wide widths.'\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Nested blocks will fill the width of this container.'\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ ! inherit && allowSwitching && (\n\t\t\t\t\t\t<LayoutTypeSwitcher\n\t\t\t\t\t\t\ttype={ blockLayoutType }\n\t\t\t\t\t\t\tonChange={ onChangeType }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ layoutType && layoutType.name !== 'default' && (\n\t\t\t\t\t\t<layoutType.inspectorControls\n\t\t\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\t\t\tonChange={ onChangeLayout }\n\t\t\t\t\t\t\tlayoutBlockSupport={ blockSupportAndThemeSettings }\n\t\t\t\t\t\t\tname={ blockName }\n\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ constrainedType && displayControlsForLegacyLayouts && (\n\t\t\t\t\t\t<constrainedType.inspectorControls\n\t\t\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\t\t\tonChange={ onChangeLayout }\n\t\t\t\t\t\t\tlayoutBlockSupport={ blockSupportAndThemeSettings }\n\t\t\t\t\t\t\tname={ blockName }\n\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t{ ! inherit && layoutType && (\n\t\t\t\t<layoutType.toolBarControls\n\t\t\t\t\tlayout={ usedLayout }\n\t\t\t\t\tonChange={ onChangeLayout }\n\t\t\t\t\tlayoutBlockSupport={ layoutBlockSupport }\n\t\t\t\t\tname={ blockName }\n\t\t\t\t\tclientId={ clientId }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default {\n\tshareWithChildBlocks: true,\n\tedit: LayoutPanelPure,\n\tattributeKeys: [ 'layout' ],\n\thasSupport( name ) {\n\t\treturn hasLayoutBlockSupport( name );\n\t},\n};\n\nfunction LayoutTypeSwitcher( { type, onChange } ) {\n\treturn (\n\t\t<ToggleGroupControl\n\t\t\t__next40pxDefaultSize\n\t\t\tisBlock\n\t\t\tlabel={ __( 'Layout type' ) }\n\t\t\t__nextHasNoMarginBottom\n\t\t\thideLabelFromVision\n\t\t\tisAdaptiveWidth\n\t\t\tvalue={ type }\n\t\t\tonChange={ onChange }\n\t\t>\n\t\t\t{ getLayoutTypes().map( ( { name, label } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ToggleGroupControlOption\n\t\t\t\t\t\tkey={ name }\n\t\t\t\t\t\tvalue={ name }\n\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</ToggleGroupControl>\n\t);\n}\n\n/**\n * Filters registered block settings, extending attributes to include `layout`.\n *\n * @param {Object} settings Original block settings.\n *\n * @return {Object} Filtered block settings.\n */\nexport function addAttribute( settings ) {\n\tif ( 'type' in ( settings.attributes?.layout ?? {} ) ) {\n\t\treturn settings;\n\t}\n\tif ( hasLayoutBlockSupport( settings ) ) {\n\t\tsettings.attributes = {\n\t\t\t...settings.attributes,\n\t\t\tlayout: {\n\t\t\t\ttype: 'object',\n\t\t\t},\n\t\t};\n\t}\n\n\treturn settings;\n}\n\nfunction BlockWithLayoutStyles( {\n\tblock: BlockListBlock,\n\tprops,\n\tblockGapSupport,\n\tlayoutClasses,\n} ) {\n\tconst { name, attributes } = props;\n\tconst id = useInstanceId( BlockListBlock );\n\tconst { layout } = attributes;\n\tconst { default: defaultBlockLayout } =\n\t\tgetBlockSupport( name, layoutBlockSupportKey ) || {};\n\tconst usedLayout =\n\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\n\t\t\t? { ...layout, type: 'constrained' }\n\t\t\t: layout || defaultBlockLayout || {};\n\n\tconst selectorPrefix = `wp-container-${ kebabCase( name ) }-is-layout-`;\n\t// Higher specificity to override defaults from theme.json.\n\tconst selector = `.${ selectorPrefix }${ id }`;\n\tconst hasBlockGapSupport = blockGapSupport !== null;\n\n\t// Get CSS string for the current layout type.\n\t// The CSS and `style` element is only output if it is not empty.\n\tconst fullLayoutType = getLayoutType( usedLayout?.type || 'default' );\n\tconst css = fullLayoutType?.getLayoutStyle?.( {\n\t\tblockName: name,\n\t\tselector,\n\t\tlayout: usedLayout,\n\t\tstyle: attributes?.style,\n\t\thasBlockGapSupport,\n\t} );\n\n\t// Attach a `wp-container-` id-based class name as well as a layout class name such as `is-layout-flex`.\n\tconst layoutClassNames = clsx(\n\t\t{\n\t\t\t[ `${ selectorPrefix }${ id }` ]: !! css, // Only attach a container class if there is generated CSS to be attached.\n\t\t},\n\t\tlayoutClasses\n\t);\n\n\tuseStyleOverride( { css } );\n\n\treturn (\n\t\t<BlockListBlock\n\t\t\t{ ...props }\n\t\t\t__unstableLayoutClassNames={ layoutClassNames }\n\t\t/>\n\t);\n}\n\n/**\n * Override the default block element to add the layout styles.\n *\n * @param {Function} BlockListBlock Original component.\n *\n * @return {Function} Wrapped component.\n */\nexport const withLayoutStyles = createHigherOrderComponent(\n\t( BlockListBlock ) => ( props ) => {\n\t\tconst { clientId, name, attributes } = props;\n\t\tconst blockSupportsLayout = hasLayoutBlockSupport( name );\n\t\tconst layoutClasses = useLayoutClasses( attributes, name );\n\t\tconst extraProps = useSelect(\n\t\t\t( select ) => {\n\t\t\t\t// The callback returns early to avoid block editor subscription.\n\t\t\t\tif ( ! blockSupportsLayout ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { getSettings, getBlockSettings } = unlock(\n\t\t\t\t\tselect( blockEditorStore )\n\t\t\t\t);\n\t\t\t\tconst { disableLayoutStyles } = getSettings();\n\n\t\t\t\tif ( disableLayoutStyles ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst [ blockGapSupport ] = getBlockSettings(\n\t\t\t\t\tclientId,\n\t\t\t\t\t'spacing.blockGap'\n\t\t\t\t);\n\n\t\t\t\treturn { blockGapSupport };\n\t\t\t},\n\t\t\t[ blockSupportsLayout, clientId ]\n\t\t);\n\n\t\tif ( ! extraProps ) {\n\t\t\treturn (\n\t\t\t\t<BlockListBlock\n\t\t\t\t\t{ ...props }\n\t\t\t\t\t__unstableLayoutClassNames={\n\t\t\t\t\t\tblockSupportsLayout ? layoutClasses : undefined\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<BlockWithLayoutStyles\n\t\t\t\tblock={ BlockListBlock }\n\t\t\t\tprops={ props }\n\t\t\t\tlayoutClasses={ layoutClasses }\n\t\t\t\t{ ...extraProps }\n\t\t\t/>\n\t\t);\n\t},\n\t'withLayoutStyles'\n);\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/layout/addAttribute',\n\taddAttribute\n);\naddFilter(\n\t'editor.BlockListBlock',\n\t'core/editor/layout/with-layout-styles',\n\twithLayoutStyles\n);\n"],"mappings":"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","ignoreList":[]}