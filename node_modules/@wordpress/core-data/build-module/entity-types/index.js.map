{"version":3,"names":[],"sources":["@wordpress/core-data/src/entity-types/index.ts"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport type { Context, Updatable } from './helpers';\nimport type { Attachment } from './attachment';\nimport type { Base, TemplatePartArea, TemplateType } from './base';\nimport type { Comment } from './comment';\nimport type { GlobalStylesRevision } from './global-styles-revision';\nimport type { MenuLocation } from './menu-location';\nimport type { NavMenu } from './nav-menu';\nimport type { NavMenuItem } from './nav-menu-item';\nimport type { Page } from './page';\nimport type { Plugin } from './plugin';\nimport type { Post } from './post';\nimport type { PostStatusObject } from './post-status';\nimport type { PostRevision } from './post-revision';\nimport type { Settings } from './settings';\nimport type { Sidebar } from './sidebar';\nimport type { Taxonomy } from './taxonomy';\nimport type { Term } from './term';\nimport type { Theme } from './theme';\nimport type { User } from './user';\nimport type { Type } from './type';\nimport type { Widget } from './widget';\nimport type { WidgetType } from './widget-type';\nimport type { WpTemplate } from './wp-template';\nimport type { WpTemplatePart } from './wp-template-part';\n\nexport type { BaseEntityRecords } from './base-entity-records';\n\nexport type {\n\tAttachment,\n\tBase as UnstableBase,\n\tComment,\n\tContext,\n\tGlobalStylesRevision,\n\tMenuLocation,\n\tNavMenu,\n\tNavMenuItem,\n\tPage,\n\tPlugin,\n\tPost,\n\tPostRevision,\n\tPostStatusObject,\n\tSettings,\n\tSidebar,\n\tTaxonomy,\n\tTemplatePartArea,\n\tTemplateType,\n\tTerm,\n\tTheme,\n\tType,\n\tUpdatable,\n\tUser,\n\tWidget,\n\tWidgetType,\n\tWpTemplate,\n\tWpTemplatePart,\n};\n\n/**\n * An interface that may be extended to add types for new entities. Each entry\n * must be a union of entity definitions adhering to the EntityInterface type.\n *\n * Example:\n *\n * ```ts\n * import type { Context } from '@wordpress/core-data';\n * // ...\n *\n * interface Client {\n *   id: number;\n *   name: string;\n *   // ...\n * }\n *\n * interface Order< C extends Context > {\n *   id: number;\n *   name: string;\n *   // ...\n * }\n *\n * declare module '@wordpress/core-data' {\n *     export interface PerPackageEntityRecords< C extends Context > {\n *         myPlugin: Client | Order<C>>\n *     }\n * }\n *\n * const c = getEntityRecord<Order>( 'myPlugin', 'order', 15 );\n * // c is of the type Order\n * ```\n */\nexport interface PerPackageEntityRecords< C extends Context > {\n\tcore:\n\t\t| Base< C >\n\t\t| Attachment< C >\n\t\t| Comment< C >\n\t\t| GlobalStylesRevision< C >\n\t\t| MenuLocation< C >\n\t\t| NavMenu< C >\n\t\t| NavMenuItem< C >\n\t\t| Page< C >\n\t\t| Plugin< C >\n\t\t| Post< C >\n\t\t| PostStatusObject< C >\n\t\t| PostRevision< C >\n\t\t| Settings< C >\n\t\t| Sidebar< C >\n\t\t| Taxonomy< C >\n\t\t| Term< C >\n\t\t| Theme< C >\n\t\t| User< C >\n\t\t| Type< C >\n\t\t| Widget< C >\n\t\t| WidgetType< C >\n\t\t| WpTemplate< C >\n\t\t| WpTemplatePart< C >;\n}\n\n/**\n * A union of all known record types.\n */\nexport type EntityRecord< C extends Context = 'edit' > =\n\tPerPackageEntityRecords< C >[ keyof PerPackageEntityRecords< C > ];\n"],"mappings":"","ignoreList":[]}