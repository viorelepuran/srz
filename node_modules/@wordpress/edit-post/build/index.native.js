"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initializeEditor = initializeEditor;
Object.defineProperty(exports, "store", {
  enumerable: true,
  get: function () {
    return _store.store;
  }
});
require("@wordpress/core-data");
require("@wordpress/format-library");
var _data = require("@wordpress/data");
var _preferences = require("@wordpress/preferences");
var _store = require("./store");
var _editor = _interopRequireDefault(require("./editor"));
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Initializes the Editor and returns a componentProvider
 * that can be registered with `AppRegistry.registerComponent`
 *
 * @param {string} id       Unique identifier for editor instance.
 * @param {Object} postType Post type of the post to edit.
 * @param {Object} postId   ID of the post to edit (unused right now)
 */
function initializeEditor(id, postType, postId) {
  (0, _data.dispatch)(_preferences.store).setDefaults('core/edit-post', {
    editorMode: 'visual',
    fullscreenMode: true,
    inactivePanels: [],
    openPanels: ['post-status'],
    welcomeGuide: true
  });
  (0, _data.dispatch)(_preferences.store).setDefaults('core', {
    editorTool: 'edit',
    hiddenBlockTypes: [],
    inactivePanels: [],
    openPanels: ['post-status'],
    isPublishSidebarEnabled: true,
    fixedToolbar: false
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_editor.default, {
    postId: postId,
    postType: postType
  });
}
//# sourceMappingURL=index.native.js.map