"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useShouldIframe = useShouldIframe;
var _editor = require("@wordpress/editor");
var _data = require("@wordpress/data");
var _blocks = require("@wordpress/blocks");
var _blockEditor = require("@wordpress/block-editor");
var _lockUnlock = require("../../lock-unlock");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const isGutenbergPlugin = globalThis.IS_GUTENBERG_PLUGIN ? true : false;
function useShouldIframe() {
  return (0, _data.useSelect)(select => {
    const {
      getEditorSettings,
      getCurrentPostType,
      getDeviceType
    } = select(_editor.store);
    return (
      // If the theme is block based and the Gutenberg plugin is active,
      // we ALWAYS use the iframe for consistency across the post and site
      // editor.
      isGutenbergPlugin && getEditorSettings().__unstableIsBlockBasedTheme ||
      // We also still want to iframe all the special
      // editor features and modes such as device previews, zoom out, and
      // template/pattern editing.
      getDeviceType() !== 'Desktop' || ['wp_template', 'wp_block'].includes(getCurrentPostType()) || (0, _lockUnlock.unlock)(select(_blockEditor.store)).isZoomOut() ||
      // Finally, still iframe the editor if all blocks are v3 (which means
      // they are marked as iframe-compatible).
      select(_blocks.store).getBlockTypes().every(type => type.apiVersion >= 3)
    );
  }, []);
}
//# sourceMappingURL=use-should-iframe.js.map