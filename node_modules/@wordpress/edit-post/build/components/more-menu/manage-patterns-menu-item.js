"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _components = require("@wordpress/components");
var _coreData = require("@wordpress/core-data");
var _data = require("@wordpress/data");
var _i18n = require("@wordpress/i18n");
var _url = require("@wordpress/url");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

function ManagePatternsMenuItem() {
  const url = (0, _data.useSelect)(select => {
    const {
      canUser
    } = select(_coreData.store);
    const defaultUrl = (0, _url.addQueryArgs)('edit.php', {
      post_type: 'wp_block'
    });
    const patternsUrl = (0, _url.addQueryArgs)('site-editor.php', {
      p: '/pattern'
    });

    // The site editor and templates both check whether the user has
    // edit_theme_options capabilities. We can leverage that here and not
    // display the manage patterns link if the user can't access it.
    return canUser('create', {
      kind: 'postType',
      name: 'wp_template'
    }) ? patternsUrl : defaultUrl;
  }, []);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.MenuItem, {
    role: "menuitem",
    href: url,
    children: (0, _i18n.__)('Manage patterns')
  });
}
var _default = exports.default = ManagePatternsMenuItem;
//# sourceMappingURL=manage-patterns-menu-item.js.map