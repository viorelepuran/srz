"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = InitPatternModal;
var _data = require("@wordpress/data");
var _i18n = require("@wordpress/i18n");
var _components = require("@wordpress/components");
var _element = require("@wordpress/element");
var _editor = require("@wordpress/editor");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

function InitPatternModal() {
  const {
    editPost
  } = (0, _data.useDispatch)(_editor.store);
  const [syncType, setSyncType] = (0, _element.useState)(undefined);
  const [title, setTitle] = (0, _element.useState)('');
  const {
    postType,
    isNewPost
  } = (0, _data.useSelect)(select => {
    const {
      getEditedPostAttribute,
      isCleanNewPost
    } = select(_editor.store);
    return {
      postType: getEditedPostAttribute('type'),
      isNewPost: isCleanNewPost()
    };
  }, []);
  const [isModalOpen, setIsModalOpen] = (0, _element.useState)(() => isNewPost && postType === 'wp_block');
  if (postType !== 'wp_block' || !isNewPost) {
    return null;
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
    children: isModalOpen && /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.Modal, {
      title: (0, _i18n.__)('Create pattern'),
      onRequestClose: () => {
        setIsModalOpen(false);
      },
      overlayClassName: "reusable-blocks-menu-items__convert-modal",
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("form", {
        onSubmit: event => {
          event.preventDefault();
          setIsModalOpen(false);
          editPost({
            title,
            meta: {
              wp_pattern_sync_status: syncType
            }
          });
        },
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_components.__experimentalVStack, {
          spacing: "5",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_components.TextControl, {
            label: (0, _i18n.__)('Name'),
            value: title,
            onChange: setTitle,
            placeholder: (0, _i18n.__)('My pattern'),
            className: "patterns-create-modal__name-input",
            __nextHasNoMarginBottom: true,
            __next40pxDefaultSize: true
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.ToggleControl, {
            __nextHasNoMarginBottom: true,
            label: (0, _i18n._x)('Synced', 'pattern (singular)'),
            help: (0, _i18n.__)('Sync this pattern across multiple locations.'),
            checked: !syncType,
            onChange: () => {
              setSyncType(!syncType ? 'unsynced' : undefined);
            }
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.__experimentalHStack, {
            justify: "right",
            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.Button, {
              __next40pxDefaultSize: true,
              variant: "primary",
              type: "submit",
              disabled: !title,
              accessibleWhenDisabled: true,
              children: (0, _i18n.__)('Create')
            })
          })]
        })
      })
    })
  });
}
//# sourceMappingURL=index.js.map