"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _element = require("@wordpress/element");
var _i18n = require("@wordpress/i18n");
var _data = require("@wordpress/data");
var _compose = require("@wordpress/compose");
var _editor = require("@wordpress/editor");
var _blockEditor = require("@wordpress/block-editor");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

const Header = (0, _element.memo)(function EditorHeader({
  editTitle,
  setTitleRef,
  title
}) {
  const [wrapperStyles] = (0, _blockEditor.useEditorWrapperStyles)();
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
    style: wrapperStyles,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_editor.PostTitle, {
      innerRef: setTitleRef,
      title: title,
      onUpdate: editTitle,
      placeholder: (0, _i18n.__)('Add title'),
      accessibilityLabel: "post-title"
    })
  });
}, (prevProps, nextProps) => prevProps.title === nextProps.title);
var _default = exports.default = (0, _compose.compose)([(0, _data.withSelect)(select => {
  const {
    getEditedPostAttribute
  } = select('core/editor');
  return {
    title: getEditedPostAttribute('title')
  };
}), (0, _data.withDispatch)(dispatch => {
  const {
    editPost
  } = dispatch('core/editor');
  const {
    clearSelectedBlock
  } = dispatch(_blockEditor.store);
  return {
    clearSelectedBlock,
    editTitle(title) {
      editPost({
        title
      });
    }
  };
}), _compose.withPreferredColorScheme])(Header);
//# sourceMappingURL=header.native.js.map