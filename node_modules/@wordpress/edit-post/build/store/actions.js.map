{"version":3,"names":["_apiFetch","_interopRequireDefault","require","_preferences","_editor","_deprecated","_hooks","_coreData","_notices","_i18n","_metaBoxes","_lockUnlock","interfaceStore","unlock","editorPrivateApis","openGeneralSidebar","name","registry","dispatch","enableComplementaryArea","exports","closeGeneralSidebar","disableComplementaryArea","openModal","deprecated","since","alternative","closeModal","openPublishSidebar","editorStore","closePublishSidebar","togglePublishSidebar","toggleEditorPanelEnabled","panelName","toggleEditorPanelOpened","removeEditorPanel","toggleFeature","feature","preferencesStore","toggle","switchEditorMode","mode","togglePinnedPluginItem","pluginName","isPinned","select","isItemPinned","updatePreferredStyleVariations","hint","type","showBlockTypes","blockNames","hideBlockTypes","setAvailableMetaBoxesPerLocation","metaBoxesPerLocation","requestMetaBoxUpdates","window","tinyMCE","triggerSave","baseFormData","FormData","document","querySelector","postId","get","postType","post","coreStore","getEditedEntityRecord","additionalData","comment_status","ping_status","sticky","author","filter","Boolean","activeMetaBoxLocations","getActiveMetaBoxLocations","formDataToMerge","map","location","getMetaBoxContainer","formData","reduce","memo","currentFormData","key","value","append","forEach","apiFetch","url","_wpMetaBoxUrl","method","body","parse","metaBoxUpdatesSuccess","metaBoxUpdatesFailure","__experimentalSetPreviewDeviceType","deviceType","version","setDeviceType","setIsInserterOpened","setIsListViewOpened","isOpen","setIsEditingTemplate","__unstableCreateTemplate","metaBoxesInitialized","initializeMetaBoxes","isEditorReady","__unstableIsEditorReady","getCurrentPostType","postboxes","page","add_postbox_toggles","addAction","options","isAutosave","hasMetaBoxes","toggleDistractionFree","toggleFullscreenMode","isFullscreen","noticesStore","createInfoNotice","__","id","actions","label","onClick"],"sources":["@wordpress/edit-post/src/store/actions.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport {\n\tstore as editorStore,\n\tprivateApis as editorPrivateApis,\n} from '@wordpress/editor';\nimport deprecated from '@wordpress/deprecated';\nimport { addAction } from '@wordpress/hooks';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { getMetaBoxContainer } from '../utils/meta-boxes';\nimport { unlock } from '../lock-unlock';\n\nconst { interfaceStore } = unlock( editorPrivateApis );\n\n/**\n * Returns an action object used in signalling that the user opened an editor sidebar.\n *\n * @param {?string} name Sidebar name to be opened.\n */\nexport const openGeneralSidebar =\n\t( name ) =>\n\t( { registry } ) => {\n\t\tregistry\n\t\t\t.dispatch( interfaceStore )\n\t\t\t.enableComplementaryArea( 'core', name );\n\t};\n\n/**\n * Returns an action object signalling that the user closed the sidebar.\n */\nexport const closeGeneralSidebar =\n\t() =>\n\t( { registry } ) =>\n\t\tregistry.dispatch( interfaceStore ).disableComplementaryArea( 'core' );\n\n/**\n * Returns an action object used in signalling that the user opened a modal.\n *\n * @deprecated since WP 6.3 use `core/interface` store's action with the same name instead.\n *\n *\n * @param {string} name A string that uniquely identifies the modal.\n *\n * @return {Object} Action object.\n */\nexport const openModal =\n\t( name ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"select( 'core/edit-post' ).openModal( name )\", {\n\t\t\tsince: '6.3',\n\t\t\talternative: \"select( 'core/interface').openModal( name )\",\n\t\t} );\n\t\treturn registry.dispatch( interfaceStore ).openModal( name );\n\t};\n\n/**\n * Returns an action object signalling that the user closed a modal.\n *\n * @deprecated since WP 6.3 use `core/interface` store's action with the same name instead.\n *\n * @return {Object} Action object.\n */\nexport const closeModal =\n\t() =>\n\t( { registry } ) => {\n\t\tdeprecated( \"select( 'core/edit-post' ).closeModal()\", {\n\t\t\tsince: '6.3',\n\t\t\talternative: \"select( 'core/interface').closeModal()\",\n\t\t} );\n\t\treturn registry.dispatch( interfaceStore ).closeModal();\n\t};\n\n/**\n * Returns an action object used in signalling that the user opened the publish\n * sidebar.\n * @deprecated\n *\n * @return {Object} Action object\n */\nexport const openPublishSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).openPublishSidebar\", {\n\t\t\tsince: '6.6',\n\t\t\talternative: \"dispatch( 'core/editor').openPublishSidebar\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).openPublishSidebar();\n\t};\n\n/**\n * Returns an action object used in signalling that the user closed the\n * publish sidebar.\n * @deprecated\n *\n * @return {Object} Action object.\n */\nexport const closePublishSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).closePublishSidebar\", {\n\t\t\tsince: '6.6',\n\t\t\talternative: \"dispatch( 'core/editor').closePublishSidebar\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).closePublishSidebar();\n\t};\n\n/**\n * Returns an action object used in signalling that the user toggles the publish sidebar.\n * @deprecated\n *\n * @return {Object} Action object\n */\nexport const togglePublishSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).togglePublishSidebar\", {\n\t\t\tsince: '6.6',\n\t\t\talternative: \"dispatch( 'core/editor').togglePublishSidebar\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).togglePublishSidebar();\n\t};\n\n/**\n * Returns an action object used to enable or disable a panel in the editor.\n *\n * @deprecated\n *\n * @param {string} panelName A string that identifies the panel to enable or disable.\n *\n * @return {Object} Action object.\n */\nexport const toggleEditorPanelEnabled =\n\t( panelName ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).toggleEditorPanelEnabled\", {\n\t\t\tsince: '6.5',\n\t\t\talternative: \"dispatch( 'core/editor').toggleEditorPanelEnabled\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).toggleEditorPanelEnabled( panelName );\n\t};\n\n/**\n * Opens a closed panel and closes an open panel.\n *\n * @deprecated\n *\n * @param {string} panelName A string that identifies the panel to open or close.\n */\nexport const toggleEditorPanelOpened =\n\t( panelName ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).toggleEditorPanelOpened\", {\n\t\t\tsince: '6.5',\n\t\t\talternative: \"dispatch( 'core/editor').toggleEditorPanelOpened\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).toggleEditorPanelOpened( panelName );\n\t};\n\n/**\n * Returns an action object used to remove a panel from the editor.\n *\n * @deprecated\n *\n * @param {string} panelName A string that identifies the panel to remove.\n *\n * @return {Object} Action object.\n */\nexport const removeEditorPanel =\n\t( panelName ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).removeEditorPanel\", {\n\t\t\tsince: '6.5',\n\t\t\talternative: \"dispatch( 'core/editor').removeEditorPanel\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).removeEditorPanel( panelName );\n\t};\n\n/**\n * Triggers an action used to toggle a feature flag.\n *\n * @param {string} feature Feature name.\n */\nexport const toggleFeature =\n\t( feature ) =>\n\t( { registry } ) =>\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.toggle( 'core/edit-post', feature );\n\n/**\n * Triggers an action used to switch editor mode.\n *\n * @deprecated\n *\n * @param {string} mode The editor mode.\n */\nexport const switchEditorMode =\n\t( mode ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).switchEditorMode\", {\n\t\t\tsince: '6.6',\n\t\t\talternative: \"dispatch( 'core/editor').switchEditorMode\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).switchEditorMode( mode );\n\t};\n\n/**\n * Triggers an action object used to toggle a plugin name flag.\n *\n * @param {string} pluginName Plugin name.\n */\nexport const togglePinnedPluginItem =\n\t( pluginName ) =>\n\t( { registry } ) => {\n\t\tconst isPinned = registry\n\t\t\t.select( interfaceStore )\n\t\t\t.isItemPinned( 'core', pluginName );\n\n\t\tregistry\n\t\t\t.dispatch( interfaceStore )\n\t\t\t[ isPinned ? 'unpinItem' : 'pinItem' ]( 'core', pluginName );\n\t};\n\n/**\n * Returns an action object used in signaling that a style should be auto-applied when a block is created.\n *\n * @deprecated\n */\nexport function updatePreferredStyleVariations() {\n\tdeprecated( \"dispatch( 'core/edit-post' ).updatePreferredStyleVariations\", {\n\t\tsince: '6.6',\n\t\thint: 'Preferred Style Variations are not supported anymore.',\n\t} );\n\treturn { type: 'NOTHING' };\n}\n\n/**\n * Update the provided block types to be visible.\n *\n * @param {string[]} blockNames Names of block types to show.\n */\nexport const showBlockTypes =\n\t( blockNames ) =>\n\t( { registry } ) => {\n\t\tunlock( registry.dispatch( editorStore ) ).showBlockTypes( blockNames );\n\t};\n\n/**\n * Update the provided block types to be hidden.\n *\n * @param {string[]} blockNames Names of block types to hide.\n */\nexport const hideBlockTypes =\n\t( blockNames ) =>\n\t( { registry } ) => {\n\t\tunlock( registry.dispatch( editorStore ) ).hideBlockTypes( blockNames );\n\t};\n\n/**\n * Stores info about which Meta boxes are available in which location.\n *\n * @param {Object} metaBoxesPerLocation Meta boxes per location.\n */\nexport function setAvailableMetaBoxesPerLocation( metaBoxesPerLocation ) {\n\treturn {\n\t\ttype: 'SET_META_BOXES_PER_LOCATIONS',\n\t\tmetaBoxesPerLocation,\n\t};\n}\n\n/**\n * Update a metabox.\n */\nexport const requestMetaBoxUpdates =\n\t() =>\n\tasync ( { registry, select, dispatch } ) => {\n\t\tdispatch( {\n\t\t\ttype: 'REQUEST_META_BOX_UPDATES',\n\t\t} );\n\n\t\t// Saves the wp_editor fields.\n\t\tif ( window.tinyMCE ) {\n\t\t\twindow.tinyMCE.triggerSave();\n\t\t}\n\n\t\t// We gather the base form data.\n\t\tconst baseFormData = new window.FormData(\n\t\t\tdocument.querySelector( '.metabox-base-form' )\n\t\t);\n\n\t\tconst postId = baseFormData.get( 'post_ID' );\n\t\tconst postType = baseFormData.get( 'post_type' );\n\n\t\t// Additional data needed for backward compatibility.\n\t\t// If we do not provide this data, the post will be overridden with the default values.\n\t\t// We cannot rely on getCurrentPost because right now on the editor we may be editing a pattern or a template.\n\t\t// We need to retrieve the post that the base form data is referring to.\n\t\tconst post = registry\n\t\t\t.select( coreStore )\n\t\t\t.getEditedEntityRecord( 'postType', postType, postId );\n\t\tconst additionalData = [\n\t\t\tpost.comment_status\n\t\t\t\t? [ 'comment_status', post.comment_status ]\n\t\t\t\t: false,\n\t\t\tpost.ping_status ? [ 'ping_status', post.ping_status ] : false,\n\t\t\tpost.sticky ? [ 'sticky', post.sticky ] : false,\n\t\t\tpost.author ? [ 'post_author', post.author ] : false,\n\t\t].filter( Boolean );\n\n\t\t// We gather all the metaboxes locations.\n\t\tconst activeMetaBoxLocations = select.getActiveMetaBoxLocations();\n\t\tconst formDataToMerge = [\n\t\t\tbaseFormData,\n\t\t\t...activeMetaBoxLocations.map(\n\t\t\t\t( location ) =>\n\t\t\t\t\tnew window.FormData( getMetaBoxContainer( location ) )\n\t\t\t),\n\t\t];\n\n\t\t// Merge all form data objects into a single one.\n\t\tconst formData = formDataToMerge.reduce( ( memo, currentFormData ) => {\n\t\t\tfor ( const [ key, value ] of currentFormData ) {\n\t\t\t\tmemo.append( key, value );\n\t\t\t}\n\t\t\treturn memo;\n\t\t}, new window.FormData() );\n\t\tadditionalData.forEach( ( [ key, value ] ) =>\n\t\t\tformData.append( key, value )\n\t\t);\n\n\t\ttry {\n\t\t\t// Save the metaboxes.\n\t\t\tawait apiFetch( {\n\t\t\t\turl: window._wpMetaBoxUrl,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: formData,\n\t\t\t\tparse: false,\n\t\t\t} );\n\t\t\tdispatch.metaBoxUpdatesSuccess();\n\t\t} catch {\n\t\t\tdispatch.metaBoxUpdatesFailure();\n\t\t}\n\t};\n\n/**\n * Returns an action object used to signal a successful meta box update.\n *\n * @return {Object} Action object.\n */\nexport function metaBoxUpdatesSuccess() {\n\treturn {\n\t\ttype: 'META_BOX_UPDATES_SUCCESS',\n\t};\n}\n\n/**\n * Returns an action object used to signal a failed meta box update.\n *\n * @return {Object} Action object.\n */\nexport function metaBoxUpdatesFailure() {\n\treturn {\n\t\ttype: 'META_BOX_UPDATES_FAILURE',\n\t};\n}\n\n/**\n * Action that changes the width of the editing canvas.\n *\n * @deprecated\n *\n * @param {string} deviceType\n */\nexport const __experimentalSetPreviewDeviceType =\n\t( deviceType ) =>\n\t( { registry } ) => {\n\t\tdeprecated(\n\t\t\t\"dispatch( 'core/edit-post' ).__experimentalSetPreviewDeviceType\",\n\t\t\t{\n\t\t\t\tsince: '6.5',\n\t\t\t\tversion: '6.7',\n\t\t\t\thint: 'registry.dispatch( editorStore ).setDeviceType',\n\t\t\t}\n\t\t);\n\t\tregistry.dispatch( editorStore ).setDeviceType( deviceType );\n\t};\n\n/**\n * Returns an action object used to open/close the inserter.\n *\n * @deprecated\n *\n * @param {boolean|Object} value Whether the inserter should be opened (true) or closed (false).\n */\nexport const setIsInserterOpened =\n\t( value ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).setIsInserterOpened\", {\n\t\t\tsince: '6.5',\n\t\t\talternative: \"dispatch( 'core/editor').setIsInserterOpened\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).setIsInserterOpened( value );\n\t};\n\n/**\n * Returns an action object used to open/close the list view.\n *\n * @deprecated\n *\n * @param {boolean} isOpen A boolean representing whether the list view should be opened or closed.\n */\nexport const setIsListViewOpened =\n\t( isOpen ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).setIsListViewOpened\", {\n\t\t\tsince: '6.5',\n\t\t\talternative: \"dispatch( 'core/editor').setIsListViewOpened\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).setIsListViewOpened( isOpen );\n\t};\n\n/**\n * Returns an action object used to switch to template editing.\n *\n * @deprecated\n */\nexport function setIsEditingTemplate() {\n\tdeprecated( \"dispatch( 'core/edit-post' ).setIsEditingTemplate\", {\n\t\tsince: '6.5',\n\t\talternative: \"dispatch( 'core/editor').setRenderingMode\",\n\t} );\n\treturn { type: 'NOTHING' };\n}\n\n/**\n * Create a block based template.\n *\n * @deprecated\n */\nexport function __unstableCreateTemplate() {\n\tdeprecated( \"dispatch( 'core/edit-post' ).__unstableCreateTemplate\", {\n\t\tsince: '6.5',\n\t} );\n\treturn { type: 'NOTHING' };\n}\n\nlet metaBoxesInitialized = false;\n\n/**\n * Initializes WordPress `postboxes` script and the logic for saving meta boxes.\n */\nexport const initializeMetaBoxes =\n\t() =>\n\t( { registry, select, dispatch } ) => {\n\t\tconst isEditorReady = registry\n\t\t\t.select( editorStore )\n\t\t\t.__unstableIsEditorReady();\n\n\t\tif ( ! isEditorReady ) {\n\t\t\treturn;\n\t\t}\n\t\t// Only initialize once.\n\t\tif ( metaBoxesInitialized ) {\n\t\t\treturn;\n\t\t}\n\t\tconst postType = registry.select( editorStore ).getCurrentPostType();\n\t\tif ( window.postboxes.page !== postType ) {\n\t\t\twindow.postboxes.add_postbox_toggles( postType );\n\t\t}\n\n\t\tmetaBoxesInitialized = true;\n\n\t\t// Save metaboxes on save completion, except for autosaves.\n\t\taddAction(\n\t\t\t'editor.savePost',\n\t\t\t'core/edit-post/save-metaboxes',\n\t\t\tasync ( post, options ) => {\n\t\t\t\tif ( ! options.isAutosave && select.hasMetaBoxes() ) {\n\t\t\t\t\tawait dispatch.requestMetaBoxUpdates();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tdispatch( {\n\t\t\ttype: 'META_BOXES_INITIALIZED',\n\t\t} );\n\t};\n\n/**\n * Action that toggles Distraction free mode.\n * Distraction free mode expects there are no sidebars, as due to the\n * z-index values set, you can't close sidebars.\n *\n * @deprecated\n */\nexport const toggleDistractionFree =\n\t() =>\n\t( { registry } ) => {\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).toggleDistractionFree\", {\n\t\t\tsince: '6.6',\n\t\t\talternative: \"dispatch( 'core/editor').toggleDistractionFree\",\n\t\t} );\n\t\tregistry.dispatch( editorStore ).toggleDistractionFree();\n\t};\n\n/**\n * Action that toggles the Fullscreen Mode view option.\n */\nexport const toggleFullscreenMode =\n\t() =>\n\t( { registry } ) => {\n\t\tconst isFullscreen = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( 'core/edit-post', 'fullscreenMode' );\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.toggle( 'core/edit-post', 'fullscreenMode' );\n\n\t\tregistry\n\t\t\t.dispatch( noticesStore )\n\t\t\t.createInfoNotice(\n\t\t\t\tisFullscreen\n\t\t\t\t\t? __( 'Fullscreen mode deactivated.' )\n\t\t\t\t\t: __( 'Fullscreen mode activated.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/edit-post/toggle-fullscreen-mode/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'Undo' ),\n\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\tregistry\n\t\t\t\t\t\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t\t\t\t\t\t.toggle(\n\t\t\t\t\t\t\t\t\t\t'core/edit-post',\n\t\t\t\t\t\t\t\t\t\t'fullscreenMode'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t};\n"],"mappings":"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","ignoreList":[]}