{"version":3,"names":["_url","require","_i18n","convertBlobToFile","fileOrBlob","File","ext","type","split","mediaType","renameFile","file","name","lastModified","cloneFile","getFileExtension","includes","pop","getFileBasename","slice","join","getFileNameFromUrl","url","getFilename","_x"],"sources":["@wordpress/upload-media/src/utils.ts"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getFilename } from '@wordpress/url';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Converts a Blob to a File with a default name like \"image.png\".\n *\n * If it is already a File object, it is returned unchanged.\n *\n * @param fileOrBlob Blob object.\n * @return File object.\n */\nexport function convertBlobToFile( fileOrBlob: Blob | File ): File {\n\tif ( fileOrBlob instanceof File ) {\n\t\treturn fileOrBlob;\n\t}\n\n\t// Extension is only an approximation.\n\t// The server will override it if incorrect.\n\tconst ext = fileOrBlob.type.split( '/' )[ 1 ];\n\tconst mediaType =\n\t\t'application/pdf' === fileOrBlob.type\n\t\t\t? 'document'\n\t\t\t: fileOrBlob.type.split( '/' )[ 0 ];\n\treturn new File( [ fileOrBlob ], `${ mediaType }.${ ext }`, {\n\t\ttype: fileOrBlob.type,\n\t} );\n}\n\n/**\n * Renames a given file and returns a new file.\n *\n * Copies over the last modified time.\n *\n * @param file File object.\n * @param name File name.\n * @return Renamed file object.\n */\nexport function renameFile( file: File, name: string ): File {\n\treturn new File( [ file ], name, {\n\t\ttype: file.type,\n\t\tlastModified: file.lastModified,\n\t} );\n}\n\n/**\n * Clones a given file object.\n *\n * @param file File object.\n * @return New file object.\n */\nexport function cloneFile( file: File ): File {\n\treturn renameFile( file, file.name );\n}\n\n/**\n * Returns the file extension from a given file name or URL.\n *\n * @param file File URL.\n * @return File extension or null if it does not have one.\n */\nexport function getFileExtension( file: string ): string | null {\n\treturn file.includes( '.' ) ? file.split( '.' ).pop() || null : null;\n}\n\n/**\n * Returns file basename without extension.\n *\n * For example, turns \"my-awesome-file.jpeg\" into \"my-awesome-file\".\n *\n * @param name File name.\n * @return File basename.\n */\nexport function getFileBasename( name: string ): string {\n\treturn name.includes( '.' )\n\t\t? name.split( '.' ).slice( 0, -1 ).join( '.' )\n\t\t: name;\n}\n\n/**\n * Returns the file name including extension from a URL.\n *\n * @param url File URL.\n * @return File name.\n */\nexport function getFileNameFromUrl( url: string ) {\n\treturn getFilename( url ) || _x( 'unnamed', 'file name' );\n}\n"],"mappings":";;;;;;;;;;;AAGA,IAAAA,IAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,iBAAiBA,CAAEC,UAAuB,EAAS;EAClE,IAAKA,UAAU,YAAYC,IAAI,EAAG;IACjC,OAAOD,UAAU;EAClB;;EAEA;EACA;EACA,MAAME,GAAG,GAAGF,UAAU,CAACG,IAAI,CAACC,KAAK,CAAE,GAAI,CAAC,CAAE,CAAC,CAAE;EAC7C,MAAMC,SAAS,GACd,iBAAiB,KAAKL,UAAU,CAACG,IAAI,GAClC,UAAU,GACVH,UAAU,CAACG,IAAI,CAACC,KAAK,CAAE,GAAI,CAAC,CAAE,CAAC,CAAE;EACrC,OAAO,IAAIH,IAAI,CAAE,CAAED,UAAU,CAAE,EAAE,GAAIK,SAAS,IAAMH,GAAG,EAAG,EAAE;IAC3DC,IAAI,EAAEH,UAAU,CAACG;EAClB,CAAE,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,UAAUA,CAAEC,IAAU,EAAEC,IAAY,EAAS;EAC5D,OAAO,IAAIP,IAAI,CAAE,CAAEM,IAAI,CAAE,EAAEC,IAAI,EAAE;IAChCL,IAAI,EAAEI,IAAI,CAACJ,IAAI;IACfM,YAAY,EAAEF,IAAI,CAACE;EACpB,CAAE,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,SAASA,CAAEH,IAAU,EAAS;EAC7C,OAAOD,UAAU,CAAEC,IAAI,EAAEA,IAAI,CAACC,IAAK,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,gBAAgBA,CAAEJ,IAAY,EAAkB;EAC/D,OAAOA,IAAI,CAACK,QAAQ,CAAE,GAAI,CAAC,GAAGL,IAAI,CAACH,KAAK,CAAE,GAAI,CAAC,CAACS,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,eAAeA,CAAEN,IAAY,EAAW;EACvD,OAAOA,IAAI,CAACI,QAAQ,CAAE,GAAI,CAAC,GACxBJ,IAAI,CAACJ,KAAK,CAAE,GAAI,CAAC,CAACW,KAAK,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAACC,IAAI,CAAE,GAAI,CAAC,GAC5CR,IAAI;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,kBAAkBA,CAAEC,GAAW,EAAG;EACjD,OAAO,IAAAC,gBAAW,EAAED,GAAI,CAAC,IAAI,IAAAE,QAAE,EAAE,SAAS,EAAE,WAAY,CAAC;AAC1D","ignoreList":[]}