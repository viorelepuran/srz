{"version":3,"names":["_types","require","getAllItems","state","queue","getItem","id","find","item","isBatchUploaded","batchId","batchItems","filter","length","isUploadingToPost","postOrAttachmentId","some","currentOperation","OperationType","Upload","additionalData","post","getPausedUploadForPost","status","ItemStatus","Paused","isPaused","queueStatus","getBlobUrls","blobUrls"],"sources":["@wordpress/upload-media/src/store/private-selectors.ts"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport {\n\ttype BatchId,\n\tItemStatus,\n\tOperationType,\n\ttype QueueItem,\n\ttype QueueItemId,\n\ttype State,\n} from './types';\n\n/**\n * Returns all items currently being uploaded.\n *\n * @param state Upload state.\n *\n * @return Queue items.\n */\nexport function getAllItems( state: State ): QueueItem[] {\n\treturn state.queue;\n}\n\n/**\n * Returns a specific item given its unique ID.\n *\n * @param state Upload state.\n * @param id    Item ID.\n *\n * @return Queue item.\n */\nexport function getItem(\n\tstate: State,\n\tid: QueueItemId\n): QueueItem | undefined {\n\treturn state.queue.find( ( item ) => item.id === id );\n}\n\n/**\n * Determines whether a batch has been successfully uploaded, given its unique ID.\n *\n * @param state   Upload state.\n * @param batchId Batch ID.\n *\n * @return Whether a batch has been uploaded.\n */\nexport function isBatchUploaded( state: State, batchId: BatchId ): boolean {\n\tconst batchItems = state.queue.filter(\n\t\t( item ) => batchId === item.batchId\n\t);\n\treturn batchItems.length === 0;\n}\n\n/**\n * Determines whether an upload is currently in progress given a post or attachment ID.\n *\n * @param state              Upload state.\n * @param postOrAttachmentId Post ID or attachment ID.\n *\n * @return Whether upload is currently in progress for the given post or attachment.\n */\nexport function isUploadingToPost(\n\tstate: State,\n\tpostOrAttachmentId: number\n): boolean {\n\treturn state.queue.some(\n\t\t( item ) =>\n\t\t\titem.currentOperation === OperationType.Upload &&\n\t\t\titem.additionalData.post === postOrAttachmentId\n\t);\n}\n\n/**\n * Returns the next paused upload for a given post or attachment ID.\n *\n * @param state              Upload state.\n * @param postOrAttachmentId Post ID or attachment ID.\n *\n * @return Paused item.\n */\nexport function getPausedUploadForPost(\n\tstate: State,\n\tpostOrAttachmentId: number\n): QueueItem | undefined {\n\treturn state.queue.find(\n\t\t( item ) =>\n\t\t\titem.status === ItemStatus.Paused &&\n\t\t\titem.additionalData.post === postOrAttachmentId\n\t);\n}\n\n/**\n * Determines whether uploading is currently paused.\n *\n * @param state Upload state.\n *\n * @return Whether uploading is currently paused.\n */\nexport function isPaused( state: State ): boolean {\n\treturn state.queueStatus === 'paused';\n}\n\n/**\n * Returns all cached blob URLs for a given item ID.\n *\n * @param state Upload state.\n * @param id    Item ID\n *\n * @return List of blob URLs.\n */\nexport function getBlobUrls( state: State, id: QueueItemId ): string[] {\n\treturn state.blobUrls[ id ] || [];\n}\n"],"mappings":";;;;;;;;;;;;AAGA,IAAAA,MAAA,GAAAC,OAAA;AAHA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,WAAWA,CAAEC,KAAY,EAAgB;EACxD,OAAOA,KAAK,CAACC,KAAK;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,OAAOA,CACtBF,KAAY,EACZG,EAAe,EACS;EACxB,OAAOH,KAAK,CAACC,KAAK,CAACG,IAAI,CAAIC,IAAI,IAAMA,IAAI,CAACF,EAAE,KAAKA,EAAG,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,eAAeA,CAAEN,KAAY,EAAEO,OAAgB,EAAY;EAC1E,MAAMC,UAAU,GAAGR,KAAK,CAACC,KAAK,CAACQ,MAAM,CAClCJ,IAAI,IAAME,OAAO,KAAKF,IAAI,CAACE,OAC9B,CAAC;EACD,OAAOC,UAAU,CAACE,MAAM,KAAK,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,iBAAiBA,CAChCX,KAAY,EACZY,kBAA0B,EAChB;EACV,OAAOZ,KAAK,CAACC,KAAK,CAACY,IAAI,CACpBR,IAAI,IACLA,IAAI,CAACS,gBAAgB,KAAKC,oBAAa,CAACC,MAAM,IAC9CX,IAAI,CAACY,cAAc,CAACC,IAAI,KAAKN,kBAC/B,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASO,sBAAsBA,CACrCnB,KAAY,EACZY,kBAA0B,EACF;EACxB,OAAOZ,KAAK,CAACC,KAAK,CAACG,IAAI,CACpBC,IAAI,IACLA,IAAI,CAACe,MAAM,KAAKC,iBAAU,CAACC,MAAM,IACjCjB,IAAI,CAACY,cAAc,CAACC,IAAI,KAAKN,kBAC/B,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASW,QAAQA,CAAEvB,KAAY,EAAY;EACjD,OAAOA,KAAK,CAACwB,WAAW,KAAK,QAAQ;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,WAAWA,CAAEzB,KAAY,EAAEG,EAAe,EAAa;EACtE,OAAOH,KAAK,CAAC0B,QAAQ,CAAEvB,EAAE,CAAE,IAAI,EAAE;AAClC","ignoreList":[]}