{"version":3,"names":["_memize","_interopRequireDefault","require","_types","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","next","tag","text","index","re","regexp","lastIndex","match","exec","result","content","shortcode","fromMatch","slice","replace","callback","left","$3","attrs","slash","closing","right","arguments","string","options","RegExp","memize","named","numeric","pattern","toLowerCase","push","type","assign","attributes","attributeTypes","length","every","t","entries","value","set","attr","test","name","_default","default"],"sources":["@wordpress/shortcode/src/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport memize from 'memize';\n\nexport * from './types';\n\n/**\n * Find the next matching shortcode.\n *\n * @param {string} tag   Shortcode tag.\n * @param {string} text  Text to search.\n * @param {number} index Index to start search from.\n *\n * @return {import('./types').ShortcodeMatch | undefined} Matched information.\n */\nexport function next( tag, text, index = 0 ) {\n\tconst re = regexp( tag );\n\n\tre.lastIndex = index;\n\n\tconst match = re.exec( text );\n\n\tif ( ! match ) {\n\t\treturn;\n\t}\n\n\t// If we matched an escaped shortcode, try again.\n\tif ( '[' === match[ 1 ] && ']' === match[ 7 ] ) {\n\t\treturn next( tag, text, re.lastIndex );\n\t}\n\n\tconst result = {\n\t\tindex: match.index,\n\t\tcontent: match[ 0 ],\n\t\tshortcode: fromMatch( match ),\n\t};\n\n\t// If we matched a leading `[`, strip it from the match and increment the\n\t// index accordingly.\n\tif ( match[ 1 ] ) {\n\t\tresult.content = result.content.slice( 1 );\n\t\tresult.index++;\n\t}\n\n\t// If we matched a trailing `]`, strip it from the match.\n\tif ( match[ 7 ] ) {\n\t\tresult.content = result.content.slice( 0, -1 );\n\t}\n\n\treturn result;\n}\n\n/**\n * Replace matching shortcodes in a block of text.\n *\n * @param {string}                            tag      Shortcode tag.\n * @param {string}                            text     Text to search.\n * @param {import('./types').ReplaceCallback} callback Function to process the match and return\n *                                                     replacement string.\n *\n * @return {string} Text with shortcodes replaced.\n */\nexport function replace( tag, text, callback ) {\n\treturn text.replace(\n\t\tregexp( tag ),\n\t\tfunction ( match, left, $3, attrs, slash, content, closing, right ) {\n\t\t\t// If both extra brackets exist, the shortcode has been properly\n\t\t\t// escaped.\n\t\t\tif ( left === '[' && right === ']' ) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\t// Create the match object and pass it through the callback.\n\t\t\tconst result = callback( fromMatch( arguments ) );\n\n\t\t\t// Make sure to return any of the extra brackets if they weren't used to\n\t\t\t// escape the shortcode.\n\t\t\treturn result || result === '' ? left + result + right : match;\n\t\t}\n\t);\n}\n\n/**\n * Generate a string from shortcode parameters.\n *\n * Creates a shortcode instance and returns a string.\n *\n * Accepts the same `options` as the `shortcode()` constructor, containing a\n * `tag` string, a string or object of `attrs`, a boolean indicating whether to\n * format the shortcode using a `single` tag, and a `content` string.\n *\n * @param {Object} options\n *\n * @return {string} String representation of the shortcode.\n */\nexport function string( options ) {\n\treturn new shortcode( options ).string();\n}\n\n/**\n * Generate a RegExp to identify a shortcode.\n *\n * The base regex is functionally equivalent to the one found in\n * `get_shortcode_regex()` in `wp-includes/shortcodes.php`.\n *\n * Capture groups:\n *\n * 1. An extra `[` to allow for escaping shortcodes with double `[[]]`\n * 2. The shortcode name\n * 3. The shortcode argument list\n * 4. The self closing `/`\n * 5. The content of a shortcode when it wraps some content.\n * 6. The closing tag.\n * 7. An extra `]` to allow for escaping shortcodes with double `[[]]`\n *\n * @param {string} tag Shortcode tag.\n *\n * @return {RegExp} Shortcode RegExp.\n */\nexport function regexp( tag ) {\n\treturn new RegExp(\n\t\t'\\\\[(\\\\[?)(' +\n\t\t\ttag +\n\t\t\t')(?![\\\\w-])([^\\\\]\\\\/]*(?:\\\\/(?!\\\\])[^\\\\]\\\\/]*)*?)(?:(\\\\/)\\\\]|\\\\](?:([^\\\\[]*(?:\\\\[(?!\\\\/\\\\2\\\\])[^\\\\[]*)*)(\\\\[\\\\/\\\\2\\\\]))?)(\\\\]?)',\n\t\t'g'\n\t);\n}\n\n/**\n * Parse shortcode attributes.\n *\n * Shortcodes accept many types of attributes. These can chiefly be divided into\n * named and numeric attributes:\n *\n * Named attributes are assigned on a key/value basis, while numeric attributes\n * are treated as an array.\n *\n * Named attributes can be formatted as either `name=\"value\"`, `name='value'`,\n * or `name=value`. Numeric attributes can be formatted as `\"value\"` or just\n * `value`.\n *\n * @param {string} text Serialised shortcode attributes.\n *\n * @return {import('./types').ShortcodeAttrs} Parsed shortcode attributes.\n */\nexport const attrs = memize( ( text ) => {\n\tconst named = {};\n\tconst numeric = [];\n\n\t// This regular expression is reused from `shortcode_parse_atts()` in\n\t// `wp-includes/shortcodes.php`.\n\t//\n\t// Capture groups:\n\t//\n\t// 1. An attribute name, that corresponds to...\n\t// 2. a value in double quotes.\n\t// 3. An attribute name, that corresponds to...\n\t// 4. a value in single quotes.\n\t// 5. An attribute name, that corresponds to...\n\t// 6. an unquoted value.\n\t// 7. A numeric attribute in double quotes.\n\t// 8. A numeric attribute in single quotes.\n\t// 9. An unquoted numeric attribute.\n\tconst pattern =\n\t\t/([\\w-]+)\\s*=\\s*\"([^\"]*)\"(?:\\s|$)|([\\w-]+)\\s*=\\s*'([^']*)'(?:\\s|$)|([\\w-]+)\\s*=\\s*([^\\s'\"]+)(?:\\s|$)|\"([^\"]*)\"(?:\\s|$)|'([^']*)'(?:\\s|$)|(\\S+)(?:\\s|$)/g;\n\n\t// Map zero-width spaces to actual spaces.\n\ttext = text.replace( /[\\u00a0\\u200b]/g, ' ' );\n\n\tlet match;\n\n\t// Match and normalize attributes.\n\twhile ( ( match = pattern.exec( text ) ) ) {\n\t\tif ( match[ 1 ] ) {\n\t\t\tnamed[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t} else if ( match[ 3 ] ) {\n\t\t\tnamed[ match[ 3 ].toLowerCase() ] = match[ 4 ];\n\t\t} else if ( match[ 5 ] ) {\n\t\t\tnamed[ match[ 5 ].toLowerCase() ] = match[ 6 ];\n\t\t} else if ( match[ 7 ] ) {\n\t\t\tnumeric.push( match[ 7 ] );\n\t\t} else if ( match[ 8 ] ) {\n\t\t\tnumeric.push( match[ 8 ] );\n\t\t} else if ( match[ 9 ] ) {\n\t\t\tnumeric.push( match[ 9 ] );\n\t\t}\n\t}\n\n\treturn { named, numeric };\n} );\n\n/**\n * Generate a Shortcode Object from a RegExp match.\n *\n * Accepts a `match` object from calling `regexp.exec()` on a `RegExp` generated\n * by `regexp()`. `match` can also be set to the `arguments` from a callback\n * passed to `regexp.replace()`.\n *\n * @param {import('./types').Match} match Match array.\n *\n * @return {InstanceType<import('./types').shortcode>} Shortcode instance.\n */\nexport function fromMatch( match ) {\n\tlet type;\n\n\tif ( match[ 4 ] ) {\n\t\ttype = 'self-closing';\n\t} else if ( match[ 6 ] ) {\n\t\ttype = 'closed';\n\t} else {\n\t\ttype = 'single';\n\t}\n\n\treturn new shortcode( {\n\t\ttag: match[ 2 ],\n\t\tattrs: match[ 3 ],\n\t\ttype,\n\t\tcontent: match[ 5 ],\n\t} );\n}\n\n/**\n * Creates a shortcode instance.\n *\n * To access a raw representation of a shortcode, pass an `options` object,\n * containing a `tag` string, a string or object of `attrs`, a string indicating\n * the `type` of the shortcode ('single', 'self-closing', or 'closed'), and a\n * `content` string.\n *\n * @type {import('./types').shortcode} Shortcode instance.\n */\nconst shortcode = Object.assign(\n\tfunction ( options ) {\n\t\tconst { tag, attrs: attributes, type, content } = options || {};\n\t\tObject.assign( this, { tag, type, content } );\n\n\t\t// Ensure we have a correctly formatted `attrs` object.\n\t\tthis.attrs = {\n\t\t\tnamed: {},\n\t\t\tnumeric: [],\n\t\t};\n\n\t\tif ( ! attributes ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attributeTypes = [ 'named', 'numeric' ];\n\n\t\t// Parse a string of attributes.\n\t\tif ( typeof attributes === 'string' ) {\n\t\t\tthis.attrs = attrs( attributes );\n\t\t\t// Identify a correctly formatted `attrs` object.\n\t\t} else if (\n\t\t\tattributes.length === attributeTypes.length &&\n\t\t\tattributeTypes.every( ( t, key ) => t === attributes[ key ] )\n\t\t) {\n\t\t\tthis.attrs = attributes;\n\t\t\t// Handle a flat object of attributes.\n\t\t} else {\n\t\t\tObject.entries( attributes ).forEach( ( [ key, value ] ) => {\n\t\t\t\tthis.set( key, value );\n\t\t\t} );\n\t\t}\n\t},\n\t{\n\t\tnext,\n\t\treplace,\n\t\tstring,\n\t\tregexp,\n\t\tattrs,\n\t\tfromMatch,\n\t}\n);\n\nObject.assign( shortcode.prototype, {\n\t/**\n\t * Get a shortcode attribute.\n\t *\n\t * Automatically detects whether `attr` is named or numeric and routes it\n\t * accordingly.\n\t *\n\t * @param {(number|string)} attr Attribute key.\n\t *\n\t * @return {string} Attribute value.\n\t */\n\tget( attr ) {\n\t\treturn this.attrs[ typeof attr === 'number' ? 'numeric' : 'named' ][\n\t\t\tattr\n\t\t];\n\t},\n\n\t/**\n\t * Set a shortcode attribute.\n\t *\n\t * Automatically detects whether `attr` is named or numeric and routes it\n\t * accordingly.\n\t *\n\t * @param {(number|string)} attr  Attribute key.\n\t * @param {string}          value Attribute value.\n\t *\n\t * @return {InstanceType< import('./types').shortcode >} Shortcode instance.\n\t */\n\tset( attr, value ) {\n\t\tthis.attrs[ typeof attr === 'number' ? 'numeric' : 'named' ][ attr ] =\n\t\t\tvalue;\n\t\treturn this;\n\t},\n\n\t/**\n\t * Transform the shortcode into a string.\n\t *\n\t * @return {string} String representation of the shortcode.\n\t */\n\tstring() {\n\t\tlet text = '[' + this.tag;\n\n\t\tthis.attrs.numeric.forEach( ( value ) => {\n\t\t\tif ( /\\s/.test( value ) ) {\n\t\t\t\ttext += ' \"' + value + '\"';\n\t\t\t} else {\n\t\t\t\ttext += ' ' + value;\n\t\t\t}\n\t\t} );\n\n\t\tObject.entries( this.attrs.named ).forEach( ( [ name, value ] ) => {\n\t\t\ttext += ' ' + name + '=\"' + value + '\"';\n\t\t} );\n\n\t\t// If the tag is marked as `single` or `self-closing`, close the tag and\n\t\t// ignore any additional content.\n\t\tif ( 'single' === this.type ) {\n\t\t\treturn text + ']';\n\t\t} else if ( 'self-closing' === this.type ) {\n\t\t\treturn text + ' /]';\n\t\t}\n\n\t\t// Complete the opening tag.\n\t\ttext += ']';\n\n\t\tif ( this.content ) {\n\t\t\ttext += this.content;\n\t\t}\n\n\t\t// Add the closing tag.\n\t\treturn text + '[/' + this.tag + ']';\n\t},\n} );\n\nexport default shortcode;\n"],"mappings":"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","ignoreList":[]}