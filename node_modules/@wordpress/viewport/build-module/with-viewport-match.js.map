{"version":3,"names":["createHigherOrderComponent","pure","useViewportMatch","jsx","_jsx","withViewportMatch","queries","queryEntries","Object","entries","useViewPortQueriesResult","fromEntries","map","key","query","operator","breakpointName","split","undefined","WrappedComponent","props","queriesResult"],"sources":["@wordpress/viewport/src/with-viewport-match.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tcreateHigherOrderComponent,\n\tpure,\n\tuseViewportMatch,\n} from '@wordpress/compose';\n\n/**\n * Higher-order component creator, creating a new component which renders with\n * the given prop names, where the value passed to the underlying component is\n * the result of the query assigned as the object's value.\n *\n * @see isViewportMatch\n *\n * @param {Object} queries Object of prop name to viewport query.\n *\n * @example\n *\n * ```jsx\n * function MyComponent( { isMobile } ) {\n * \treturn (\n * \t\t<div>Currently: { isMobile ? 'Mobile' : 'Not Mobile' }</div>\n * \t);\n * }\n *\n * MyComponent = withViewportMatch( { isMobile: '< small' } )( MyComponent );\n * ```\n *\n * @return {Function} Higher-order component.\n */\nconst withViewportMatch = ( queries ) => {\n\tconst queryEntries = Object.entries( queries );\n\tconst useViewPortQueriesResult = () =>\n\t\tObject.fromEntries(\n\t\t\tqueryEntries.map( ( [ key, query ] ) => {\n\t\t\t\tlet [ operator, breakpointName ] = query.split( ' ' );\n\t\t\t\tif ( breakpointName === undefined ) {\n\t\t\t\t\tbreakpointName = operator;\n\t\t\t\t\toperator = '>=';\n\t\t\t\t}\n\t\t\t\t// Hooks should unconditionally execute in the same order,\n\t\t\t\t// we are respecting that as from the static query of the HOC we generate\n\t\t\t\t// a hook that calls other hooks always in the same order (because the query never changes).\n\t\t\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\t\t\treturn [ key, useViewportMatch( breakpointName, operator ) ];\n\t\t\t} )\n\t\t);\n\treturn createHigherOrderComponent( ( WrappedComponent ) => {\n\t\treturn pure( ( props ) => {\n\t\t\tconst queriesResult = useViewPortQueriesResult();\n\t\t\treturn <WrappedComponent { ...props } { ...queriesResult } />;\n\t\t} );\n\t}, 'withViewportMatch' );\n};\n\nexport default withViewportMatch;\n"],"mappings":"AAAA;AACA;AACA;AACA,SACCA,0BAA0B,EAC1BC,IAAI,EACJC,gBAAgB,QACV,oBAAoB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA,SAAAC,GAAA,IAAAC,IAAA;AAuBA,MAAMC,iBAAiB,GAAKC,OAAO,IAAM;EACxC,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAAEH,OAAQ,CAAC;EAC9C,MAAMI,wBAAwB,GAAGA,CAAA,KAChCF,MAAM,CAACG,WAAW,CACjBJ,YAAY,CAACK,GAAG,CAAE,CAAE,CAAEC,GAAG,EAAEC,KAAK,CAAE,KAAM;IACvC,IAAI,CAAEC,QAAQ,EAAEC,cAAc,CAAE,GAAGF,KAAK,CAACG,KAAK,CAAE,GAAI,CAAC;IACrD,IAAKD,cAAc,KAAKE,SAAS,EAAG;MACnCF,cAAc,GAAGD,QAAQ;MACzBA,QAAQ,GAAG,IAAI;IAChB;IACA;IACA;IACA;IACA;IACA,OAAO,CAAEF,GAAG,EAAEX,gBAAgB,CAAEc,cAAc,EAAED,QAAS,CAAC,CAAE;EAC7D,CAAE,CACH,CAAC;EACF,OAAOf,0BAA0B,CAAImB,gBAAgB,IAAM;IAC1D,OAAOlB,IAAI,CAAImB,KAAK,IAAM;MACzB,MAAMC,aAAa,GAAGX,wBAAwB,CAAC,CAAC;MAChD,oBAAON,IAAA,CAACe,gBAAgB;QAAA,GAAMC,KAAK;QAAA,GAAQC;MAAa,CAAI,CAAC;IAC9D,CAAE,CAAC;EACJ,CAAC,EAAE,mBAAoB,CAAC;AACzB,CAAC;AAED,eAAehB,iBAAiB","ignoreList":[]}