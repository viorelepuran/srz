"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Edit;
var _blockEditor = require("@wordpress/block-editor");
var _components = require("@wordpress/components");
var _icons = require("@wordpress/icons");
var _i18n = require("@wordpress/i18n");
var _data = require("@wordpress/data");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

function Edit(props) {
  const {
    clientId
  } = props;
  const {
    innerBlocks
  } = (0, _data.useSelect)(select => select(_blockEditor.store).getBlock(clientId), [clientId]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    ...(0, _blockEditor.useBlockProps)({
      className: 'widget'
    }),
    children: innerBlocks.length === 0 ? /*#__PURE__*/(0, _jsxRuntime.jsx)(PlaceholderContent, {
      ...props
    }) : /*#__PURE__*/(0, _jsxRuntime.jsx)(PreviewContent, {
      ...props
    })
  });
}
function PlaceholderContent({
  clientId
}) {
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_components.Placeholder, {
      className: "wp-block-widget-group__placeholder",
      icon: /*#__PURE__*/(0, _jsxRuntime.jsx)(_blockEditor.BlockIcon, {
        icon: _icons.group
      }),
      label: (0, _i18n.__)('Widget Group'),
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_blockEditor.ButtonBlockAppender, {
        rootClientId: clientId
      })
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_blockEditor.InnerBlocks, {
      renderAppender: false
    })]
  });
}
function PreviewContent({
  attributes,
  setAttributes
}) {
  var _attributes$title;
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_blockEditor.RichText, {
      tagName: "h2",
      identifier: "title",
      className: "widget-title",
      allowedFormats: [],
      placeholder: (0, _i18n.__)('Title'),
      value: (_attributes$title = attributes.title) !== null && _attributes$title !== void 0 ? _attributes$title : '',
      onChange: title => setAttributes({
        title
      })
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_blockEditor.InnerBlocks, {})]
  });
}
//# sourceMappingURL=edit.js.map