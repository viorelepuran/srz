"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PatternRenameModal;
exports.modalName = void 0;
var _data = require("@wordpress/data");
var _patterns = require("@wordpress/patterns");
var _coreData = require("@wordpress/core-data");
var _interface = require("@wordpress/interface");
var _lockUnlock = require("../../lock-unlock");
var _store = require("../../store");
var _constants = require("../../store/constants");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const {
  RenamePatternModal
} = (0, _lockUnlock.unlock)(_patterns.privateApis);
const modalName = exports.modalName = 'editor/pattern-rename';
function PatternRenameModal() {
  const {
    record,
    postType
  } = (0, _data.useSelect)(select => {
    const {
      getCurrentPostType,
      getCurrentPostId
    } = select(_store.store);
    const {
      getEditedEntityRecord
    } = select(_coreData.store);
    const _postType = getCurrentPostType();
    return {
      record: getEditedEntityRecord('postType', _postType, getCurrentPostId()),
      postType: _postType
    };
  }, []);
  const {
    closeModal
  } = (0, _data.useDispatch)(_interface.store);
  const isActive = (0, _data.useSelect)(select => select(_interface.store).isModalActive(modalName));
  if (!isActive || postType !== _constants.PATTERN_POST_TYPE) {
    return null;
  }
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(RenamePatternModal, {
    onClose: closeModal,
    pattern: record
  });
}
//# sourceMappingURL=index.js.map