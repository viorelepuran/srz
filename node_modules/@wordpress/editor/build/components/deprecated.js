"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RichTextToolbarButton = exports.RichTextShortcut = exports.RichText = exports.PlainText = exports.PanelColorSettings = exports.ObserveTyping = exports.NavigableToolbar = exports.MultiSelectScrollIntoView = exports.MediaUploadCheck = exports.MediaUpload = exports.MediaPlaceholder = exports.InspectorControls = exports.InspectorAdvancedControls = exports.Inserter = exports.InnerBlocks = exports.FontSizePicker = exports.DefaultBlockAppender = exports.CopyHandler = exports.ContrastChecker = exports.ColorPalette = exports.BlockToolbar = exports.BlockTitle = exports.BlockSettingsMenu = exports.BlockSelectionClearer = exports.BlockNavigationDropdown = exports.BlockMover = exports.BlockList = exports.BlockInspector = exports.BlockIcon = exports.BlockFormatControls = exports.BlockEditorKeyboardShortcuts = exports.BlockEdit = exports.BlockControls = exports.BlockAlignmentToolbar = exports.Autocomplete = exports.AlignmentToolbar = void 0;
Object.defineProperty(exports, "ServerSideRender", {
  enumerable: true,
  get: function () {
    return _serverSideRender.default;
  }
});
exports.withFontSizes = exports.withColors = exports.withColorContext = exports.getFontSizeClass = exports.getFontSize = exports.getColorObjectByColorValue = exports.getColorObjectByAttributeValues = exports.getColorClassName = exports.createCustomColorsHOC = exports.__unstableRichTextInputEvent = exports.WritingFlow = exports.Warning = exports.URLPopover = exports.URLInputButton = exports.URLInput = exports.SkipToSelectedBlock = void 0;
var _deprecated = _interopRequireDefault(require("@wordpress/deprecated"));
var _element = require("@wordpress/element");
var _blockEditor = require("@wordpress/block-editor");
var _jsxRuntime = require("react/jsx-runtime");
var _serverSideRender = _interopRequireDefault(require("@wordpress/server-side-render"));
// Block Creation Components.
/**
 * WordPress dependencies
 */

function deprecateComponent(name, Wrapped, staticsToHoist = []) {
  const Component = (0, _element.forwardRef)((props, ref) => {
    (0, _deprecated.default)('wp.editor.' + name, {
      since: '5.3',
      alternative: 'wp.blockEditor.' + name,
      version: '6.2'
    });
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, {
      ref: ref,
      ...props
    });
  });
  staticsToHoist.forEach(staticName => {
    Component[staticName] = deprecateComponent(name + '.' + staticName, Wrapped[staticName]);
  });
  return Component;
}
function deprecateFunction(name, func) {
  return (...args) => {
    (0, _deprecated.default)('wp.editor.' + name, {
      since: '5.3',
      alternative: 'wp.blockEditor.' + name,
      version: '6.2'
    });
    return func(...args);
  };
}

/**
 * @deprecated since 5.3, use `wp.blockEditor.RichText` instead.
 */
const RichText = exports.RichText = deprecateComponent('RichText', _blockEditor.RichText, ['Content']);
RichText.isEmpty = deprecateFunction('RichText.isEmpty', _blockEditor.RichText.isEmpty);
/**
 * @deprecated since 5.3, use `wp.blockEditor.Autocomplete` instead.
 */
const Autocomplete = exports.Autocomplete = deprecateComponent('Autocomplete', _blockEditor.Autocomplete);
/**
 * @deprecated since 5.3, use `wp.blockEditor.AlignmentToolbar` instead.
 */
const AlignmentToolbar = exports.AlignmentToolbar = deprecateComponent('AlignmentToolbar', _blockEditor.AlignmentToolbar);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockAlignmentToolbar` instead.
 */
const BlockAlignmentToolbar = exports.BlockAlignmentToolbar = deprecateComponent('BlockAlignmentToolbar', _blockEditor.BlockAlignmentToolbar);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockControls` instead.
 */
const BlockControls = exports.BlockControls = deprecateComponent('BlockControls', _blockEditor.BlockControls, ['Slot']);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockEdit` instead.
 */
const BlockEdit = exports.BlockEdit = deprecateComponent('BlockEdit', _blockEditor.BlockEdit);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockEditorKeyboardShortcuts` instead.
 */
const BlockEditorKeyboardShortcuts = exports.BlockEditorKeyboardShortcuts = deprecateComponent('BlockEditorKeyboardShortcuts', _blockEditor.BlockEditorKeyboardShortcuts);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockFormatControls` instead.
 */
const BlockFormatControls = exports.BlockFormatControls = deprecateComponent('BlockFormatControls', _blockEditor.BlockFormatControls, ['Slot']);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockIcon` instead.
 */
const BlockIcon = exports.BlockIcon = deprecateComponent('BlockIcon', _blockEditor.BlockIcon);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockInspector` instead.
 */
const BlockInspector = exports.BlockInspector = deprecateComponent('BlockInspector', _blockEditor.BlockInspector);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockList` instead.
 */
const BlockList = exports.BlockList = deprecateComponent('BlockList', _blockEditor.BlockList);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockMover` instead.
 */
const BlockMover = exports.BlockMover = deprecateComponent('BlockMover', _blockEditor.BlockMover);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockNavigationDropdown` instead.
 */
const BlockNavigationDropdown = exports.BlockNavigationDropdown = deprecateComponent('BlockNavigationDropdown', _blockEditor.BlockNavigationDropdown);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockSelectionClearer` instead.
 */
const BlockSelectionClearer = exports.BlockSelectionClearer = deprecateComponent('BlockSelectionClearer', _blockEditor.BlockSelectionClearer);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockSettingsMenu` instead.
 */
const BlockSettingsMenu = exports.BlockSettingsMenu = deprecateComponent('BlockSettingsMenu', _blockEditor.BlockSettingsMenu);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockTitle` instead.
 */
const BlockTitle = exports.BlockTitle = deprecateComponent('BlockTitle', _blockEditor.BlockTitle);
/**
 * @deprecated since 5.3, use `wp.blockEditor.BlockToolbar` instead.
 */
const BlockToolbar = exports.BlockToolbar = deprecateComponent('BlockToolbar', _blockEditor.BlockToolbar);
/**
 * @deprecated since 5.3, use `wp.blockEditor.ColorPalette` instead.
 */
const ColorPalette = exports.ColorPalette = deprecateComponent('ColorPalette', _blockEditor.ColorPalette);
/**
 * @deprecated since 5.3, use `wp.blockEditor.ContrastChecker` instead.
 */
const ContrastChecker = exports.ContrastChecker = deprecateComponent('ContrastChecker', _blockEditor.ContrastChecker);
/**
 * @deprecated since 5.3, use `wp.blockEditor.CopyHandler` instead.
 */
const CopyHandler = exports.CopyHandler = deprecateComponent('CopyHandler', _blockEditor.CopyHandler);
/**
 * @deprecated since 5.3, use `wp.blockEditor.DefaultBlockAppender` instead.
 */
const DefaultBlockAppender = exports.DefaultBlockAppender = deprecateComponent('DefaultBlockAppender', _blockEditor.DefaultBlockAppender);
/**
 * @deprecated since 5.3, use `wp.blockEditor.FontSizePicker` instead.
 */
const FontSizePicker = exports.FontSizePicker = deprecateComponent('FontSizePicker', _blockEditor.FontSizePicker);
/**
 * @deprecated since 5.3, use `wp.blockEditor.Inserter` instead.
 */
const Inserter = exports.Inserter = deprecateComponent('Inserter', _blockEditor.Inserter);
/**
 * @deprecated since 5.3, use `wp.blockEditor.InnerBlocks` instead.
 */
const InnerBlocks = exports.InnerBlocks = deprecateComponent('InnerBlocks', _blockEditor.InnerBlocks, ['ButtonBlockAppender', 'DefaultBlockAppender', 'Content']);
/**
 * @deprecated since 5.3, use `wp.blockEditor.InspectorAdvancedControls` instead.
 */
const InspectorAdvancedControls = exports.InspectorAdvancedControls = deprecateComponent('InspectorAdvancedControls', _blockEditor.InspectorAdvancedControls, ['Slot']);
/**
 * @deprecated since 5.3, use `wp.blockEditor.InspectorControls` instead.
 */
const InspectorControls = exports.InspectorControls = deprecateComponent('InspectorControls', _blockEditor.InspectorControls, ['Slot']);
/**
 * @deprecated since 5.3, use `wp.blockEditor.PanelColorSettings` instead.
 */
const PanelColorSettings = exports.PanelColorSettings = deprecateComponent('PanelColorSettings', _blockEditor.PanelColorSettings);
/**
 * @deprecated since 5.3, use `wp.blockEditor.PlainText` instead.
 */
const PlainText = exports.PlainText = deprecateComponent('PlainText', _blockEditor.PlainText);
/**
 * @deprecated since 5.3, use `wp.blockEditor.RichTextShortcut` instead.
 */
const RichTextShortcut = exports.RichTextShortcut = deprecateComponent('RichTextShortcut', _blockEditor.RichTextShortcut);
/**
 * @deprecated since 5.3, use `wp.blockEditor.RichTextToolbarButton` instead.
 */
const RichTextToolbarButton = exports.RichTextToolbarButton = deprecateComponent('RichTextToolbarButton', _blockEditor.RichTextToolbarButton);
/**
 * @deprecated since 5.3, use `wp.blockEditor.__unstableRichTextInputEvent` instead.
 */
const __unstableRichTextInputEvent = exports.__unstableRichTextInputEvent = deprecateComponent('__unstableRichTextInputEvent', _blockEditor.__unstableRichTextInputEvent);
/**
 * @deprecated since 5.3, use `wp.blockEditor.MediaPlaceholder` instead.
 */
const MediaPlaceholder = exports.MediaPlaceholder = deprecateComponent('MediaPlaceholder', _blockEditor.MediaPlaceholder);
/**
 * @deprecated since 5.3, use `wp.blockEditor.MediaUpload` instead.
 */
const MediaUpload = exports.MediaUpload = deprecateComponent('MediaUpload', _blockEditor.MediaUpload);
/**
 * @deprecated since 5.3, use `wp.blockEditor.MediaUploadCheck` instead.
 */
const MediaUploadCheck = exports.MediaUploadCheck = deprecateComponent('MediaUploadCheck', _blockEditor.MediaUploadCheck);
/**
 * @deprecated since 5.3, use `wp.blockEditor.MultiSelectScrollIntoView` instead.
 */
const MultiSelectScrollIntoView = exports.MultiSelectScrollIntoView = deprecateComponent('MultiSelectScrollIntoView', _blockEditor.MultiSelectScrollIntoView);
/**
 * @deprecated since 5.3, use `wp.blockEditor.NavigableToolbar` instead.
 */
const NavigableToolbar = exports.NavigableToolbar = deprecateComponent('NavigableToolbar', _blockEditor.NavigableToolbar);
/**
 * @deprecated since 5.3, use `wp.blockEditor.ObserveTyping` instead.
 */
const ObserveTyping = exports.ObserveTyping = deprecateComponent('ObserveTyping', _blockEditor.ObserveTyping);
/**
 * @deprecated since 5.3, use `wp.blockEditor.SkipToSelectedBlock` instead.
 */
const SkipToSelectedBlock = exports.SkipToSelectedBlock = deprecateComponent('SkipToSelectedBlock', _blockEditor.SkipToSelectedBlock);
/**
 * @deprecated since 5.3, use `wp.blockEditor.URLInput` instead.
 */
const URLInput = exports.URLInput = deprecateComponent('URLInput', _blockEditor.URLInput);
/**
 * @deprecated since 5.3, use `wp.blockEditor.URLInputButton` instead.
 */
const URLInputButton = exports.URLInputButton = deprecateComponent('URLInputButton', _blockEditor.URLInputButton);
/**
 * @deprecated since 5.3, use `wp.blockEditor.URLPopover` instead.
 */
const URLPopover = exports.URLPopover = deprecateComponent('URLPopover', _blockEditor.URLPopover);
/**
 * @deprecated since 5.3, use `wp.blockEditor.Warning` instead.
 */
const Warning = exports.Warning = deprecateComponent('Warning', _blockEditor.Warning);
/**
 * @deprecated since 5.3, use `wp.blockEditor.WritingFlow` instead.
 */
const WritingFlow = exports.WritingFlow = deprecateComponent('WritingFlow', _blockEditor.WritingFlow);

/**
 * @deprecated since 5.3, use `wp.blockEditor.createCustomColorsHOC` instead.
 */
const createCustomColorsHOC = exports.createCustomColorsHOC = deprecateFunction('createCustomColorsHOC', _blockEditor.createCustomColorsHOC);
/**
 * @deprecated since 5.3, use `wp.blockEditor.getColorClassName` instead.
 */
const getColorClassName = exports.getColorClassName = deprecateFunction('getColorClassName', _blockEditor.getColorClassName);
/**
 * @deprecated since 5.3, use `wp.blockEditor.getColorObjectByAttributeValues` instead.
 */
const getColorObjectByAttributeValues = exports.getColorObjectByAttributeValues = deprecateFunction('getColorObjectByAttributeValues', _blockEditor.getColorObjectByAttributeValues);
/**
 * @deprecated since 5.3, use `wp.blockEditor.getColorObjectByColorValue` instead.
 */
const getColorObjectByColorValue = exports.getColorObjectByColorValue = deprecateFunction('getColorObjectByColorValue', _blockEditor.getColorObjectByColorValue);
/**
 * @deprecated since 5.3, use `wp.blockEditor.getFontSize` instead.
 */
const getFontSize = exports.getFontSize = deprecateFunction('getFontSize', _blockEditor.getFontSize);
/**
 * @deprecated since 5.3, use `wp.blockEditor.getFontSizeClass` instead.
 */
const getFontSizeClass = exports.getFontSizeClass = deprecateFunction('getFontSizeClass', _blockEditor.getFontSizeClass);
/**
 * @deprecated since 5.3, use `wp.blockEditor.createCustomColorsHOC` instead.
 */
const withColorContext = exports.withColorContext = deprecateFunction('withColorContext', _blockEditor.withColorContext);
/**
 * @deprecated since 5.3, use `wp.blockEditor.withColors` instead.
 */
const withColors = exports.withColors = deprecateFunction('withColors', _blockEditor.withColors);
/**
 * @deprecated since 5.3, use `wp.blockEditor.withFontSizes` instead.
 */
const withFontSizes = exports.withFontSizes = deprecateFunction('withFontSizes', _blockEditor.withFontSizes);
//# sourceMappingURL=deprecated.js.map