{"version":3,"names":["_clsx","_interopRequireDefault","require","_components","_i18n","_element","_compose","_data","_entityTypeList","_useIsDirty","_store","_lockUnlock","_jsxRuntime","identity","values","EntitiesSavedStates","close","renderDialog","variant","isDirtyProps","useIsDirty","jsx","EntitiesSavedStatesExtensible","additionalPrompt","undefined","onSave","saveEnabled","saveEnabledProp","saveLabel","__","dirtyEntityRecords","isDirty","setUnselectedEntities","unselectedEntities","saveButtonRef","useRef","saveDirtyEntities","unlock","useDispatch","editorStore","partitionedSavables","reduce","acc","record","name","push","site","siteSavables","wp_template","templateSavables","wp_template_part","templatePartSavables","contentSavables","sortedPartitionedSavables","Object","filter","Array","isArray","dismissPanel","useCallback","saveDialogRef","saveDialogProps","useDialog","onClose","dialogLabelId","useInstanceId","dialogDescriptionId","selectItemsToSaveDescription","length","isInline","actionButtons","jsxs","Fragment","children","FlexItem","isBlock","as","Button","size","onClick","ref","disabled","accessibleWhenDisabled","entitiesToSkip","className","clsx","role","Flex","gap","id","createInterpolateElement","sprintf","_n","strong","map","list","default","direction","justify"],"sources":["@wordpress/editor/src/components/entities-saved-states/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { Button, Flex, FlexItem } from '@wordpress/components';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport {\n\tuseCallback,\n\tuseRef,\n\tcreateInterpolateElement,\n} from '@wordpress/element';\nimport {\n\t__experimentalUseDialog as useDialog,\n\tuseInstanceId,\n} from '@wordpress/compose';\nimport { useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport EntityTypeList from './entity-type-list';\nimport { useIsDirty } from './hooks/use-is-dirty';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nfunction identity( values ) {\n\treturn values;\n}\n\n/**\n * Renders the component for managing saved states of entities.\n *\n * @param {Object}   props              The component props.\n * @param {Function} props.close        The function to close the dialog.\n * @param {boolean}  props.renderDialog Whether to render the component with modal dialog behavior.\n * @param {string}   props.variant      Changes the layout of the component. When an `inline` value is provided, the action buttons are rendered at the end of the component instead of at the start.\n *\n * @return {React.ReactNode} The rendered component.\n */\nexport default function EntitiesSavedStates( {\n\tclose,\n\trenderDialog,\n\tvariant,\n} ) {\n\tconst isDirtyProps = useIsDirty();\n\treturn (\n\t\t<EntitiesSavedStatesExtensible\n\t\t\tclose={ close }\n\t\t\trenderDialog={ renderDialog }\n\t\t\tvariant={ variant }\n\t\t\t{ ...isDirtyProps }\n\t\t/>\n\t);\n}\n\n/**\n * Renders a panel for saving entities with dirty records.\n *\n * @param {Object}   props                       The component props.\n * @param {string}   props.additionalPrompt      Additional prompt to display.\n * @param {Function} props.close                 Function to close the panel.\n * @param {Function} props.onSave                Function to call when saving entities.\n * @param {boolean}  props.saveEnabled           Flag indicating if save is enabled.\n * @param {string}   props.saveLabel             Label for the save button.\n * @param {boolean}  props.renderDialog          Whether to render the component with modal dialog behavior.\n * @param {Array}    props.dirtyEntityRecords    Array of dirty entity records.\n * @param {boolean}  props.isDirty               Flag indicating if there are dirty entities.\n * @param {Function} props.setUnselectedEntities Function to set unselected entities.\n * @param {Array}    props.unselectedEntities    Array of unselected entities.\n * @param {string}   props.variant               Changes the layout of the component. When an `inline` value is provided, the action buttons are rendered at the end of the component instead of at the start.\n *\n * @return {React.ReactNode} The rendered component.\n */\nexport function EntitiesSavedStatesExtensible( {\n\tadditionalPrompt = undefined,\n\tclose,\n\tonSave = identity,\n\tsaveEnabled: saveEnabledProp = undefined,\n\tsaveLabel = __( 'Save' ),\n\trenderDialog,\n\tdirtyEntityRecords,\n\tisDirty,\n\tsetUnselectedEntities,\n\tunselectedEntities,\n\tvariant = 'default',\n} ) {\n\tconst saveButtonRef = useRef();\n\tconst { saveDirtyEntities } = unlock( useDispatch( editorStore ) );\n\t// To group entities by type.\n\tconst partitionedSavables = dirtyEntityRecords.reduce( ( acc, record ) => {\n\t\tconst { name } = record;\n\t\tif ( ! acc[ name ] ) {\n\t\t\tacc[ name ] = [];\n\t\t}\n\t\tacc[ name ].push( record );\n\t\treturn acc;\n\t}, {} );\n\n\t// Sort entity groups.\n\tconst {\n\t\tsite: siteSavables,\n\t\twp_template: templateSavables,\n\t\twp_template_part: templatePartSavables,\n\t\t...contentSavables\n\t} = partitionedSavables;\n\tconst sortedPartitionedSavables = [\n\t\tsiteSavables,\n\t\ttemplateSavables,\n\t\ttemplatePartSavables,\n\t\t...Object.values( contentSavables ),\n\t].filter( Array.isArray );\n\n\tconst saveEnabled = saveEnabledProp ?? isDirty;\n\t// Explicitly define this with no argument passed.  Using `close` on\n\t// its own will use the event object in place of the expected saved entities.\n\tconst dismissPanel = useCallback( () => close(), [ close ] );\n\n\tconst [ saveDialogRef, saveDialogProps ] = useDialog( {\n\t\tonClose: () => dismissPanel(),\n\t} );\n\tconst dialogLabelId = useInstanceId(\n\t\tEntitiesSavedStatesExtensible,\n\t\t'entities-saved-states__panel-label'\n\t);\n\tconst dialogDescriptionId = useInstanceId(\n\t\tEntitiesSavedStatesExtensible,\n\t\t'entities-saved-states__panel-description'\n\t);\n\n\tconst selectItemsToSaveDescription = !! dirtyEntityRecords.length\n\t\t? __( 'Select the items you want to save.' )\n\t\t: undefined;\n\n\tconst isInline = variant === 'inline';\n\n\tconst actionButtons = (\n\t\t<>\n\t\t\t<FlexItem\n\t\t\t\tisBlock={ isInline ? false : true }\n\t\t\t\tas={ Button }\n\t\t\t\tvariant={ isInline ? 'tertiary' : 'secondary' }\n\t\t\t\tsize={ isInline ? undefined : 'compact' }\n\t\t\t\tonClick={ dismissPanel }\n\t\t\t>\n\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t</FlexItem>\n\t\t\t<FlexItem\n\t\t\t\tisBlock={ isInline ? false : true }\n\t\t\t\tas={ Button }\n\t\t\t\tref={ saveButtonRef }\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tsize={ isInline ? undefined : 'compact' }\n\t\t\t\tdisabled={ ! saveEnabled }\n\t\t\t\taccessibleWhenDisabled\n\t\t\t\tonClick={ () =>\n\t\t\t\t\tsaveDirtyEntities( {\n\t\t\t\t\t\tonSave,\n\t\t\t\t\t\tdirtyEntityRecords,\n\t\t\t\t\t\tentitiesToSkip: unselectedEntities,\n\t\t\t\t\t\tclose,\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t\tclassName=\"editor-entities-saved-states__save-button\"\n\t\t\t>\n\t\t\t\t{ saveLabel }\n\t\t\t</FlexItem>\n\t\t</>\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tref={ renderDialog ? saveDialogRef : undefined }\n\t\t\t{ ...( renderDialog && saveDialogProps ) }\n\t\t\tclassName={ clsx( 'entities-saved-states__panel', {\n\t\t\t\t'is-inline': isInline,\n\t\t\t} ) }\n\t\t\trole={ renderDialog ? 'dialog' : undefined }\n\t\t\taria-labelledby={ renderDialog ? dialogLabelId : undefined }\n\t\t\taria-describedby={ renderDialog ? dialogDescriptionId : undefined }\n\t\t>\n\t\t\t{ ! isInline && (\n\t\t\t\t<Flex className=\"entities-saved-states__panel-header\" gap={ 2 }>\n\t\t\t\t\t{ actionButtons }\n\t\t\t\t</Flex>\n\t\t\t) }\n\n\t\t\t<div className=\"entities-saved-states__text-prompt\">\n\t\t\t\t<div className=\"entities-saved-states__text-prompt--header-wrapper\">\n\t\t\t\t\t<strong\n\t\t\t\t\t\tid={ renderDialog ? dialogLabelId : undefined }\n\t\t\t\t\t\tclassName=\"entities-saved-states__text-prompt--header\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Are you ready to save?' ) }\n\t\t\t\t\t</strong>\n\t\t\t\t</div>\n\t\t\t\t<div id={ renderDialog ? dialogDescriptionId : undefined }>\n\t\t\t\t\t{ additionalPrompt }\n\t\t\t\t\t<p className=\"entities-saved-states__text-prompt--changes-count\">\n\t\t\t\t\t\t{ isDirty\n\t\t\t\t\t\t\t? createInterpolateElement(\n\t\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t\t/* translators: %d: number of site changes waiting to be saved. */\n\t\t\t\t\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t\t\t\t\t'There is <strong>%d site change</strong> waiting to be saved.',\n\t\t\t\t\t\t\t\t\t\t\t'There are <strong>%d site changes</strong> waiting to be saved.',\n\t\t\t\t\t\t\t\t\t\t\tdirtyEntityRecords.length\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tdirtyEntityRecords.length\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t{ strong: <strong /> }\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: selectItemsToSaveDescription }\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{ sortedPartitionedSavables.map( ( list ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<EntityTypeList\n\t\t\t\t\t\tkey={ list[ 0 ].name }\n\t\t\t\t\t\tlist={ list }\n\t\t\t\t\t\tunselectedEntities={ unselectedEntities }\n\t\t\t\t\t\tsetUnselectedEntities={ setUnselectedEntities }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} ) }\n\n\t\t\t{ isInline && (\n\t\t\t\t<Flex\n\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\tclassName=\"entities-saved-states__panel-footer\"\n\t\t\t\t>\n\t\t\t\t\t{ actionButtons }\n\t\t\t\t</Flex>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}