{"version":3,"names":["_components","require","_plugins","_interface","_jsxRuntime","PluginPreviewMenuItem","props","_props$as","context","usePluginContext","jsx","ActionItem","name","as","MenuItem","icon"],"sources":["@wordpress/editor/src/components/plugin-preview-menu-item/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { usePluginContext } from '@wordpress/plugins';\nimport { ActionItem } from '@wordpress/interface';\n\n/**\n * Renders a menu item in the Preview dropdown, which can be used as a button or link depending on the props provided.\n * The text within the component appears as the menu item label.\n *\n * @param {Object}                props                                 Component properties.\n * @param {React.ReactNode}       [props.children]                      Children to be rendered.\n * @param {string}                [props.href]                          When `href` is provided, the menu item is rendered as an anchor instead of a button. It corresponds to the `href` attribute of the anchor.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The icon to be rendered to the left of the menu item label. Can be a Dashicon slug or an SVG WP element.\n * @param {Function}              [props.onClick]                       The callback function to be executed when the user clicks the menu item.\n * @param {...*}                  [props.other]                         Any additional props are passed through to the underlying MenuItem component.\n *\n * @example\n * ```jsx\n * import { __ } from '@wordpress/i18n';\n * import { PluginPreviewMenuItem } from '@wordpress/editor';\n * import { external } from '@wordpress/icons';\n *\n * function onPreviewClick() {\n *   // Handle preview action\n * }\n *\n * const ExternalPreviewMenuItem = () => (\n *   <PluginPreviewMenuItem\n *     icon={ external }\n *     onClick={ onPreviewClick }\n *   >\n *     { __( 'Preview in new tab' ) }\n *   </PluginPreviewMenuItem>\n * );\n * registerPlugin( 'external-preview-menu-item', {\n *     render: ExternalPreviewMenuItem,\n * } );\n * ```\n *\n * @return {React.ReactNode} The rendered menu item component.\n */\nexport default function PluginPreviewMenuItem( props ) {\n\tconst context = usePluginContext();\n\treturn (\n\t\t<ActionItem\n\t\t\tname=\"core/plugin-preview-menu\"\n\t\t\tas={ props.as ?? MenuItem }\n\t\t\ticon={ props.icon || context.icon }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n"],"mappings":";;;;;;AAGA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,UAAA,GAAAF,OAAA;AAAkD,IAAAG,WAAA,GAAAH,OAAA;AALlD;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACe,SAASI,qBAAqBA,CAAEC,KAAK,EAAG;EAAA,IAAAC,SAAA;EACtD,MAAMC,OAAO,GAAG,IAAAC,yBAAgB,EAAC,CAAC;EAClC,oBACC,IAAAL,WAAA,CAAAM,GAAA,EAACP,UAAA,CAAAQ,UAAU;IACVC,IAAI,EAAC,0BAA0B;IAC/BC,EAAE,GAAAN,SAAA,GAAGD,KAAK,CAACO,EAAE,cAAAN,SAAA,cAAAA,SAAA,GAAIO,oBAAU;IAC3BC,IAAI,EAAGT,KAAK,CAACS,IAAI,IAAIP,OAAO,CAACO,IAAM;IAAA,GAC9BT;EAAK,CACV,CAAC;AAEJ","ignoreList":[]}