{"version":3,"names":["_i18n","require","_components","_data","_element","_blockEditor","_coreData","_store","_postTypeSupportCheck","_interopRequireDefault","_postComments","_postPingbacks","_postPanelRow","_jsxRuntime","PANEL_NAME","ModalContents","onClose","jsxs","className","children","jsx","__experimentalInspectorPopoverHeader","title","__","__experimentalVStack","spacing","default","supportKeys","PostDiscussionToggle","isOpen","onClick","commentStatus","pingStatus","commentsSupported","trackbacksSupported","useSelect","select","_getEditedPostAttribu","_getEditedPostAttribu2","getEditedPostAttribute","editorStore","getPostType","coreStore","postType","supports","comments","trackbacks","label","_x","Button","size","variant","PostDiscussionPanel","isEnabled","isEditorPanelEnabled","popoverAnchor","setPopoverAnchor","useState","popoverProps","useMemo","anchor","placement","offset","shift","ref","Dropdown","contentClassName","focusOnMount","renderToggle","onToggle","renderContent"],"sources":["@wordpress/editor/src/components/post-discussion/panel.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport {\n\tDropdown,\n\tButton,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { useState, useMemo } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport PostComments from '../post-comments';\nimport PostPingbacks from '../post-pingbacks';\nimport PostPanelRow from '../post-panel-row';\n\nconst PANEL_NAME = 'discussion-panel';\n\nfunction ModalContents( { onClose } ) {\n\treturn (\n\t\t<div className=\"editor-post-discussion\">\n\t\t\t<InspectorPopoverHeader\n\t\t\t\ttitle={ __( 'Discussion' ) }\n\t\t\t\tonClose={ onClose }\n\t\t\t/>\n\t\t\t<VStack spacing={ 4 }>\n\t\t\t\t<PostTypeSupportCheck supportKeys=\"comments\">\n\t\t\t\t\t<PostComments />\n\t\t\t\t</PostTypeSupportCheck>\n\t\t\t\t<PostTypeSupportCheck supportKeys=\"trackbacks\">\n\t\t\t\t\t<PostPingbacks />\n\t\t\t\t</PostTypeSupportCheck>\n\t\t\t</VStack>\n\t\t</div>\n\t);\n}\n\nfunction PostDiscussionToggle( { isOpen, onClick } ) {\n\tconst {\n\t\tcommentStatus,\n\t\tpingStatus,\n\t\tcommentsSupported,\n\t\ttrackbacksSupported,\n\t} = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\t\treturn {\n\t\t\tcommentStatus: getEditedPostAttribute( 'comment_status' ) ?? 'open',\n\t\t\tpingStatus: getEditedPostAttribute( 'ping_status' ) ?? 'open',\n\t\t\tcommentsSupported: !! postType.supports.comments,\n\t\t\ttrackbacksSupported: !! postType.supports.trackbacks,\n\t\t};\n\t}, [] );\n\tlet label;\n\tif ( commentStatus === 'open' ) {\n\t\tif ( pingStatus === 'open' ) {\n\t\t\tlabel = _x( 'Open', 'Adjective: e.g. \"Comments are open\"' );\n\t\t} else {\n\t\t\tlabel = trackbacksSupported\n\t\t\t\t? __( 'Comments only' )\n\t\t\t\t: _x( 'Open', 'Adjective: e.g. \"Comments are open\"' );\n\t\t}\n\t} else if ( pingStatus === 'open' ) {\n\t\tlabel = commentsSupported ? __( 'Pings only' ) : __( 'Pings enabled' );\n\t} else {\n\t\tlabel = __( 'Closed' );\n\t}\n\treturn (\n\t\t<Button\n\t\t\tsize=\"compact\"\n\t\t\tclassName=\"editor-post-discussion__panel-toggle\"\n\t\t\tvariant=\"tertiary\"\n\t\t\taria-label={ __( 'Change discussion options' ) }\n\t\t\taria-expanded={ isOpen }\n\t\t\tonClick={ onClick }\n\t\t>\n\t\t\t{ label }\n\t\t</Button>\n\t);\n}\n\n/**\n * This component allows to update comment and pingback\n * settings for the current post. Internally there are\n * checks whether the current post has support for the\n * above and if the `discussion-panel` panel is enabled.\n *\n * @return {React.ReactNode} The rendered PostDiscussionPanel component.\n */\nexport default function PostDiscussionPanel() {\n\tconst { isEnabled } = useSelect( ( select ) => {\n\t\tconst { isEditorPanelEnabled } = select( editorStore );\n\t\treturn {\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t};\n\t}, [] );\n\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys={ [ 'comments', 'trackbacks' ] }>\n\t\t\t<PostPanelRow label={ __( 'Discussion' ) } ref={ setPopoverAnchor }>\n\t\t\t\t<Dropdown\n\t\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\t\tclassName=\"editor-post-discussion__panel-dropdown\"\n\t\t\t\t\tcontentClassName=\"editor-post-discussion__panel-dialog\"\n\t\t\t\t\tfocusOnMount\n\t\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t\t<PostDiscussionToggle\n\t\t\t\t\t\t\tisOpen={ isOpen }\n\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t\t<ModalContents onClose={ onClose } />\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</PostPanelRow>\n\t\t</PostTypeSupportCheck>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}