{"version":3,"names":["_reactAutosizeTextarea","_interopRequireDefault","require","_i18n","_coreData","_element","_blocks","_data","_compose","_components","_store","_jsxRuntime","PostTextEditor","instanceId","useInstanceId","content","blocks","type","id","useSelect","select","getEditedEntityRecord","coreStore","getCurrentPostType","getCurrentPostId","editorStore","_type","_id","editedRecord","editEntityRecord","useDispatch","value","useMemo","Function","__unstableSerializeAndClean","jsxs","Fragment","children","jsx","VisuallyHidden","as","htmlFor","__","default","autoComplete","dir","onChange","event","target","undefined","selection","className","placeholder"],"sources":["@wordpress/editor/src/components/post-text-editor/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\nimport { __unstableSerializeAndClean } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { VisuallyHidden } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Displays the Post Text Editor along with content in Visual and Text mode.\n *\n * @return {React.ReactNode} The rendered PostTextEditor component.\n */\nexport default function PostTextEditor() {\n\tconst instanceId = useInstanceId( PostTextEditor );\n\tconst { content, blocks, type, id } = useSelect( ( select ) => {\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\t\tconst _type = getCurrentPostType();\n\t\tconst _id = getCurrentPostId();\n\t\tconst editedRecord = getEditedEntityRecord( 'postType', _type, _id );\n\n\t\treturn {\n\t\t\tcontent: editedRecord?.content,\n\t\t\tblocks: editedRecord?.blocks,\n\t\t\ttype: _type,\n\t\t\tid: _id,\n\t\t};\n\t}, [] );\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\t// Replicates the logic found in getEditedPostContent().\n\tconst value = useMemo( () => {\n\t\tif ( content instanceof Function ) {\n\t\t\treturn content( { blocks } );\n\t\t} else if ( blocks ) {\n\t\t\t// If we have parsed blocks already, they should be our source of truth.\n\t\t\t// Parsing applies block deprecations and legacy block conversions that\n\t\t\t// unparsed content will not have.\n\t\t\treturn __unstableSerializeAndClean( blocks );\n\t\t}\n\t\treturn content;\n\t}, [ content, blocks ] );\n\n\treturn (\n\t\t<>\n\t\t\t<VisuallyHidden\n\t\t\t\tas=\"label\"\n\t\t\t\thtmlFor={ `post-content-${ instanceId }` }\n\t\t\t>\n\t\t\t\t{ __( 'Type text or HTML' ) }\n\t\t\t</VisuallyHidden>\n\t\t\t<Textarea\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\tdir=\"auto\"\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ ( event ) => {\n\t\t\t\t\teditEntityRecord( 'postType', type, id, {\n\t\t\t\t\t\tcontent: event.target.value,\n\t\t\t\t\t\tblocks: undefined,\n\t\t\t\t\t\tselection: undefined,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tclassName=\"editor-post-text-editor\"\n\t\t\t\tid={ `post-content-${ instanceId }` }\n\t\t\t\tplaceholder={ __( 'Start writing with text or HTML' ) }\n\t\t\t/>\n\t\t</>\n\t);\n}\n"],"mappings":";;;;;;;AAGA,IAAAA,sBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAKA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AACA,IAAAI,OAAA,GAAAJ,OAAA;AACA,IAAAK,KAAA,GAAAL,OAAA;AACA,IAAAM,QAAA,GAAAN,OAAA;AACA,IAAAO,WAAA,GAAAP,OAAA;AAKA,IAAAQ,MAAA,GAAAR,OAAA;AAAmD,IAAAS,WAAA,GAAAT,OAAA;AAnBnD;AACA;AACA;;AAGA;AACA;AACA;;AASA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA,GACe,SAASU,cAAcA,CAAA,EAAG;EACxC,MAAMC,UAAU,GAAG,IAAAC,sBAAa,EAAEF,cAAe,CAAC;EAClD,MAAM;IAAEG,OAAO;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAG,CAAC,GAAG,IAAAC,eAAS,EAAIC,MAAM,IAAM;IAC9D,MAAM;MAAEC;IAAsB,CAAC,GAAGD,MAAM,CAAEE,eAAU,CAAC;IACrD,MAAM;MAAEC,kBAAkB;MAAEC;IAAiB,CAAC,GAAGJ,MAAM,CAAEK,YAAY,CAAC;IACtE,MAAMC,KAAK,GAAGH,kBAAkB,CAAC,CAAC;IAClC,MAAMI,GAAG,GAAGH,gBAAgB,CAAC,CAAC;IAC9B,MAAMI,YAAY,GAAGP,qBAAqB,CAAE,UAAU,EAAEK,KAAK,EAAEC,GAAI,CAAC;IAEpE,OAAO;MACNZ,OAAO,EAAEa,YAAY,EAAEb,OAAO;MAC9BC,MAAM,EAAEY,YAAY,EAAEZ,MAAM;MAC5BC,IAAI,EAAES,KAAK;MACXR,EAAE,EAAES;IACL,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EACP,MAAM;IAAEE;EAAiB,CAAC,GAAG,IAAAC,iBAAW,EAAER,eAAU,CAAC;EACrD;EACA,MAAMS,KAAK,GAAG,IAAAC,gBAAO,EAAE,MAAM;IAC5B,IAAKjB,OAAO,YAAYkB,QAAQ,EAAG;MAClC,OAAOlB,OAAO,CAAE;QAAEC;MAAO,CAAE,CAAC;IAC7B,CAAC,MAAM,IAAKA,MAAM,EAAG;MACpB;MACA;MACA;MACA,OAAO,IAAAkB,mCAA2B,EAAElB,MAAO,CAAC;IAC7C;IACA,OAAOD,OAAO;EACf,CAAC,EAAE,CAAEA,OAAO,EAAEC,MAAM,CAAG,CAAC;EAExB,oBACC,IAAAL,WAAA,CAAAwB,IAAA,EAAAxB,WAAA,CAAAyB,QAAA;IAAAC,QAAA,gBACC,IAAA1B,WAAA,CAAA2B,GAAA,EAAC7B,WAAA,CAAA8B,cAAc;MACdC,EAAE,EAAC,OAAO;MACVC,OAAO,EAAG,gBAAiB5B,UAAU,EAAK;MAAAwB,QAAA,EAExC,IAAAK,QAAE,EAAE,mBAAoB;IAAC,CACZ,CAAC,eACjB,IAAA/B,WAAA,CAAA2B,GAAA,EAACtC,sBAAA,CAAA2C,OAAQ;MACRC,YAAY,EAAC,KAAK;MAClBC,GAAG,EAAC,MAAM;MACVd,KAAK,EAAGA,KAAO;MACfe,QAAQ,EAAKC,KAAK,IAAM;QACvBlB,gBAAgB,CAAE,UAAU,EAAEZ,IAAI,EAAEC,EAAE,EAAE;UACvCH,OAAO,EAAEgC,KAAK,CAACC,MAAM,CAACjB,KAAK;UAC3Bf,MAAM,EAAEiC,SAAS;UACjBC,SAAS,EAAED;QACZ,CAAE,CAAC;MACJ,CAAG;MACHE,SAAS,EAAC,yBAAyB;MACnCjC,EAAE,EAAG,gBAAiBL,UAAU,EAAK;MACrCuC,WAAW,EAAG,IAAAV,QAAE,EAAE,iCAAkC;IAAG,CACvD,CAAC;EAAA,CACD,CAAC;AAEL","ignoreList":[]}