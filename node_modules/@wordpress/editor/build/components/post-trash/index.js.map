{"version":3,"names":["_i18n","require","_components","_data","_element","_store","_check","_interopRequireDefault","_jsxRuntime","PostTrash","onActionPerformed","registry","useRegistry","isNew","isDeleting","postId","title","useSelect","select","store","editorStore","isEditedPostNew","isDeletingPost","getCurrentPostId","getCurrentPostAttribute","trashPost","useDispatch","showConfirmDialog","setShowConfirmDialog","useState","handleConfirm","item","resolveSelect","getCurrentPost","jsxs","default","children","jsx","Button","__next40pxDefaultSize","className","isDestructive","variant","isBusy","onClick","undefined","__","__experimentalConfirmDialog","isOpen","onConfirm","onCancel","confirmButtonText","size","sprintf"],"sources":["@wordpress/editor/src/components/post-trash/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tButton,\n\t__experimentalConfirmDialog as ConfirmDialog,\n} from '@wordpress/components';\nimport { useSelect, useDispatch, useRegistry } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostTrashCheck from './check';\n\n/**\n * Displays the Post Trash Button and Confirm Dialog in the Editor.\n *\n * @param {?{onActionPerformed: Object}} An object containing the onActionPerformed function.\n * @return {React.ReactNode} The rendered PostTrash component.\n */\nexport default function PostTrash( { onActionPerformed } ) {\n\tconst registry = useRegistry();\n\tconst { isNew, isDeleting, postId, title } = useSelect( ( select ) => {\n\t\tconst store = select( editorStore );\n\t\treturn {\n\t\t\tisNew: store.isEditedPostNew(),\n\t\t\tisDeleting: store.isDeletingPost(),\n\t\t\tpostId: store.getCurrentPostId(),\n\t\t\ttitle: store.getCurrentPostAttribute( 'title' ),\n\t\t};\n\t}, [] );\n\tconst { trashPost } = useDispatch( editorStore );\n\tconst [ showConfirmDialog, setShowConfirmDialog ] = useState( false );\n\n\tif ( isNew || ! postId ) {\n\t\treturn null;\n\t}\n\n\tconst handleConfirm = async () => {\n\t\tsetShowConfirmDialog( false );\n\t\tawait trashPost();\n\t\tconst item = await registry\n\t\t\t.resolveSelect( editorStore )\n\t\t\t.getCurrentPost();\n\t\t// After the post is trashed, we want to trigger the onActionPerformed callback, so the user is redirect\n\t\t// to the post view depending on if the user is on post editor or site editor.\n\t\tonActionPerformed?.( 'move-to-trash', [ item ] );\n\t};\n\treturn (\n\t\t<PostTrashCheck>\n\t\t\t<Button\n\t\t\t\t__next40pxDefaultSize\n\t\t\t\tclassName=\"editor-post-trash\"\n\t\t\t\tisDestructive\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tisBusy={ isDeleting }\n\t\t\t\taria-disabled={ isDeleting }\n\t\t\t\tonClick={\n\t\t\t\t\tisDeleting ? undefined : () => setShowConfirmDialog( true )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{ __( 'Move to trash' ) }\n\t\t\t</Button>\n\t\t\t<ConfirmDialog\n\t\t\t\tisOpen={ showConfirmDialog }\n\t\t\t\tonConfirm={ handleConfirm }\n\t\t\t\tonCancel={ () => setShowConfirmDialog( false ) }\n\t\t\t\tconfirmButtonText={ __( 'Move to trash' ) }\n\t\t\t\tsize=\"small\"\n\t\t\t>\n\t\t\t\t{ sprintf(\n\t\t\t\t\t// translators: %s: The item's title.\n\t\t\t\t\t__( 'Are you sure you want to move \"%s\" to the trash?' ),\n\t\t\t\t\ttitle\n\t\t\t\t) }\n\t\t\t</ConfirmDialog>\n\t\t</PostTrashCheck>\n\t);\n}\n"],"mappings":";;;;;;;AAGA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AAIA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AAKA,IAAAI,MAAA,GAAAJ,OAAA;AACA,IAAAK,MAAA,GAAAC,sBAAA,CAAAN,OAAA;AAAqC,IAAAO,WAAA,GAAAP,OAAA;AAfrC;AACA;AACA;;AASA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA,GACe,SAASQ,SAASA,CAAE;EAAEC;AAAkB,CAAC,EAAG;EAC1D,MAAMC,QAAQ,GAAG,IAAAC,iBAAW,EAAC,CAAC;EAC9B,MAAM;IAAEC,KAAK;IAAEC,UAAU;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAG,IAAAC,eAAS,EAAIC,MAAM,IAAM;IACrE,MAAMC,KAAK,GAAGD,MAAM,CAAEE,YAAY,CAAC;IACnC,OAAO;MACNP,KAAK,EAAEM,KAAK,CAACE,eAAe,CAAC,CAAC;MAC9BP,UAAU,EAAEK,KAAK,CAACG,cAAc,CAAC,CAAC;MAClCP,MAAM,EAAEI,KAAK,CAACI,gBAAgB,CAAC,CAAC;MAChCP,KAAK,EAAEG,KAAK,CAACK,uBAAuB,CAAE,OAAQ;IAC/C,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EACP,MAAM;IAAEC;EAAU,CAAC,GAAG,IAAAC,iBAAW,EAAEN,YAAY,CAAC;EAChD,MAAM,CAAEO,iBAAiB,EAAEC,oBAAoB,CAAE,GAAG,IAAAC,iBAAQ,EAAE,KAAM,CAAC;EAErE,IAAKhB,KAAK,IAAI,CAAEE,MAAM,EAAG;IACxB,OAAO,IAAI;EACZ;EAEA,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IACjCF,oBAAoB,CAAE,KAAM,CAAC;IAC7B,MAAMH,SAAS,CAAC,CAAC;IACjB,MAAMM,IAAI,GAAG,MAAMpB,QAAQ,CACzBqB,aAAa,CAAEZ,YAAY,CAAC,CAC5Ba,cAAc,CAAC,CAAC;IAClB;IACA;IACAvB,iBAAiB,GAAI,eAAe,EAAE,CAAEqB,IAAI,CAAG,CAAC;EACjD,CAAC;EACD,oBACC,IAAAvB,WAAA,CAAA0B,IAAA,EAAC5B,MAAA,CAAA6B,OAAc;IAAAC,QAAA,gBACd,IAAA5B,WAAA,CAAA6B,GAAA,EAACnC,WAAA,CAAAoC,MAAM;MACNC,qBAAqB;MACrBC,SAAS,EAAC,mBAAmB;MAC7BC,aAAa;MACbC,OAAO,EAAC,WAAW;MACnBC,MAAM,EAAG7B,UAAY;MACrB,iBAAgBA,UAAY;MAC5B8B,OAAO,EACN9B,UAAU,GAAG+B,SAAS,GAAG,MAAMjB,oBAAoB,CAAE,IAAK,CAC1D;MAAAQ,QAAA,EAEC,IAAAU,QAAE,EAAE,eAAgB;IAAC,CAChB,CAAC,eACT,IAAAtC,WAAA,CAAA6B,GAAA,EAACnC,WAAA,CAAA6C,2BAAa;MACbC,MAAM,EAAGrB,iBAAmB;MAC5BsB,SAAS,EAAGnB,aAAe;MAC3BoB,QAAQ,EAAGA,CAAA,KAAMtB,oBAAoB,CAAE,KAAM,CAAG;MAChDuB,iBAAiB,EAAG,IAAAL,QAAE,EAAE,eAAgB,CAAG;MAC3CM,IAAI,EAAC,OAAO;MAAAhB,QAAA,EAEV,IAAAiB,aAAO;MACR;MACA,IAAAP,QAAE,EAAE,kDAAmD,CAAC,EACxD9B,KACD;IAAC,CACa,CAAC;EAAA,CACD,CAAC;AAEnB","ignoreList":[]}