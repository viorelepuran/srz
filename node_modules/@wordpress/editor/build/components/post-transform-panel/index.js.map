{"version":3,"names":["_data","require","_coreData","_components","_i18n","_blockEditor","_blocks","_store","_hooks","_constants","_jsxRuntime","TemplatesList","availableTemplates","onSelect","length","jsx","__experimentalBlockPatternsList","label","__","blockPatterns","onClickPattern","showTitlesAsTooltip","PostTransform","record","postType","postId","useSelect","select","getCurrentPostType","getCurrentPostId","editorStore","getEditedEntityRecord","coreStore","type","id","editEntityRecord","useDispatch","availablePatterns","useAvailablePatterns","onTemplateSelect","selectedTemplate","blocks","content","serialize","PanelBody","title","initialOpen","TEMPLATE_PART_POST_TYPE","children","PostTransformPanel","TEMPLATE_POST_TYPE","includes"],"sources":["@wordpress/editor/src/components/post-transform-panel/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { PanelBody } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { __experimentalBlockPatternsList as BlockPatternsList } from '@wordpress/block-editor';\nimport { serialize } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { useAvailablePatterns } from './hooks';\nimport {\n\tTEMPLATE_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n} from '../../store/constants';\n\nfunction TemplatesList( { availableTemplates, onSelect } ) {\n\tif ( ! availableTemplates || availableTemplates?.length === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BlockPatternsList\n\t\t\tlabel={ __( 'Templates' ) }\n\t\t\tblockPatterns={ availableTemplates }\n\t\t\tonClickPattern={ onSelect }\n\t\t\tshowTitlesAsTooltip\n\t\t/>\n\t);\n}\n\nfunction PostTransform() {\n\tconst { record, postType, postId } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst type = getCurrentPostType();\n\t\tconst id = getCurrentPostId();\n\t\treturn {\n\t\t\tpostType: type,\n\t\t\tpostId: id,\n\t\t\trecord: getEditedEntityRecord( 'postType', type, id ),\n\t\t};\n\t}, [] );\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tconst availablePatterns = useAvailablePatterns( record );\n\tconst onTemplateSelect = async ( selectedTemplate ) => {\n\t\tawait editEntityRecord( 'postType', postType, postId, {\n\t\t\tblocks: selectedTemplate.blocks,\n\t\t\tcontent: serialize( selectedTemplate.blocks ),\n\t\t} );\n\t};\n\tif ( ! availablePatterns?.length ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody\n\t\t\ttitle={ __( 'Design' ) }\n\t\t\tinitialOpen={ record.type === TEMPLATE_PART_POST_TYPE }\n\t\t>\n\t\t\t<TemplatesList\n\t\t\t\tavailableTemplates={ availablePatterns }\n\t\t\t\tonSelect={ onTemplateSelect }\n\t\t\t/>\n\t\t</PanelBody>\n\t);\n}\n\nexport default function PostTransformPanel() {\n\tconst { postType } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType } = select( editorStore );\n\t\treturn {\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t}, [] );\n\n\tif (\n\t\t! [ TEMPLATE_PART_POST_TYPE, TEMPLATE_POST_TYPE ].includes( postType )\n\t) {\n\t\treturn null;\n\t}\n\n\treturn <PostTransform />;\n}\n"],"mappings":"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","ignoreList":[]}