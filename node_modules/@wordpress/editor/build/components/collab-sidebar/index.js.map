{"version":3,"names":["_i18n","require","_data","_element","_icons","_hooks","_notices","_coreData","_blockEditor","_interface","_pluginSidebar","_interopRequireDefault","_constants","_comments","_addComment","_store","_commentButton","_commentButtonToolbar","_globalStylesProvider","_utils","_jsxRuntime","modifyBlockCommentAttributes","settings","attributes","blockCommentId","type","addFilter","CollabSidebarContent","showCommentBoard","setShowCommentBoard","styles","comments","createNotice","useDispatch","noticesStore","saveEntityRecord","deleteEntityRecord","coreStore","getEntityRecord","resolveSelect","postId","useSelect","select","getCurrentPostId","editorStore","_postId","getSelectedBlockClientId","blockEditorStore","updateBlockAttributes","addNewComment","comment","parentCommentId","args","post","content","comment_type","comment_approved","updatedArgs","parent","savedRecord","id","__","isDismissible","onError","onCommentResolve","commentId","status","onEditComment","onCommentDelete","childComment","undefined","jsxs","className","style","children","jsx","AddComment","onSubmit","Comments","threads","onAddReply","CollabSidebar","useState","enableComplementaryArea","interfaceStore","getActiveComplementaryArea","postType","postStatus","getCurrentPostType","data","getEntityRecords","per_page","getEditedPostAttribute","getBlockAttributes","_clientId","openCollabBoard","blocks","useEntityBlockEditor","resultComments","sortedThreads","useMemo","compare","result","filteredComments","filter","forEach","item","reply","push","length","updatedResult","map","reverse","blockCommentIds","getCommentIdsFromBlocks","threadIdMap","Map","thread","sortedComments","get","merged","GlobalStyles","useGlobalStylesContext","backgroundColor","color","background","unsubscribe","subscribe","activeSidebar","collabSidebarName","AddCommentComponent","AddCommentToolbarButton","AddCommentButton","Fragment","onClick","default","identifier","collabHistorySidebarName","title","icon","commentIcon","isPinnable","header","headerClassName"],"sources":["@wordpress/editor/src/components/collab-sidebar/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tuseSelect,\n\tuseDispatch,\n\tresolveSelect,\n\tsubscribe,\n} from '@wordpress/data';\nimport { useState, useMemo } from '@wordpress/element';\nimport { comment as commentIcon } from '@wordpress/icons';\nimport { addFilter } from '@wordpress/hooks';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore, useEntityBlockEditor } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport PluginSidebar from '../plugin-sidebar';\nimport { collabHistorySidebarName, collabSidebarName } from './constants';\nimport { Comments } from './comments';\nimport { AddComment } from './add-comment';\nimport { store as editorStore } from '../../store';\nimport AddCommentButton from './comment-button';\nimport AddCommentToolbarButton from './comment-button-toolbar';\nimport { useGlobalStylesContext } from '../global-styles-provider';\nimport { getCommentIdsFromBlocks } from './utils';\n\nconst modifyBlockCommentAttributes = ( settings ) => {\n\tif ( ! settings.attributes.blockCommentId ) {\n\t\tsettings.attributes = {\n\t\t\t...settings.attributes,\n\t\t\tblockCommentId: {\n\t\t\t\ttype: 'number',\n\t\t\t},\n\t\t};\n\t}\n\n\treturn settings;\n};\n\n// Apply the filter to all core blocks\naddFilter(\n\t'blocks.registerBlockType',\n\t'block-comment/modify-core-block-attributes',\n\tmodifyBlockCommentAttributes\n);\n\nfunction CollabSidebarContent( {\n\tshowCommentBoard,\n\tsetShowCommentBoard,\n\tstyles,\n\tcomments,\n} ) {\n\tconst { createNotice } = useDispatch( noticesStore );\n\tconst { saveEntityRecord, deleteEntityRecord } = useDispatch( coreStore );\n\tconst { getEntityRecord } = resolveSelect( coreStore );\n\n\tconst { postId } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostId } = select( editorStore );\n\t\tconst _postId = getCurrentPostId();\n\n\t\treturn {\n\t\t\tpostId: _postId,\n\t\t};\n\t}, [] );\n\n\tconst { getSelectedBlockClientId } = useSelect( blockEditorStore );\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\t// Function to save the comment.\n\tconst addNewComment = async ( comment, parentCommentId ) => {\n\t\tconst args = {\n\t\t\tpost: postId,\n\t\t\tcontent: comment,\n\t\t\tcomment_type: 'block_comment',\n\t\t\tcomment_approved: 0,\n\t\t};\n\n\t\t// Create a new object, conditionally including the parent property\n\t\tconst updatedArgs = {\n\t\t\t...args,\n\t\t\t...( parentCommentId ? { parent: parentCommentId } : {} ),\n\t\t};\n\n\t\tconst savedRecord = await saveEntityRecord(\n\t\t\t'root',\n\t\t\t'comment',\n\t\t\tupdatedArgs\n\t\t);\n\n\t\tif ( savedRecord ) {\n\t\t\t// If it's a main comment, update the block attributes with the comment id.\n\t\t\tif ( ! parentCommentId ) {\n\t\t\t\tupdateBlockAttributes( getSelectedBlockClientId(), {\n\t\t\t\t\tblockCommentId: savedRecord?.id,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tcreateNotice(\n\t\t\t\t'snackbar',\n\t\t\t\tparentCommentId\n\t\t\t\t\t? // translators: Reply added successfully\n\t\t\t\t\t  __( 'Reply added successfully.' )\n\t\t\t\t\t: // translators: Comment added successfully\n\t\t\t\t\t  __( 'Comment added successfully.' ),\n\t\t\t\t{\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tisDismissible: true,\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tonError();\n\t\t}\n\t};\n\n\tconst onCommentResolve = async ( commentId ) => {\n\t\tconst savedRecord = await saveEntityRecord( 'root', 'comment', {\n\t\t\tid: commentId,\n\t\t\tstatus: 'approved',\n\t\t} );\n\n\t\tif ( savedRecord ) {\n\t\t\t// translators: Comment resolved successfully\n\t\t\tcreateNotice( 'snackbar', __( 'Comment marked as resolved.' ), {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tisDismissible: true,\n\t\t\t} );\n\t\t} else {\n\t\t\tonError();\n\t\t}\n\t};\n\n\tconst onEditComment = async ( commentId, comment ) => {\n\t\tconst savedRecord = await saveEntityRecord( 'root', 'comment', {\n\t\t\tid: commentId,\n\t\t\tcontent: comment,\n\t\t} );\n\n\t\tif ( savedRecord ) {\n\t\t\tcreateNotice(\n\t\t\t\t'snackbar',\n\t\t\t\t// translators: Comment edited successfully\n\t\t\t\t__( 'Comment edited successfully.' ),\n\t\t\t\t{\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tisDismissible: true,\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tonError();\n\t\t}\n\t};\n\n\tconst onError = () => {\n\t\tcreateNotice(\n\t\t\t'error',\n\t\t\t// translators: Error message when comment submission fails\n\t\t\t__(\n\t\t\t\t'Something went wrong. Please try publishing the post, or you may have already submitted your comment earlier.'\n\t\t\t),\n\t\t\t{\n\t\t\t\tisDismissible: true,\n\t\t\t}\n\t\t);\n\t};\n\n\tconst onCommentDelete = async ( commentId ) => {\n\t\tconst childComment = await getEntityRecord(\n\t\t\t'root',\n\t\t\t'comment',\n\t\t\tcommentId\n\t\t);\n\t\tawait deleteEntityRecord( 'root', 'comment', commentId );\n\n\t\tif ( childComment && ! childComment.parent ) {\n\t\t\tupdateBlockAttributes( getSelectedBlockClientId(), {\n\t\t\t\tblockCommentId: undefined,\n\t\t\t} );\n\t\t}\n\n\t\tcreateNotice(\n\t\t\t'snackbar',\n\t\t\t// translators: Comment deleted successfully\n\t\t\t__( 'Comment deleted successfully.' ),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tisDismissible: true,\n\t\t\t}\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"editor-collab-sidebar-panel\" style={ styles }>\n\t\t\t<AddComment\n\t\t\t\tonSubmit={ addNewComment }\n\t\t\t\tshowCommentBoard={ showCommentBoard }\n\t\t\t\tsetShowCommentBoard={ setShowCommentBoard }\n\t\t\t/>\n\t\t\t<Comments\n\t\t\t\tkey={ getSelectedBlockClientId() }\n\t\t\t\tthreads={ comments }\n\t\t\t\tonEditComment={ onEditComment }\n\t\t\t\tonAddReply={ addNewComment }\n\t\t\t\tonCommentDelete={ onCommentDelete }\n\t\t\t\tonCommentResolve={ onCommentResolve }\n\t\t\t\tshowCommentBoard={ showCommentBoard }\n\t\t\t\tsetShowCommentBoard={ setShowCommentBoard }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\n/**\n * Renders the Collab sidebar.\n */\nexport default function CollabSidebar() {\n\tconst [ showCommentBoard, setShowCommentBoard ] = useState( false );\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\n\tconst { getActiveComplementaryArea } = useSelect( interfaceStore );\n\n\tconst { postId, postType, postStatus, threads } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostId, getCurrentPostType } = select( editorStore );\n\t\tconst _postId = getCurrentPostId();\n\t\tconst data =\n\t\t\t!! _postId && typeof _postId === 'number'\n\t\t\t\t? select( coreStore ).getEntityRecords( 'root', 'comment', {\n\t\t\t\t\t\tpost: _postId,\n\t\t\t\t\t\ttype: 'block_comment',\n\t\t\t\t\t\tstatus: 'any',\n\t\t\t\t\t\tper_page: 100,\n\t\t\t\t  } )\n\t\t\t\t: null;\n\t\treturn {\n\t\t\tpostId: _postId,\n\t\t\tpostType: getCurrentPostType(),\n\t\t\tpostStatus:\n\t\t\t\tselect( editorStore ).getEditedPostAttribute( 'status' ),\n\t\t\tthreads: data,\n\t\t};\n\t}, [] );\n\n\tconst { blockCommentId } = useSelect( ( select ) => {\n\t\tconst { getBlockAttributes, getSelectedBlockClientId } =\n\t\t\tselect( blockEditorStore );\n\t\tconst _clientId = getSelectedBlockClientId();\n\n\t\treturn {\n\t\t\tblockCommentId: _clientId\n\t\t\t\t? getBlockAttributes( _clientId )?.blockCommentId\n\t\t\t\t: null,\n\t\t};\n\t}, [] );\n\n\tconst openCollabBoard = () => {\n\t\tsetShowCommentBoard( true );\n\t\tenableComplementaryArea( 'core', 'edit-post/collab-sidebar' );\n\t};\n\n\tconst [ blocks ] = useEntityBlockEditor( 'postType', postType, {\n\t\tid: postId,\n\t} );\n\n\t// Process comments to build the tree structure\n\tconst { resultComments, sortedThreads } = useMemo( () => {\n\t\t// Create a compare to store the references to all objects by id\n\t\tconst compare = {};\n\t\tconst result = [];\n\n\t\tconst filteredComments = ( threads ?? [] ).filter(\n\t\t\t( comment ) => comment.status !== 'trash'\n\t\t);\n\n\t\t// Initialize each object with an empty `reply` array\n\t\tfilteredComments.forEach( ( item ) => {\n\t\t\tcompare[ item.id ] = { ...item, reply: [] };\n\t\t} );\n\n\t\t// Iterate over the data to build the tree structure\n\t\tfilteredComments.forEach( ( item ) => {\n\t\t\tif ( item.parent === 0 ) {\n\t\t\t\t// If parent is 0, it's a root item, push it to the result array\n\t\t\t\tresult.push( compare[ item.id ] );\n\t\t\t} else if ( compare[ item.parent ] ) {\n\t\t\t\t// Otherwise, find its parent and push it to the parent's `reply` array\n\t\t\t\tcompare[ item.parent ].reply.push( compare[ item.id ] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( 0 === result?.length ) {\n\t\t\treturn { resultComments: [], sortedThreads: [] };\n\t\t}\n\n\t\tconst updatedResult = result.map( ( item ) => ( {\n\t\t\t...item,\n\t\t\treply: [ ...item.reply ].reverse(),\n\t\t} ) );\n\n\t\tconst blockCommentIds = getCommentIdsFromBlocks( blocks );\n\n\t\tconst threadIdMap = new Map(\n\t\t\tupdatedResult.map( ( thread ) => [ thread.id, thread ] )\n\t\t);\n\n\t\tconst sortedComments = blockCommentIds\n\t\t\t.map( ( id ) => threadIdMap.get( id ) )\n\t\t\t.filter( ( thread ) => thread !== undefined );\n\n\t\treturn { resultComments: updatedResult, sortedThreads: sortedComments };\n\t}, [ threads, blocks ] );\n\n\t// Get the global styles to set the background color of the sidebar.\n\tconst { merged: GlobalStyles } = useGlobalStylesContext();\n\tconst backgroundColor = GlobalStyles?.styles?.color?.background;\n\n\tif ( 0 < resultComments.length ) {\n\t\tconst unsubscribe = subscribe( () => {\n\t\t\tconst activeSidebar = getActiveComplementaryArea( 'core' );\n\n\t\t\tif ( ! activeSidebar ) {\n\t\t\t\tenableComplementaryArea( 'core', collabSidebarName );\n\t\t\t\tunsubscribe();\n\t\t\t}\n\t\t} );\n\t}\n\n\tif ( postStatus === 'publish' ) {\n\t\treturn null; // or maybe return some message indicating no threads are available.\n\t}\n\n\tconst AddCommentComponent = blockCommentId\n\t\t? AddCommentToolbarButton\n\t\t: AddCommentButton;\n\n\treturn (\n\t\t<>\n\t\t\t<AddCommentComponent onClick={ openCollabBoard } />\n\t\t\t<PluginSidebar\n\t\t\t\tidentifier={ collabHistorySidebarName }\n\t\t\t\t// translators: Comments sidebar title\n\t\t\t\ttitle={ __( 'Comments' ) }\n\t\t\t\ticon={ commentIcon }\n\t\t\t>\n\t\t\t\t<CollabSidebarContent\n\t\t\t\t\tcomments={ resultComments }\n\t\t\t\t\tshowCommentBoard={ showCommentBoard }\n\t\t\t\t\tsetShowCommentBoard={ setShowCommentBoard }\n\t\t\t\t/>\n\t\t\t</PluginSidebar>\n\t\t\t<PluginSidebar\n\t\t\t\tisPinnable={ false }\n\t\t\t\theader={ false }\n\t\t\t\tidentifier={ collabSidebarName }\n\t\t\t\tclassName=\"editor-collab-sidebar\"\n\t\t\t\theaderClassName=\"editor-collab-sidebar__header\"\n\t\t\t>\n\t\t\t\t<CollabSidebarContent\n\t\t\t\t\tcomments={ sortedThreads }\n\t\t\t\t\tshowCommentBoard={ showCommentBoard }\n\t\t\t\t\tsetShowCommentBoard={ setShowCommentBoard }\n\t\t\t\t\tstyles={ {\n\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</PluginSidebar>\n\t\t</>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}