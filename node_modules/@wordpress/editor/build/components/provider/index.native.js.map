{"version":3,"names":["_reactNative","require","_memize","_interopRequireDefault","_reactNativeSafeAreaContext","_reactNativeBridge","_interopRequireWildcard","_element","_wordcount","_blocks","_data","_compose","_hooks","_blockEditor","_blockLibrary","_i18n","_editor","_notices","_coreData","_index","_postTitle","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","postTypeEntities","name","baseURL","map","postTypeEntity","kind","transientEdits","blocks","selection","mergedEdits","meta","rawAttributes","NativeEditorProvider","Component","constructor","arguments","post","props","addEntities","receiveEntityRecords","type","onHardwareBackPress","bind","onContentUpdate","getEditorSettings","memize","settings","capabilities","maxSize","state","isHelpVisible","componentDidMount","createErrorNotice","locale","hostAppNamespace","updateEditorSettings","updateBlockEditorSettings","getThemeColors","subscriptionParentGetHtml","subscribeParentGetHtml","serializeToNativeAction","subscriptionParentToggleHTMLMode","subscribeParentToggleHTMLMode","toggleMode","subscriptionParentSetTitle","subscribeSetTitle","payload","editTitle","title","subscriptionParentUpdateHtml","subscribeUpdateHtml","updateHtmlAction","html","subscriptionParentReplaceBlock","subscribeReplaceBlock","replaceBlockAction","clientId","subscriptionParentMediaAppend","subscribeMediaAppend","blockName","mediaType","blockType","getBlockType","newBlock","createBlock","id","mediaId","mediaUrl","indexAfterSelected","selectedBlockIndex","insertionIndex","blockCount","insertBlock","__","subscriptionParentUpdateEditorSettings","subscribeUpdateEditorSettings","editorSettings","subscriptionParentUpdateCapabilities","subscribeUpdateCapabilities","updateCapabilitiesAction","subscriptionParentShowNotice","subscribeShowNotice","createSuccessNotice","message","subscriptionParentShowEditorHelp","subscribeShowEditorHelp","setState","hardwareBackPressListener","BackHandler","addEventListener","subscriptionOnContentUpdate","subscribeToContentUpdate","data","requestBlockTypeImpressions","storedImpressions","impressions","NEW_BLOCK_TYPES","storedImpressionKeys","keys","storedImpressionsCurrent","every","newKey","includes","setBlockTypeImpressions","componentWillUnmount","remove","rawStyles","rawFeatures","defaultEditorColors","defaultEditorGradients","getGlobalStyles","getColorsAndGradients","componentDidUpdate","prevProps","isReady","isUnsupportedBlock","getUnregisteredTypeHandlerName","unsupportedBlockNames","filter","block","attributes","originalName","RNReactNativeGutenbergBridge","editorDidMount","clearSelectedBlock","content","rawContent","onClearPostTitleSelection","onInsertBlockAfter","onInsertBlocks","pasteHandler","plainText","insertContentWithTitle","mode","applyFilters","serialize","hasChanges","raw","contentInfo","characterCount","wordCount","paragraphCount","provideToNative_Html","parsed","parse","resetEditorBlocksWithoutUndoLevel","blockClientId","replaceBlock","switchMode","render","children","jsxs","Fragment","jsx","SafeAreaProvider","EditorHelpTopics","isVisible","onClose","close","showSupport","supportSection","ComposedNativeProvider","exports","ExperimentalEditorProvider","compose","withSelect","select","_settings$colors","_settings$gradients","__unstableIsEditorReady","isEditorReady","getEditorBlocks","getEditedPostAttribute","getEditedPostContent","getEditorMode","editorStore","getBlockIndex","getSelectedBlockClientId","getGlobalBlockCount","blockEditorStore","colors","gradients","selectedBlockClientId","withDispatch","dispatch","editPost","resetEditorBlocks","switchEditorMode","togglePostTitleSelection","updateSettings","insertBlocks","coreStore","noticesStore","__unstableShouldCreateUndoLevel","undefined","_default"],"sources":["@wordpress/editor/src/components/provider/index.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { BackHandler } from 'react-native';\nimport memize from 'memize';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\n/**\n * WordPress dependencies\n */\nimport RNReactNativeGutenbergBridge, {\n\trequestBlockTypeImpressions,\n\tsetBlockTypeImpressions,\n\tsubscribeParentGetHtml,\n\tsubscribeParentToggleHTMLMode,\n\tsubscribeUpdateHtml,\n\tsubscribeSetTitle,\n\tsubscribeMediaAppend,\n\tsubscribeReplaceBlock,\n\tsubscribeUpdateEditorSettings,\n\tsubscribeUpdateCapabilities,\n\tsubscribeShowNotice,\n\tsubscribeShowEditorHelp,\n\tsubscribeToContentUpdate,\n} from '@wordpress/react-native-bridge';\nimport { Component } from '@wordpress/element';\nimport { count as wordCount } from '@wordpress/wordcount';\nimport {\n\tparse,\n\tserialize,\n\tgetUnregisteredTypeHandlerName,\n\tgetBlockType,\n\tcreateBlock,\n\tpasteHandler,\n} from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { applyFilters } from '@wordpress/hooks';\nimport {\n\tstore as blockEditorStore,\n\tgetGlobalStyles,\n\tgetColorsAndGradients,\n} from '@wordpress/block-editor';\nimport { NEW_BLOCK_TYPES } from '@wordpress/block-library';\nimport { __ } from '@wordpress/i18n';\n\nconst postTypeEntities = [\n\t{ name: 'post', baseURL: '/wp/v2/posts' },\n\t{ name: 'page', baseURL: '/wp/v2/pages' },\n\t{ name: 'attachment', baseURL: '/wp/v2/media' },\n\t{ name: 'wp_block', baseURL: '/wp/v2/blocks' },\n].map( ( postTypeEntity ) => ( {\n\tkind: 'postType',\n\t...postTypeEntity,\n\ttransientEdits: {\n\t\tblocks: true,\n\t\tselection: true,\n\t},\n\tmergedEdits: {\n\t\tmeta: true,\n\t},\n\trawAttributes: [ 'title', 'excerpt', 'content' ],\n} ) );\nimport { EditorHelpTopics, store as editorStore } from '@wordpress/editor';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport EditorProvider from './index.js';\nimport { insertContentWithTitle } from '../post-title';\n\nclass NativeEditorProvider extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\t// Keep a local reference to `post` to detect changes.\n\t\tthis.post = this.props.post;\n\t\tthis.props.addEntities( postTypeEntities );\n\t\tthis.props.receiveEntityRecords(\n\t\t\t'postType',\n\t\t\tthis.post.type,\n\t\t\tthis.post\n\t\t);\n\n\t\tthis.onHardwareBackPress = this.onHardwareBackPress.bind( this );\n\t\tthis.onContentUpdate = this.onContentUpdate.bind( this );\n\n\t\tthis.getEditorSettings = memize(\n\t\t\t( settings, capabilities ) => ( {\n\t\t\t\t...settings,\n\t\t\t\tcapabilities,\n\t\t\t} ),\n\t\t\t{\n\t\t\t\tmaxSize: 1,\n\t\t\t}\n\t\t);\n\t\tthis.state = {\n\t\t\tisHelpVisible: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {\n\t\t\tcapabilities,\n\t\t\tcreateErrorNotice,\n\t\t\tlocale,\n\t\t\thostAppNamespace,\n\t\t\tupdateEditorSettings,\n\t\t\tupdateBlockEditorSettings,\n\t\t} = this.props;\n\n\t\tupdateEditorSettings( {\n\t\t\tcapabilities,\n\t\t\t...this.getThemeColors( this.props ),\n\t\t\tlocale,\n\t\t\thostAppNamespace,\n\t\t} );\n\n\t\tthis.subscriptionParentGetHtml = subscribeParentGetHtml( () => {\n\t\t\tthis.serializeToNativeAction();\n\t\t} );\n\n\t\tthis.subscriptionParentToggleHTMLMode = subscribeParentToggleHTMLMode(\n\t\t\t() => {\n\t\t\t\tthis.toggleMode();\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentSetTitle = subscribeSetTitle( ( payload ) => {\n\t\t\tthis.props.editTitle( payload.title );\n\t\t} );\n\n\t\tthis.subscriptionParentUpdateHtml = subscribeUpdateHtml(\n\t\t\t( payload ) => {\n\t\t\t\tthis.updateHtmlAction( payload.html );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentReplaceBlock = subscribeReplaceBlock(\n\t\t\t( payload ) => {\n\t\t\t\tthis.replaceBlockAction( payload.html, payload.clientId );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentMediaAppend = subscribeMediaAppend(\n\t\t\t( payload ) => {\n\t\t\t\tconst blockName = 'core/' + payload.mediaType;\n\t\t\t\tconst blockType = getBlockType( blockName );\n\n\t\t\t\tif ( blockType && blockType?.name ) {\n\t\t\t\t\tconst newBlock = createBlock( blockType.name, {\n\t\t\t\t\t\tid: payload.mediaId,\n\t\t\t\t\t\t[ payload.mediaType === 'image' ? 'url' : 'src' ]:\n\t\t\t\t\t\t\tpayload.mediaUrl,\n\t\t\t\t\t} );\n\n\t\t\t\t\tconst indexAfterSelected =\n\t\t\t\t\t\tthis.props.selectedBlockIndex + 1;\n\t\t\t\t\tconst insertionIndex =\n\t\t\t\t\t\tindexAfterSelected || this.props.blockCount;\n\n\t\t\t\t\tthis.props.insertBlock( newBlock, insertionIndex );\n\t\t\t\t} else {\n\t\t\t\t\tcreateErrorNotice(\n\t\t\t\t\t\t__( 'File type not supported as a media file.' )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentUpdateEditorSettings =\n\t\t\tsubscribeUpdateEditorSettings( ( { ...editorSettings } ) => {\n\t\t\t\tupdateEditorSettings( this.getThemeColors( editorSettings ) );\n\t\t\t} );\n\n\t\tthis.subscriptionParentUpdateCapabilities = subscribeUpdateCapabilities(\n\t\t\t( payload ) => {\n\t\t\t\tthis.updateCapabilitiesAction( payload );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentShowNotice = subscribeShowNotice(\n\t\t\t( payload ) => {\n\t\t\t\tthis.props.createSuccessNotice( payload.message );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentShowEditorHelp = subscribeShowEditorHelp( () => {\n\t\t\tthis.setState( { isHelpVisible: true } );\n\t\t} );\n\n\t\tthis.hardwareBackPressListener = BackHandler.addEventListener(\n\t\t\t'hardwareBackPress',\n\t\t\tthis.onHardwareBackPress\n\t\t);\n\n\t\tthis.subscriptionOnContentUpdate = subscribeToContentUpdate(\n\t\t\t( data ) => {\n\t\t\t\tthis.onContentUpdate( data );\n\t\t\t}\n\t\t);\n\n\t\t// Request current block impressions from native app.\n\t\trequestBlockTypeImpressions( ( storedImpressions ) => {\n\t\t\tconst impressions = { ...NEW_BLOCK_TYPES, ...storedImpressions };\n\n\t\t\t// Persist impressions to JavaScript store.\n\t\t\tupdateBlockEditorSettings( { impressions } );\n\n\t\t\t// Persist impressions to native store if they do not include latest\n\t\t\t// `NEW_BLOCK_TYPES` configuration.\n\t\t\tconst storedImpressionKeys = Object.keys( storedImpressions );\n\t\t\tconst storedImpressionsCurrent = Object.keys(\n\t\t\t\tNEW_BLOCK_TYPES\n\t\t\t).every( ( newKey ) => storedImpressionKeys.includes( newKey ) );\n\t\t\tif ( ! storedImpressionsCurrent ) {\n\t\t\t\tsetBlockTypeImpressions( impressions );\n\t\t\t}\n\t\t} );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.subscriptionParentGetHtml ) {\n\t\t\tthis.subscriptionParentGetHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentToggleHTMLMode ) {\n\t\t\tthis.subscriptionParentToggleHTMLMode.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentSetTitle ) {\n\t\t\tthis.subscriptionParentSetTitle.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateHtml ) {\n\t\t\tthis.subscriptionParentUpdateHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentReplaceBlock ) {\n\t\t\tthis.subscriptionParentReplaceBlock.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentMediaAppend ) {\n\t\t\tthis.subscriptionParentMediaAppend.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateEditorSettings ) {\n\t\t\tthis.subscriptionParentUpdateEditorSettings.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateCapabilities ) {\n\t\t\tthis.subscriptionParentUpdateCapabilities.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentShowNotice ) {\n\t\t\tthis.subscriptionParentShowNotice.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentShowEditorHelp ) {\n\t\t\tthis.subscriptionParentShowEditorHelp.remove();\n\t\t}\n\n\t\tif ( this.hardwareBackPressListener ) {\n\t\t\tthis.hardwareBackPressListener.remove();\n\t\t}\n\n\t\tif ( this.subscriptionOnContentUpdate ) {\n\t\t\tthis.subscriptionOnContentUpdate.remove();\n\t\t}\n\t}\n\n\tgetThemeColors( { rawStyles, rawFeatures } ) {\n\t\tconst { defaultEditorColors, defaultEditorGradients } = this.props;\n\n\t\tif ( rawStyles && rawFeatures ) {\n\t\t\treturn getGlobalStyles( rawStyles, rawFeatures );\n\t\t}\n\n\t\treturn getColorsAndGradients(\n\t\t\tdefaultEditorColors,\n\t\t\tdefaultEditorGradients,\n\t\t\trawFeatures\n\t\t);\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( ! prevProps.isReady && this.props.isReady ) {\n\t\t\tconst blocks = this.props.blocks;\n\t\t\tconst isUnsupportedBlock = ( { name } ) =>\n\t\t\t\tname === getUnregisteredTypeHandlerName();\n\t\t\tconst unsupportedBlockNames = blocks\n\t\t\t\t.filter( isUnsupportedBlock )\n\t\t\t\t.map( ( block ) => block.attributes.originalName );\n\t\t\tRNReactNativeGutenbergBridge.editorDidMount(\n\t\t\t\tunsupportedBlockNames\n\t\t\t);\n\t\t}\n\t}\n\n\tonHardwareBackPress() {\n\t\tconst { clearSelectedBlock, selectedBlockIndex } = this.props;\n\n\t\tif ( selectedBlockIndex !== -1 ) {\n\t\t\tclearSelectedBlock();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tonContentUpdate( { content: rawContent } ) {\n\t\tconst {\n\t\t\teditTitle,\n\t\t\tonClearPostTitleSelection,\n\t\t\tonInsertBlockAfter: onInsertBlocks,\n\t\t\ttitle,\n\t\t} = this.props;\n\t\tconst content = pasteHandler( {\n\t\t\tplainText: rawContent,\n\t\t} );\n\n\t\tinsertContentWithTitle( title, content, editTitle, onInsertBlocks );\n\t\tonClearPostTitleSelection();\n\t}\n\n\tserializeToNativeAction() {\n\t\tconst title = this.props.title;\n\t\tlet html;\n\n\t\tif ( this.props.mode === 'text' ) {\n\t\t\t// The HTMLTextInput component does not update the store when user is doing changes\n\t\t\t// Let's request the HTML from the component's state directly.\n\t\t\thtml = applyFilters( 'native.persist-html' );\n\t\t} else {\n\t\t\thtml = serialize( this.props.blocks );\n\t\t}\n\n\t\tconst hasChanges =\n\t\t\ttitle !== this.post.title.raw || html !== this.post.content.raw;\n\n\t\t// Variable to store the content structure metrics.\n\t\tconst contentInfo = {};\n\t\tcontentInfo.characterCount = wordCount(\n\t\t\thtml,\n\t\t\t'characters_including_spaces'\n\t\t);\n\t\tcontentInfo.wordCount = wordCount( html, 'words' );\n\t\tcontentInfo.paragraphCount = this.props.paragraphCount;\n\t\tcontentInfo.blockCount = this.props.blockCount;\n\t\tRNReactNativeGutenbergBridge.provideToNative_Html(\n\t\t\thtml,\n\t\t\ttitle,\n\t\t\thasChanges,\n\t\t\tcontentInfo\n\t\t);\n\n\t\tif ( hasChanges ) {\n\t\t\tthis.post.title.raw = title;\n\t\t\tthis.post.content.raw = html;\n\t\t}\n\t}\n\n\tupdateHtmlAction( html ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.resetEditorBlocksWithoutUndoLevel( parsed );\n\t}\n\n\treplaceBlockAction( html, blockClientId ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.replaceBlock( blockClientId, parsed );\n\t}\n\n\ttoggleMode() {\n\t\tconst { mode, switchMode } = this.props;\n\t\t// Refresh html content first.\n\t\tthis.serializeToNativeAction();\n\t\tswitchMode( mode === 'visual' ? 'text' : 'visual' );\n\t}\n\n\tupdateCapabilitiesAction( capabilities ) {\n\t\tthis.props.updateEditorSettings( { capabilities } );\n\t}\n\n\trender() {\n\t\tconst { children, post, capabilities, settings, ...props } = this.props;\n\t\tconst editorSettings = this.getEditorSettings( settings, capabilities );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EditorProvider\n\t\t\t\t\tpost={ this.post }\n\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\t{ ...props }\n\t\t\t\t>\n\t\t\t\t\t<SafeAreaProvider>{ children }</SafeAreaProvider>\n\t\t\t\t</EditorProvider>\n\t\t\t\t<EditorHelpTopics\n\t\t\t\t\tisVisible={ this.state.isHelpVisible }\n\t\t\t\t\tonClose={ () => this.setState( { isHelpVisible: false } ) }\n\t\t\t\t\tclose={ () => this.setState( { isHelpVisible: false } ) }\n\t\t\t\t\tshowSupport={ capabilities?.supportSection === true }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst ComposedNativeProvider = compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\t__unstableIsEditorReady: isEditorReady,\n\t\t\tgetEditorBlocks,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditedPostContent,\n\t\t\tgetEditorSettings,\n\t\t\tgetEditorMode,\n\t\t} = select( editorStore );\n\n\t\tconst { getBlockIndex, getSelectedBlockClientId, getGlobalBlockCount } =\n\t\t\tselect( blockEditorStore );\n\n\t\tconst settings = getEditorSettings();\n\t\tconst defaultEditorColors = settings?.colors ?? [];\n\t\tconst defaultEditorGradients = settings?.gradients ?? [];\n\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\treturn {\n\t\t\tmode: getEditorMode(),\n\t\t\tisReady: isEditorReady(),\n\t\t\tblocks: getEditorBlocks(),\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tgetEditedPostContent,\n\t\t\tdefaultEditorColors,\n\t\t\tdefaultEditorGradients,\n\t\t\tselectedBlockIndex: getBlockIndex( selectedBlockClientId ),\n\t\t\tblockCount: getGlobalBlockCount(),\n\t\t\tparagraphCount: getGlobalBlockCount( 'core/paragraph' ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst {\n\t\t\teditPost,\n\t\t\tresetEditorBlocks,\n\t\t\tupdateEditorSettings,\n\t\t\tswitchEditorMode,\n\t\t\ttogglePostTitleSelection,\n\t\t} = dispatch( editorStore );\n\t\tconst {\n\t\t\tclearSelectedBlock,\n\t\t\tupdateSettings,\n\t\t\tinsertBlock,\n\t\t\tinsertBlocks,\n\t\t\treplaceBlock,\n\t\t} = dispatch( blockEditorStore );\n\t\tconst { addEntities, receiveEntityRecords } = dispatch( coreStore );\n\t\tconst { createSuccessNotice, createErrorNotice } =\n\t\t\tdispatch( noticesStore );\n\n\t\treturn {\n\t\t\tupdateBlockEditorSettings: updateSettings,\n\t\t\tupdateEditorSettings,\n\t\t\taddEntities,\n\t\t\tinsertBlock,\n\t\t\tinsertBlocks,\n\t\t\tcreateSuccessNotice,\n\t\t\tcreateErrorNotice,\n\t\t\tclearSelectedBlock,\n\t\t\teditTitle( title ) {\n\t\t\t\teditPost( { title } );\n\t\t\t},\n\t\t\treceiveEntityRecords,\n\t\t\tresetEditorBlocksWithoutUndoLevel( blocks ) {\n\t\t\t\tresetEditorBlocks( blocks, {\n\t\t\t\t\t__unstableShouldCreateUndoLevel: false,\n\t\t\t\t} );\n\t\t\t},\n\t\t\tswitchMode( mode ) {\n\t\t\t\tswitchEditorMode( mode );\n\t\t\t},\n\t\t\tonInsertBlockAfter( blocks ) {\n\t\t\t\tinsertBlocks( blocks, undefined, undefined, false );\n\t\t\t},\n\t\t\tonClearPostTitleSelection() {\n\t\t\t\ttogglePostTitleSelection( false );\n\t\t\t},\n\t\t\treplaceBlock,\n\t\t};\n\t} ),\n] )( NativeEditorProvider );\n\nexport default ComposedNativeProvider;\nexport { ComposedNativeProvider as ExperimentalEditorProvider };\n"],"mappings":"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","ignoreList":[]}