"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usePostContentBlocks;
var _data = require("@wordpress/data");
var _element = require("@wordpress/element");
var _hooks = require("@wordpress/hooks");
var _store = require("../../store");
var _lockUnlock = require("../../lock-unlock");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const POST_CONTENT_BLOCK_TYPES = ['core/post-title', 'core/post-featured-image', 'core/post-content'];
function usePostContentBlocks() {
  const contentOnlyBlockTypes = (0, _element.useMemo)(() => [...(0, _hooks.applyFilters)('editor.postContentBlockTypes', POST_CONTENT_BLOCK_TYPES)], []);

  // Note that there are two separate subscriptions because the result for each
  // returns a new array.
  const contentOnlyIds = (0, _data.useSelect)(select => {
    const {
      getPostBlocksByName
    } = (0, _lockUnlock.unlock)(select(_store.store));
    return getPostBlocksByName(contentOnlyBlockTypes);
  }, [contentOnlyBlockTypes]);
  return contentOnlyIds;
}
//# sourceMappingURL=use-post-content-blocks.js.map