{"version":3,"names":["_element","require","_data","_compose","_blockEditor","_store","_jsxRuntime","getSubRegistry","subRegistries","registry","useSubRegistry","subRegistry","get","createRegistry","blockEditorStoreConfig","registerStore","storeConfig","set","withRegistryProvider","createHigherOrderComponent","WrappedComponent","props","useRegistry","useState","WeakMap","jsx","RegistryProvider","value","children","_default","exports","default"],"sources":["@wordpress/editor/src/components/provider/with-registry-provider.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\nimport { useRegistry, createRegistry, RegistryProvider } from '@wordpress/data';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { storeConfig as blockEditorStoreConfig } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { storeConfig } from '../../store';\n\nfunction getSubRegistry( subRegistries, registry, useSubRegistry ) {\n\tif ( ! useSubRegistry ) {\n\t\treturn registry;\n\t}\n\tlet subRegistry = subRegistries.get( registry );\n\tif ( ! subRegistry ) {\n\t\tsubRegistry = createRegistry(\n\t\t\t{\n\t\t\t\t'core/block-editor': blockEditorStoreConfig,\n\t\t\t},\n\t\t\tregistry\n\t\t);\n\t\t// Todo: The interface store should also be created per instance.\n\t\tsubRegistry.registerStore( 'core/editor', storeConfig );\n\t\tsubRegistries.set( registry, subRegistry );\n\t}\n\treturn subRegistry;\n}\n\nconst withRegistryProvider = createHigherOrderComponent(\n\t( WrappedComponent ) =>\n\t\t( { useSubRegistry = true, ...props } ) => {\n\t\t\tconst registry = useRegistry();\n\t\t\tconst [ subRegistries ] = useState( () => new WeakMap() );\n\t\t\tconst subRegistry = getSubRegistry(\n\t\t\t\tsubRegistries,\n\t\t\t\tregistry,\n\t\t\t\tuseSubRegistry\n\t\t\t);\n\n\t\t\tif ( subRegistry === registry ) {\n\t\t\t\treturn <WrappedComponent registry={ registry } { ...props } />;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<RegistryProvider value={ subRegistry }>\n\t\t\t\t\t<WrappedComponent registry={ subRegistry } { ...props } />\n\t\t\t\t</RegistryProvider>\n\t\t\t);\n\t\t},\n\t'withRegistryProvider'\n);\n\nexport default withRegistryProvider;\n"],"mappings":";;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,QAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AAKA,IAAAI,MAAA,GAAAJ,OAAA;AAA0C,IAAAK,WAAA,GAAAL,OAAA;AAX1C;AACA;AACA;;AAMA;AACA;AACA;;AAGA,SAASM,cAAcA,CAAEC,aAAa,EAAEC,QAAQ,EAAEC,cAAc,EAAG;EAClE,IAAK,CAAEA,cAAc,EAAG;IACvB,OAAOD,QAAQ;EAChB;EACA,IAAIE,WAAW,GAAGH,aAAa,CAACI,GAAG,CAAEH,QAAS,CAAC;EAC/C,IAAK,CAAEE,WAAW,EAAG;IACpBA,WAAW,GAAG,IAAAE,oBAAc,EAC3B;MACC,mBAAmB,EAAEC;IACtB,CAAC,EACDL,QACD,CAAC;IACD;IACAE,WAAW,CAACI,aAAa,CAAE,aAAa,EAAEC,kBAAY,CAAC;IACvDR,aAAa,CAACS,GAAG,CAAER,QAAQ,EAAEE,WAAY,CAAC;EAC3C;EACA,OAAOA,WAAW;AACnB;AAEA,MAAMO,oBAAoB,GAAG,IAAAC,mCAA0B,EACpDC,gBAAgB,IACjB,CAAE;EAAEV,cAAc,GAAG,IAAI;EAAE,GAAGW;AAAM,CAAC,KAAM;EAC1C,MAAMZ,QAAQ,GAAG,IAAAa,iBAAW,EAAC,CAAC;EAC9B,MAAM,CAAEd,aAAa,CAAE,GAAG,IAAAe,iBAAQ,EAAE,MAAM,IAAIC,OAAO,CAAC,CAAE,CAAC;EACzD,MAAMb,WAAW,GAAGJ,cAAc,CACjCC,aAAa,EACbC,QAAQ,EACRC,cACD,CAAC;EAED,IAAKC,WAAW,KAAKF,QAAQ,EAAG;IAC/B,oBAAO,IAAAH,WAAA,CAAAmB,GAAA,EAACL,gBAAgB;MAACX,QAAQ,EAAGA,QAAU;MAAA,GAAMY;IAAK,CAAI,CAAC;EAC/D;EAEA,oBACC,IAAAf,WAAA,CAAAmB,GAAA,EAACvB,KAAA,CAAAwB,gBAAgB;IAACC,KAAK,EAAGhB,WAAa;IAAAiB,QAAA,eACtC,IAAAtB,WAAA,CAAAmB,GAAA,EAACL,gBAAgB;MAACX,QAAQ,EAAGE,WAAa;MAAA,GAAMU;IAAK,CAAI;EAAC,CACzC,CAAC;AAErB,CAAC,EACF,sBACD,CAAC;AAAC,IAAAQ,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEab,oBAAoB","ignoreList":[]}