{"version":3,"names":["_data","require","_element","_blockEditor","_preferences","_interface","useAutoSwitchEditorSidebars","hasBlockSelection","useSelect","select","blockEditorStore","getBlockSelectionStart","getActiveComplementaryArea","interfaceStore","enableComplementaryArea","useDispatch","get","getPreference","preferencesStore","useEffect","activeGeneralSidebar","isEditorSidebarOpened","includes","isDistractionFree","_default","exports","default"],"sources":["@wordpress/editor/src/components/provider/use-auto-switch-editor-sidebars.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * This listener hook monitors for block selection and triggers the appropriate\n * sidebar state.\n */\nfunction useAutoSwitchEditorSidebars() {\n\tconst { hasBlockSelection } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\thasBlockSelection:\n\t\t\t\t!! select( blockEditorStore ).getBlockSelectionStart(),\n\t\t};\n\t}, [] );\n\n\tconst { getActiveComplementaryArea } = useSelect( interfaceStore );\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\n\tconst { get: getPreference } = useSelect( preferencesStore );\n\n\tuseEffect( () => {\n\t\tconst activeGeneralSidebar = getActiveComplementaryArea( 'core' );\n\t\tconst isEditorSidebarOpened = [\n\t\t\t'edit-post/document',\n\t\t\t'edit-post/block',\n\t\t].includes( activeGeneralSidebar );\n\t\tconst isDistractionFree = getPreference( 'core', 'distractionFree' );\n\t\tif ( ! isEditorSidebarOpened || isDistractionFree ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( hasBlockSelection ) {\n\t\t\tenableComplementaryArea( 'core', 'edit-post/block' );\n\t\t} else {\n\t\t\tenableComplementaryArea( 'core', 'edit-post/document' );\n\t\t}\n\t}, [\n\t\thasBlockSelection,\n\t\tgetActiveComplementaryArea,\n\t\tenableComplementaryArea,\n\t\tgetPreference,\n\t] );\n}\n\nexport default useAutoSwitchEditorSidebars;\n"],"mappings":";;;;;;AAGA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,UAAA,GAAAJ,OAAA;AAPA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA,SAASK,2BAA2BA,CAAA,EAAG;EACtC,MAAM;IAAEC;EAAkB,CAAC,GAAG,IAAAC,eAAS,EAAIC,MAAM,IAAM;IACtD,OAAO;MACNF,iBAAiB,EAChB,CAAC,CAAEE,MAAM,CAAEC,kBAAiB,CAAC,CAACC,sBAAsB,CAAC;IACvD,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EAEP,MAAM;IAAEC;EAA2B,CAAC,GAAG,IAAAJ,eAAS,EAAEK,gBAAe,CAAC;EAClE,MAAM;IAAEC;EAAwB,CAAC,GAAG,IAAAC,iBAAW,EAAEF,gBAAe,CAAC;EACjE,MAAM;IAAEG,GAAG,EAAEC;EAAc,CAAC,GAAG,IAAAT,eAAS,EAAEU,kBAAiB,CAAC;EAE5D,IAAAC,kBAAS,EAAE,MAAM;IAChB,MAAMC,oBAAoB,GAAGR,0BAA0B,CAAE,MAAO,CAAC;IACjE,MAAMS,qBAAqB,GAAG,CAC7B,oBAAoB,EACpB,iBAAiB,CACjB,CAACC,QAAQ,CAAEF,oBAAqB,CAAC;IAClC,MAAMG,iBAAiB,GAAGN,aAAa,CAAE,MAAM,EAAE,iBAAkB,CAAC;IACpE,IAAK,CAAEI,qBAAqB,IAAIE,iBAAiB,EAAG;MACnD;IACD;IACA,IAAKhB,iBAAiB,EAAG;MACxBO,uBAAuB,CAAE,MAAM,EAAE,iBAAkB,CAAC;IACrD,CAAC,MAAM;MACNA,uBAAuB,CAAE,MAAM,EAAE,oBAAqB,CAAC;IACxD;EACD,CAAC,EAAE,CACFP,iBAAiB,EACjBK,0BAA0B,EAC1BE,uBAAuB,EACvBG,aAAa,CACZ,CAAC;AACJ;AAAC,IAAAO,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcpB,2BAA2B","ignoreList":[]}