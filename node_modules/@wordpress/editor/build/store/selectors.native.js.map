{"version":3,"names":["_data","require","_selectors","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","isPostTitleSelected","state","postTitle","isSelected","isEditedPostAutosaveable","createRegistrySelector","isEditedPostSaveable","hasChangedContent","isEditedPostDirty"],"sources":["@wordpress/editor/src/store/selectors.native.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tisEditedPostDirty,\n\tisEditedPostSaveable,\n\thasChangedContent,\n} from './selectors.js';\n\nexport * from './selectors.js';\n\n/**\n * Returns true if post title is selected.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether current post title is selected.\n */\nexport function isPostTitleSelected( state ) {\n\treturn state.postTitle.isSelected;\n}\n\n/**\n * Returns true if the post can be autosaved, or false otherwise.\n *\n * @param {Object} state    Global application state.\n * @param {Object} autosave A raw autosave object from the REST API.\n *\n * @return {boolean} Whether the post can be autosaved.\n */\nexport const isEditedPostAutosaveable = createRegistrySelector(\n\t() => ( state ) => {\n\t\t// A post must contain a title, an excerpt, or non-empty content to be valid for autosaving.\n\t\tif ( ! isEditedPostSaveable( state ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// To avoid an expensive content serialization, use the content dirtiness\n\t\t// flag in place of content field comparison against the known autosave.\n\t\t// This is not strictly accurate, and relies on a tolerance toward autosave\n\t\t// request failures for unnecessary saves.\n\t\tif ( hasChangedContent( state ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( isEditedPostDirty( state ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n);\n"],"mappings":";;;;;;;;;;;AAGA,IAAAA,KAAA,GAAAC,OAAA;AAKA,IAAAC,UAAA,GAAAD,OAAA;AAMAE,MAAA,CAAAC,IAAA,CAAAF,UAAA,EAAAG,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAC,YAAA,EAAAJ,GAAA;EAAA,IAAAA,GAAA,IAAAK,OAAA,IAAAA,OAAA,CAAAL,GAAA,MAAAJ,UAAA,CAAAI,GAAA;EAAAH,MAAA,CAAAS,cAAA,CAAAD,OAAA,EAAAL,GAAA;IAAAO,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAZ,UAAA,CAAAI,GAAA;IAAA;EAAA;AAAA;AAdA;AACA;AACA;;AAGA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,mBAAmBA,CAAEC,KAAK,EAAG;EAC5C,OAAOA,KAAK,CAACC,SAAS,CAACC,UAAU;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,wBAAwB,GAAAR,OAAA,CAAAQ,wBAAA,GAAG,IAAAC,4BAAsB,EAC7D,MAAQJ,KAAK,IAAM;EAClB;EACA,IAAK,CAAE,IAAAK,+BAAoB,EAAEL,KAAM,CAAC,EAAG;IACtC,OAAO,KAAK;EACb;;EAEA;EACA;EACA;EACA;EACA,IAAK,IAAAM,4BAAiB,EAAEN,KAAM,CAAC,EAAG;IACjC,OAAO,IAAI;EACZ;EAEA,IAAK,IAAAO,4BAAiB,EAAEP,KAAM,CAAC,EAAG;IACjC,OAAO,IAAI;EACZ;EAEA,OAAO,KAAK;AACb,CACD,CAAC","ignoreList":[]}