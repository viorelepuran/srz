"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usePageTypeBadge;
var _i18n = require("@wordpress/i18n");
var _data = require("@wordpress/data");
var _coreData = require("@wordpress/core-data");
/**
 * WordPress dependencies
 */

/**
 * Custom hook to get the page type badge for the current post on edit site view.
 *
 * @param {number|string} postId postId of the current post being edited.
 */
function usePageTypeBadge(postId) {
  const {
    isFrontPage,
    isPostsPage
  } = (0, _data.useSelect)(select => {
    const {
      canUser,
      getEditedEntityRecord
    } = select(_coreData.store);
    const siteSettings = canUser('read', {
      kind: 'root',
      name: 'site'
    }) ? getEditedEntityRecord('root', 'site') : undefined;
    const _postId = parseInt(postId, 10);
    return {
      isFrontPage: siteSettings?.page_on_front === _postId,
      isPostsPage: siteSettings?.page_for_posts === _postId
    };
  });
  if (isFrontPage) {
    return (0, _i18n.__)('Homepage');
  } else if (isPostsPage) {
    return (0, _i18n.__)('Posts Page');
  }
  return false;
}
//# sourceMappingURL=pageTypeBadge.js.map