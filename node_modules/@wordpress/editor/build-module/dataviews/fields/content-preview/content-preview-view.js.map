{"version":3,"names":["__","BlockPreview","privateApis","blockEditorPrivateApis","useSelect","useEntityBlockEditor","store","coreStore","EditorProvider","unlock","editorStore","jsx","_jsx","jsxs","_jsxs","useGlobalStyle","PostPreviewContainer","template","post","backgroundColor","postBlocks","type","id","templateBlocks","blocks","isEmpty","length","className","style","children","Async","PostPreviewView","item","settings","select","_getPostType$viewable","canUser","getPostType","getTemplateId","getEntityRecord","canViewTemplate","kind","name","_settings","getEditorSettings","supportsTemplateMode","isViewable","viewable","templateId","undefined","__unstableTemplate"],"sources":["@wordpress/editor/src/dataviews/fields/content-preview/content-preview-view.tsx"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tBlockPreview,\n\tprivateApis as blockEditorPrivateApis,\n\t// @ts-ignore\n} from '@wordpress/block-editor';\nimport type { BasePost } from '@wordpress/fields';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityBlockEditor, store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { EditorProvider } from '../../../components/provider';\nimport { unlock } from '../../../lock-unlock';\n// @ts-ignore\nimport { store as editorStore } from '../../../store';\n\nconst { useGlobalStyle } = unlock( blockEditorPrivateApis );\n\nfunction PostPreviewContainer( {\n\ttemplate,\n\tpost,\n}: {\n\ttemplate: any;\n\tpost: any;\n} ) {\n\tconst [ backgroundColor = 'white' ] = useGlobalStyle( 'color.background' );\n\tconst [ postBlocks ] = useEntityBlockEditor( 'postType', post.type, {\n\t\tid: post.id,\n\t} );\n\tconst [ templateBlocks ] = useEntityBlockEditor(\n\t\t'postType',\n\t\ttemplate?.type,\n\t\t{\n\t\t\tid: template?.id,\n\t\t}\n\t);\n\tconst blocks = template && templateBlocks ? templateBlocks : postBlocks;\n\tconst isEmpty = ! blocks?.length;\n\treturn (\n\t\t<div\n\t\t\tclassName=\"editor-fields-content-preview\"\n\t\t\tstyle={ {\n\t\t\t\tbackgroundColor,\n\t\t\t} }\n\t\t>\n\t\t\t{ isEmpty && (\n\t\t\t\t<span className=\"editor-fields-content-preview__empty\">\n\t\t\t\t\t{ __( 'Empty content' ) }\n\t\t\t\t</span>\n\t\t\t) }\n\t\t\t{ ! isEmpty && (\n\t\t\t\t<BlockPreview.Async>\n\t\t\t\t\t<BlockPreview blocks={ blocks } />\n\t\t\t\t</BlockPreview.Async>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nexport default function PostPreviewView( { item }: { item: BasePost } ) {\n\tconst { settings, template } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canUser, getPostType, getTemplateId, getEntityRecord } =\n\t\t\t\tunlock( select( coreStore ) );\n\t\t\tconst canViewTemplate = canUser( 'read', {\n\t\t\t\tkind: 'postType',\n\t\t\t\tname: 'wp_template',\n\t\t\t} );\n\t\t\tconst _settings = select( editorStore ).getEditorSettings();\n\t\t\t// @ts-ignore\n\t\t\tconst supportsTemplateMode = _settings.supportsTemplateMode;\n\t\t\tconst isViewable = getPostType( item.type )?.viewable ?? false;\n\n\t\t\tconst templateId =\n\t\t\t\tsupportsTemplateMode && isViewable && canViewTemplate\n\t\t\t\t\t? getTemplateId( item.type, item.id )\n\t\t\t\t\t: null;\n\t\t\treturn {\n\t\t\t\tsettings: _settings,\n\t\t\t\ttemplate: templateId\n\t\t\t\t\t? getEntityRecord( 'postType', 'wp_template', templateId )\n\t\t\t\t\t: undefined,\n\t\t\t};\n\t\t},\n\t\t[ item.type, item.id ]\n\t);\n\t// Wrap everything in a block editor provider to ensure 'styles' that are needed\n\t// for the previews are synced between the site editor store and the block editor store.\n\t// Additionally we need to have the `__experimentalBlockPatterns` setting in order to\n\t// render patterns inside the previews.\n\t// TODO: Same approach is used in the patterns list and it becomes obvious that some of\n\t// the block editor settings are needed in context where we don't have the block editor.\n\t// Explore how we can solve this in a better way.\n\treturn (\n\t\t<EditorProvider\n\t\t\tpost={ item }\n\t\t\tsettings={ settings }\n\t\t\t__unstableTemplate={ template }\n\t\t>\n\t\t\t<PostPreviewContainer template={ template } post={ item } />\n\t\t</EditorProvider>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}