{"version":3,"names":["__experimentalListView","ListView","privateApis","blockEditorPrivateApis","useFocusOnMount","useMergeRefs","useDispatch","useSelect","focus","useCallback","useRef","useState","__","_x","useShortcut","ESCAPE","ListViewOutline","unlock","store","editorStore","jsx","_jsx","TabbedSidebar","ListViewSidebar","setIsListViewOpened","getListViewToggleRef","focusOnMountRef","closeListView","current","closeOnEscape","event","keyCode","defaultPrevented","preventDefault","dropZoneElement","setDropZoneElement","tab","setTab","sidebarRef","tabsRef","listViewRef","listViewContainerRef","handleSidebarFocus","currentTab","tabPanelFocus","tabbable","find","listViewApplicationFocus","listViewFocusArea","contains","handleToggleListViewShortcut","ownerDocument","activeElement","className","onKeyDown","ref","children","tabs","name","title","panel","panelRef","onClose","onSelect","tabName","defaultTabId","closeButtonLabel"],"sources":["@wordpress/editor/src/components/list-view-sidebar/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalListView as ListView,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport { useFocusOnMount, useMergeRefs } from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { focus } from '@wordpress/dom';\nimport { useCallback, useRef, useState } from '@wordpress/element';\nimport { __, _x } from '@wordpress/i18n';\nimport { useShortcut } from '@wordpress/keyboard-shortcuts';\nimport { ESCAPE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport ListViewOutline from './list-view-outline';\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst { TabbedSidebar } = unlock( blockEditorPrivateApis );\n\nexport default function ListViewSidebar() {\n\tconst { setIsListViewOpened } = useDispatch( editorStore );\n\tconst { getListViewToggleRef } = unlock( useSelect( editorStore ) );\n\n\t// This hook handles focus when the sidebar first renders.\n\tconst focusOnMountRef = useFocusOnMount( 'firstElement' );\n\n\t// When closing the list view, focus should return to the toggle button.\n\tconst closeListView = useCallback( () => {\n\t\tsetIsListViewOpened( false );\n\t\tgetListViewToggleRef().current?.focus();\n\t}, [ getListViewToggleRef, setIsListViewOpened ] );\n\n\tconst closeOnEscape = useCallback(\n\t\t( event ) => {\n\t\t\tif ( event.keyCode === ESCAPE && ! event.defaultPrevented ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tcloseListView();\n\t\t\t}\n\t\t},\n\t\t[ closeListView ]\n\t);\n\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the dropZoneElement updates.\n\tconst [ dropZoneElement, setDropZoneElement ] = useState( null );\n\t// Tracks our current tab.\n\tconst [ tab, setTab ] = useState( 'list-view' );\n\n\t// This ref refers to the sidebar as a whole.\n\tconst sidebarRef = useRef();\n\t// This ref refers to the tab panel.\n\tconst tabsRef = useRef();\n\t// This ref refers to the list view application area.\n\tconst listViewRef = useRef();\n\n\t// Must merge the refs together so focus can be handled properly in the next function.\n\tconst listViewContainerRef = useMergeRefs( [\n\t\tfocusOnMountRef,\n\t\tlistViewRef,\n\t\tsetDropZoneElement,\n\t] );\n\n\t/*\n\t * Callback function to handle list view or outline focus.\n\t *\n\t * @param {string} currentTab The current tab. Either list view or outline.\n\t *\n\t * @return void\n\t */\n\tfunction handleSidebarFocus( currentTab ) {\n\t\t// Tab panel focus.\n\t\tconst tabPanelFocus = focus.tabbable.find( tabsRef.current )[ 0 ];\n\t\t// List view tab is selected.\n\t\tif ( currentTab === 'list-view' ) {\n\t\t\t// Either focus the list view or the tab panel. Must have a fallback because the list view does not render when there are no blocks.\n\t\t\tconst listViewApplicationFocus = focus.tabbable.find(\n\t\t\t\tlistViewRef.current\n\t\t\t)[ 0 ];\n\t\t\tconst listViewFocusArea = sidebarRef.current.contains(\n\t\t\t\tlistViewApplicationFocus\n\t\t\t)\n\t\t\t\t? listViewApplicationFocus\n\t\t\t\t: tabPanelFocus;\n\t\t\tlistViewFocusArea.focus();\n\t\t\t// Outline tab is selected.\n\t\t} else {\n\t\t\ttabPanelFocus.focus();\n\t\t}\n\t}\n\n\tconst handleToggleListViewShortcut = useCallback( () => {\n\t\t// If the sidebar has focus, it is safe to close.\n\t\tif (\n\t\t\tsidebarRef.current.contains(\n\t\t\t\tsidebarRef.current.ownerDocument.activeElement\n\t\t\t)\n\t\t) {\n\t\t\tcloseListView();\n\t\t} else {\n\t\t\t// If the list view or outline does not have focus, focus should be moved to it.\n\t\t\thandleSidebarFocus( tab );\n\t\t}\n\t}, [ closeListView, tab ] );\n\n\t// This only fires when the sidebar is open because of the conditional rendering.\n\t// It is the same shortcut to open but that is defined as a global shortcut and only fires when the sidebar is closed.\n\tuseShortcut( 'core/editor/toggle-list-view', handleToggleListViewShortcut );\n\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t<div\n\t\t\tclassName=\"editor-list-view-sidebar\"\n\t\t\tonKeyDown={ closeOnEscape }\n\t\t\tref={ sidebarRef }\n\t\t>\n\t\t\t<TabbedSidebar\n\t\t\t\ttabs={ [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'list-view',\n\t\t\t\t\t\ttitle: _x( 'List View', 'Post overview' ),\n\t\t\t\t\t\tpanel: (\n\t\t\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-container\">\n\t\t\t\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-panel-content\">\n\t\t\t\t\t\t\t\t\t<ListView\n\t\t\t\t\t\t\t\t\t\tdropZoneElement={ dropZoneElement }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpanelRef: listViewContainerRef,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'outline',\n\t\t\t\t\t\ttitle: _x( 'Outline', 'Post overview' ),\n\t\t\t\t\t\tpanel: (\n\t\t\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-container\">\n\t\t\t\t\t\t\t\t<ListViewOutline />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t\tonClose={ closeListView }\n\t\t\t\tonSelect={ ( tabName ) => setTab( tabName ) }\n\t\t\t\tdefaultTabId=\"list-view\"\n\t\t\t\tref={ tabsRef }\n\t\t\t\tcloseButtonLabel={ __( 'Close' ) }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}