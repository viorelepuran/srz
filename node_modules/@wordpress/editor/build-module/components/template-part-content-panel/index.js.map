{"version":3,"names":["useSelect","useMemo","store","blocksStore","blockEditorStore","privateApis","blockEditorPrivateApis","PanelBody","__","unlock","TEMPLATE_PART_POST_TYPE","editorStore","jsx","_jsx","BlockQuickNavigation","TemplatePartContentPanelInner","blockTypes","select","getBlockTypes","themeBlockNames","filter","blockType","category","map","name","themeBlocks","getBlocksByName","length","title","children","clientIds","TemplatePartContentPanel","postType","getCurrentPostType"],"sources":["@wordpress/editor/src/components/template-part-content-panel/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { store as blocksStore } from '@wordpress/blocks';\nimport {\n\tstore as blockEditorStore,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport { PanelBody } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { TEMPLATE_PART_POST_TYPE } from '../../store/constants';\nimport { store as editorStore } from '../../store';\n\nconst { BlockQuickNavigation } = unlock( blockEditorPrivateApis );\n\nfunction TemplatePartContentPanelInner() {\n\tconst blockTypes = useSelect( ( select ) => {\n\t\tconst { getBlockTypes } = select( blocksStore );\n\t\treturn getBlockTypes();\n\t}, [] );\n\tconst themeBlockNames = useMemo( () => {\n\t\treturn blockTypes\n\t\t\t.filter( ( blockType ) => {\n\t\t\t\treturn blockType.category === 'theme';\n\t\t\t} )\n\t\t\t.map( ( { name } ) => name );\n\t}, [ blockTypes ] );\n\tconst themeBlocks = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlocksByName } = select( blockEditorStore );\n\t\t\treturn getBlocksByName( themeBlockNames );\n\t\t},\n\t\t[ themeBlockNames ]\n\t);\n\tif ( themeBlocks.length === 0 ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<PanelBody title={ __( 'Content' ) }>\n\t\t\t<BlockQuickNavigation clientIds={ themeBlocks } />\n\t\t</PanelBody>\n\t);\n}\n\nexport default function TemplatePartContentPanel() {\n\tconst postType = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType } = select( editorStore );\n\t\treturn getCurrentPostType();\n\t}, [] );\n\tif ( postType !== TEMPLATE_PART_POST_TYPE ) {\n\t\treturn null;\n\t}\n\n\treturn <TemplatePartContentPanelInner />;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,KAAK,IAAIC,WAAW,QAAQ,mBAAmB;AACxD,SACCD,KAAK,IAAIE,gBAAgB,EACzBC,WAAW,IAAIC,sBAAsB,QAC/B,yBAAyB;AAChC,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,EAAE,QAAQ,iBAAiB;;AAEpC;AACA;AACA;AACA,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,uBAAuB,QAAQ,uBAAuB;AAC/D,SAASR,KAAK,IAAIS,WAAW,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEnD,MAAM;EAAEC;AAAqB,CAAC,GAAGL,MAAM,CAAEH,sBAAuB,CAAC;AAEjE,SAASS,6BAA6BA,CAAA,EAAG;EACxC,MAAMC,UAAU,GAAGhB,SAAS,CAAIiB,MAAM,IAAM;IAC3C,MAAM;MAAEC;IAAc,CAAC,GAAGD,MAAM,CAAEd,WAAY,CAAC;IAC/C,OAAOe,aAAa,CAAC,CAAC;EACvB,CAAC,EAAE,EAAG,CAAC;EACP,MAAMC,eAAe,GAAGlB,OAAO,CAAE,MAAM;IACtC,OAAOe,UAAU,CACfI,MAAM,CAAIC,SAAS,IAAM;MACzB,OAAOA,SAAS,CAACC,QAAQ,KAAK,OAAO;IACtC,CAAE,CAAC,CACFC,GAAG,CAAE,CAAE;MAAEC;IAAK,CAAC,KAAMA,IAAK,CAAC;EAC9B,CAAC,EAAE,CAAER,UAAU,CAAG,CAAC;EACnB,MAAMS,WAAW,GAAGzB,SAAS,CAC1BiB,MAAM,IAAM;IACb,MAAM;MAAES;IAAgB,CAAC,GAAGT,MAAM,CAAEb,gBAAiB,CAAC;IACtD,OAAOsB,eAAe,CAAEP,eAAgB,CAAC;EAC1C,CAAC,EACD,CAAEA,eAAe,CAClB,CAAC;EACD,IAAKM,WAAW,CAACE,MAAM,KAAK,CAAC,EAAG;IAC/B,OAAO,IAAI;EACZ;EACA,oBACCd,IAAA,CAACN,SAAS;IAACqB,KAAK,EAAGpB,EAAE,CAAE,SAAU,CAAG;IAAAqB,QAAA,eACnChB,IAAA,CAACC,oBAAoB;MAACgB,SAAS,EAAGL;IAAa,CAAE;EAAC,CACxC,CAAC;AAEd;AAEA,eAAe,SAASM,wBAAwBA,CAAA,EAAG;EAClD,MAAMC,QAAQ,GAAGhC,SAAS,CAAIiB,MAAM,IAAM;IACzC,MAAM;MAAEgB;IAAmB,CAAC,GAAGhB,MAAM,CAAEN,WAAY,CAAC;IACpD,OAAOsB,kBAAkB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAG,CAAC;EACP,IAAKD,QAAQ,KAAKtB,uBAAuB,EAAG;IAC3C,OAAO,IAAI;EACZ;EAEA,oBAAOG,IAAA,CAACE,6BAA6B,IAAE,CAAC;AACzC","ignoreList":[]}