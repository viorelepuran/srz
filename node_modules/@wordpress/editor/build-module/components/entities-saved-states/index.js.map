{"version":3,"names":["clsx","Button","Flex","FlexItem","__","_n","sprintf","useCallback","useRef","createInterpolateElement","__experimentalUseDialog","useDialog","useInstanceId","useDispatch","EntityTypeList","useIsDirty","store","editorStore","unlock","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","identity","values","EntitiesSavedStates","close","renderDialog","variant","isDirtyProps","EntitiesSavedStatesExtensible","additionalPrompt","undefined","onSave","saveEnabled","saveEnabledProp","saveLabel","dirtyEntityRecords","isDirty","setUnselectedEntities","unselectedEntities","saveButtonRef","saveDirtyEntities","partitionedSavables","reduce","acc","record","name","push","site","siteSavables","wp_template","templateSavables","wp_template_part","templatePartSavables","contentSavables","sortedPartitionedSavables","Object","filter","Array","isArray","dismissPanel","saveDialogRef","saveDialogProps","onClose","dialogLabelId","dialogDescriptionId","selectItemsToSaveDescription","length","isInline","actionButtons","children","isBlock","as","size","onClick","ref","disabled","accessibleWhenDisabled","entitiesToSkip","className","role","gap","id","strong","map","list","direction","justify"],"sources":["@wordpress/editor/src/components/entities-saved-states/index.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { Button, Flex, FlexItem } from '@wordpress/components';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport {\n\tuseCallback,\n\tuseRef,\n\tcreateInterpolateElement,\n} from '@wordpress/element';\nimport {\n\t__experimentalUseDialog as useDialog,\n\tuseInstanceId,\n} from '@wordpress/compose';\nimport { useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport EntityTypeList from './entity-type-list';\nimport { useIsDirty } from './hooks/use-is-dirty';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nfunction identity( values ) {\n\treturn values;\n}\n\n/**\n * Renders the component for managing saved states of entities.\n *\n * @param {Object}   props              The component props.\n * @param {Function} props.close        The function to close the dialog.\n * @param {boolean}  props.renderDialog Whether to render the component with modal dialog behavior.\n * @param {string}   props.variant      Changes the layout of the component. When an `inline` value is provided, the action buttons are rendered at the end of the component instead of at the start.\n *\n * @return {React.ReactNode} The rendered component.\n */\nexport default function EntitiesSavedStates( {\n\tclose,\n\trenderDialog,\n\tvariant,\n} ) {\n\tconst isDirtyProps = useIsDirty();\n\treturn (\n\t\t<EntitiesSavedStatesExtensible\n\t\t\tclose={ close }\n\t\t\trenderDialog={ renderDialog }\n\t\t\tvariant={ variant }\n\t\t\t{ ...isDirtyProps }\n\t\t/>\n\t);\n}\n\n/**\n * Renders a panel for saving entities with dirty records.\n *\n * @param {Object}   props                       The component props.\n * @param {string}   props.additionalPrompt      Additional prompt to display.\n * @param {Function} props.close                 Function to close the panel.\n * @param {Function} props.onSave                Function to call when saving entities.\n * @param {boolean}  props.saveEnabled           Flag indicating if save is enabled.\n * @param {string}   props.saveLabel             Label for the save button.\n * @param {boolean}  props.renderDialog          Whether to render the component with modal dialog behavior.\n * @param {Array}    props.dirtyEntityRecords    Array of dirty entity records.\n * @param {boolean}  props.isDirty               Flag indicating if there are dirty entities.\n * @param {Function} props.setUnselectedEntities Function to set unselected entities.\n * @param {Array}    props.unselectedEntities    Array of unselected entities.\n * @param {string}   props.variant               Changes the layout of the component. When an `inline` value is provided, the action buttons are rendered at the end of the component instead of at the start.\n *\n * @return {React.ReactNode} The rendered component.\n */\nexport function EntitiesSavedStatesExtensible( {\n\tadditionalPrompt = undefined,\n\tclose,\n\tonSave = identity,\n\tsaveEnabled: saveEnabledProp = undefined,\n\tsaveLabel = __( 'Save' ),\n\trenderDialog,\n\tdirtyEntityRecords,\n\tisDirty,\n\tsetUnselectedEntities,\n\tunselectedEntities,\n\tvariant = 'default',\n} ) {\n\tconst saveButtonRef = useRef();\n\tconst { saveDirtyEntities } = unlock( useDispatch( editorStore ) );\n\t// To group entities by type.\n\tconst partitionedSavables = dirtyEntityRecords.reduce( ( acc, record ) => {\n\t\tconst { name } = record;\n\t\tif ( ! acc[ name ] ) {\n\t\t\tacc[ name ] = [];\n\t\t}\n\t\tacc[ name ].push( record );\n\t\treturn acc;\n\t}, {} );\n\n\t// Sort entity groups.\n\tconst {\n\t\tsite: siteSavables,\n\t\twp_template: templateSavables,\n\t\twp_template_part: templatePartSavables,\n\t\t...contentSavables\n\t} = partitionedSavables;\n\tconst sortedPartitionedSavables = [\n\t\tsiteSavables,\n\t\ttemplateSavables,\n\t\ttemplatePartSavables,\n\t\t...Object.values( contentSavables ),\n\t].filter( Array.isArray );\n\n\tconst saveEnabled = saveEnabledProp ?? isDirty;\n\t// Explicitly define this with no argument passed.  Using `close` on\n\t// its own will use the event object in place of the expected saved entities.\n\tconst dismissPanel = useCallback( () => close(), [ close ] );\n\n\tconst [ saveDialogRef, saveDialogProps ] = useDialog( {\n\t\tonClose: () => dismissPanel(),\n\t} );\n\tconst dialogLabelId = useInstanceId(\n\t\tEntitiesSavedStatesExtensible,\n\t\t'entities-saved-states__panel-label'\n\t);\n\tconst dialogDescriptionId = useInstanceId(\n\t\tEntitiesSavedStatesExtensible,\n\t\t'entities-saved-states__panel-description'\n\t);\n\n\tconst selectItemsToSaveDescription = !! dirtyEntityRecords.length\n\t\t? __( 'Select the items you want to save.' )\n\t\t: undefined;\n\n\tconst isInline = variant === 'inline';\n\n\tconst actionButtons = (\n\t\t<>\n\t\t\t<FlexItem\n\t\t\t\tisBlock={ isInline ? false : true }\n\t\t\t\tas={ Button }\n\t\t\t\tvariant={ isInline ? 'tertiary' : 'secondary' }\n\t\t\t\tsize={ isInline ? undefined : 'compact' }\n\t\t\t\tonClick={ dismissPanel }\n\t\t\t>\n\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t</FlexItem>\n\t\t\t<FlexItem\n\t\t\t\tisBlock={ isInline ? false : true }\n\t\t\t\tas={ Button }\n\t\t\t\tref={ saveButtonRef }\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tsize={ isInline ? undefined : 'compact' }\n\t\t\t\tdisabled={ ! saveEnabled }\n\t\t\t\taccessibleWhenDisabled\n\t\t\t\tonClick={ () =>\n\t\t\t\t\tsaveDirtyEntities( {\n\t\t\t\t\t\tonSave,\n\t\t\t\t\t\tdirtyEntityRecords,\n\t\t\t\t\t\tentitiesToSkip: unselectedEntities,\n\t\t\t\t\t\tclose,\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t\tclassName=\"editor-entities-saved-states__save-button\"\n\t\t\t>\n\t\t\t\t{ saveLabel }\n\t\t\t</FlexItem>\n\t\t</>\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tref={ renderDialog ? saveDialogRef : undefined }\n\t\t\t{ ...( renderDialog && saveDialogProps ) }\n\t\t\tclassName={ clsx( 'entities-saved-states__panel', {\n\t\t\t\t'is-inline': isInline,\n\t\t\t} ) }\n\t\t\trole={ renderDialog ? 'dialog' : undefined }\n\t\t\taria-labelledby={ renderDialog ? dialogLabelId : undefined }\n\t\t\taria-describedby={ renderDialog ? dialogDescriptionId : undefined }\n\t\t>\n\t\t\t{ ! isInline && (\n\t\t\t\t<Flex className=\"entities-saved-states__panel-header\" gap={ 2 }>\n\t\t\t\t\t{ actionButtons }\n\t\t\t\t</Flex>\n\t\t\t) }\n\n\t\t\t<div className=\"entities-saved-states__text-prompt\">\n\t\t\t\t<div className=\"entities-saved-states__text-prompt--header-wrapper\">\n\t\t\t\t\t<strong\n\t\t\t\t\t\tid={ renderDialog ? dialogLabelId : undefined }\n\t\t\t\t\t\tclassName=\"entities-saved-states__text-prompt--header\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Are you ready to save?' ) }\n\t\t\t\t\t</strong>\n\t\t\t\t</div>\n\t\t\t\t<div id={ renderDialog ? dialogDescriptionId : undefined }>\n\t\t\t\t\t{ additionalPrompt }\n\t\t\t\t\t<p className=\"entities-saved-states__text-prompt--changes-count\">\n\t\t\t\t\t\t{ isDirty\n\t\t\t\t\t\t\t? createInterpolateElement(\n\t\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t\t/* translators: %d: number of site changes waiting to be saved. */\n\t\t\t\t\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t\t\t\t\t'There is <strong>%d site change</strong> waiting to be saved.',\n\t\t\t\t\t\t\t\t\t\t\t'There are <strong>%d site changes</strong> waiting to be saved.',\n\t\t\t\t\t\t\t\t\t\t\tdirtyEntityRecords.length\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tdirtyEntityRecords.length\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t{ strong: <strong /> }\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: selectItemsToSaveDescription }\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{ sortedPartitionedSavables.map( ( list ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<EntityTypeList\n\t\t\t\t\t\tkey={ list[ 0 ].name }\n\t\t\t\t\t\tlist={ list }\n\t\t\t\t\t\tunselectedEntities={ unselectedEntities }\n\t\t\t\t\t\tsetUnselectedEntities={ setUnselectedEntities }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} ) }\n\n\t\t\t{ isInline && (\n\t\t\t\t<Flex\n\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\tclassName=\"entities-saved-states__panel-footer\"\n\t\t\t\t>\n\t\t\t\t\t{ actionButtons }\n\t\t\t\t</Flex>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}