{"version":3,"names":["__","_x","sprintf","isRTL","getSettings","getDate","dateI18n","useSelect","store","editorStore","PostScheduleLabel","props","usePostScheduleLabel","full","date","isFloating","select","getEditedPostAttribute","isEditedPostDateFloating","getFullPostScheduleLabel","getPostScheduleLabel","dateAttribute","timezoneAbbreviation","getTimezoneAbbreviation","formattedDate","now","Date","isTimezoneSameAsSiteTimezone","isSameDay","tomorrow","setDate","getFullYear","timezone","abbr","isNaN","Number","symbol","offset","offsetFormatted","siteOffset","dateOffset","getTimezoneOffset","left","right","getMonth"],"sources":["@wordpress/editor/src/components/post-schedule/label.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x, sprintf, isRTL } from '@wordpress/i18n';\nimport { getSettings, getDate, dateI18n } from '@wordpress/date';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the PostScheduleLabel component.\n *\n * @param {Object} props Props.\n *\n * @return {React.ReactNode} The rendered component.\n */\nexport default function PostScheduleLabel( props ) {\n\treturn usePostScheduleLabel( props );\n}\n\n/**\n * Custom hook to get the label for post schedule.\n *\n * @param {Object}  options      Options for the hook.\n * @param {boolean} options.full Whether to get the full label or not. Default is false.\n *\n * @return {string} The label for post schedule.\n */\nexport function usePostScheduleLabel( { full = false } = {} ) {\n\tconst { date, isFloating } = useSelect(\n\t\t( select ) => ( {\n\t\t\tdate: select( editorStore ).getEditedPostAttribute( 'date' ),\n\t\t\tisFloating: select( editorStore ).isEditedPostDateFloating(),\n\t\t} ),\n\t\t[]\n\t);\n\n\treturn full\n\t\t? getFullPostScheduleLabel( date )\n\t\t: getPostScheduleLabel( date, { isFloating } );\n}\n\nexport function getFullPostScheduleLabel( dateAttribute ) {\n\tconst date = getDate( dateAttribute );\n\n\tconst timezoneAbbreviation = getTimezoneAbbreviation();\n\tconst formattedDate = dateI18n(\n\t\t// translators: Use a non-breaking space between 'g:i' and 'a' if appropriate.\n\t\t_x( 'F j, Y g:i\\xa0a', 'post schedule full date format' ),\n\t\tdate\n\t);\n\treturn isRTL()\n\t\t? `${ timezoneAbbreviation } ${ formattedDate }`\n\t\t: `${ formattedDate } ${ timezoneAbbreviation }`;\n}\n\nexport function getPostScheduleLabel(\n\tdateAttribute,\n\t{ isFloating = false, now = new Date() } = {}\n) {\n\tif ( ! dateAttribute || isFloating ) {\n\t\treturn __( 'Immediately' );\n\t}\n\n\t// If the user timezone does not equal the site timezone then using words\n\t// like 'tomorrow' is confusing, so show the full date.\n\tif ( ! isTimezoneSameAsSiteTimezone( now ) ) {\n\t\treturn getFullPostScheduleLabel( dateAttribute );\n\t}\n\n\tconst date = getDate( dateAttribute );\n\n\tif ( isSameDay( date, now ) ) {\n\t\treturn sprintf(\n\t\t\t// translators: %s: Time of day the post is scheduled for.\n\t\t\t__( 'Today at %s' ),\n\t\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t\tdateI18n( _x( 'g:i\\xa0a', 'post schedule time format' ), date )\n\t\t);\n\t}\n\n\tconst tomorrow = new Date( now );\n\ttomorrow.setDate( tomorrow.getDate() + 1 );\n\n\tif ( isSameDay( date, tomorrow ) ) {\n\t\treturn sprintf(\n\t\t\t// translators: %s: Time of day the post is scheduled for.\n\t\t\t__( 'Tomorrow at %s' ),\n\t\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t\tdateI18n( _x( 'g:i\\xa0a', 'post schedule time format' ), date )\n\t\t);\n\t}\n\n\tif ( date.getFullYear() === now.getFullYear() ) {\n\t\treturn dateI18n(\n\t\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t\t_x( 'F j g:i\\xa0a', 'post schedule date format without year' ),\n\t\t\tdate\n\t\t);\n\t}\n\n\treturn dateI18n(\n\t\t// translators: Use a non-breaking space between 'g:i' and 'a' if appropriate.\n\t\t_x( 'F j, Y g:i\\xa0a', 'post schedule full date format' ),\n\t\tdate\n\t);\n}\n\nfunction getTimezoneAbbreviation() {\n\tconst { timezone } = getSettings();\n\n\tif ( timezone.abbr && isNaN( Number( timezone.abbr ) ) ) {\n\t\treturn timezone.abbr;\n\t}\n\n\tconst symbol = timezone.offset < 0 ? '' : '+';\n\treturn `UTC${ symbol }${ timezone.offsetFormatted }`;\n}\n\nfunction isTimezoneSameAsSiteTimezone( date ) {\n\tconst { timezone } = getSettings();\n\n\tconst siteOffset = Number( timezone.offset );\n\tconst dateOffset = -1 * ( date.getTimezoneOffset() / 60 );\n\treturn siteOffset === dateOffset;\n}\n\nfunction isSameDay( left, right ) {\n\treturn (\n\t\tleft.getDate() === right.getDate() &&\n\t\tleft.getMonth() === right.getMonth() &&\n\t\tleft.getFullYear() === right.getFullYear()\n\t);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,KAAK,QAAQ,iBAAiB;AACxD,SAASC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,iBAAiB;AAChE,SAASC,SAAS,QAAQ,iBAAiB;;AAE3C;AACA;AACA;AACA,SAASC,KAAK,IAAIC,WAAW,QAAQ,aAAa;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,iBAAiBA,CAAEC,KAAK,EAAG;EAClD,OAAOC,oBAAoB,CAAED,KAAM,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAAE;EAAEC,IAAI,GAAG;AAAM,CAAC,GAAG,CAAC,CAAC,EAAG;EAC7D,MAAM;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGR,SAAS,CACnCS,MAAM,KAAQ;IACfF,IAAI,EAAEE,MAAM,CAAEP,WAAY,CAAC,CAACQ,sBAAsB,CAAE,MAAO,CAAC;IAC5DF,UAAU,EAAEC,MAAM,CAAEP,WAAY,CAAC,CAACS,wBAAwB,CAAC;EAC5D,CAAC,CAAE,EACH,EACD,CAAC;EAED,OAAOL,IAAI,GACRM,wBAAwB,CAAEL,IAAK,CAAC,GAChCM,oBAAoB,CAAEN,IAAI,EAAE;IAAEC;EAAW,CAAE,CAAC;AAChD;AAEA,OAAO,SAASI,wBAAwBA,CAAEE,aAAa,EAAG;EACzD,MAAMP,IAAI,GAAGT,OAAO,CAAEgB,aAAc,CAAC;EAErC,MAAMC,oBAAoB,GAAGC,uBAAuB,CAAC,CAAC;EACtD,MAAMC,aAAa,GAAGlB,QAAQ;EAC7B;EACAL,EAAE,CAAE,iBAAiB,EAAE,gCAAiC,CAAC,EACzDa,IACD,CAAC;EACD,OAAOX,KAAK,CAAC,CAAC,GACX,GAAImB,oBAAoB,IAAME,aAAa,EAAG,GAC9C,GAAIA,aAAa,IAAMF,oBAAoB,EAAG;AAClD;AAEA,OAAO,SAASF,oBAAoBA,CACnCC,aAAa,EACb;EAAEN,UAAU,GAAG,KAAK;EAAEU,GAAG,GAAG,IAAIC,IAAI,CAAC;AAAE,CAAC,GAAG,CAAC,CAAC,EAC5C;EACD,IAAK,CAAEL,aAAa,IAAIN,UAAU,EAAG;IACpC,OAAOf,EAAE,CAAE,aAAc,CAAC;EAC3B;;EAEA;EACA;EACA,IAAK,CAAE2B,4BAA4B,CAAEF,GAAI,CAAC,EAAG;IAC5C,OAAON,wBAAwB,CAAEE,aAAc,CAAC;EACjD;EAEA,MAAMP,IAAI,GAAGT,OAAO,CAAEgB,aAAc,CAAC;EAErC,IAAKO,SAAS,CAAEd,IAAI,EAAEW,GAAI,CAAC,EAAG;IAC7B,OAAOvB,OAAO;IACb;IACAF,EAAE,CAAE,aAAc,CAAC;IACnB;IACAM,QAAQ,CAAEL,EAAE,CAAE,UAAU,EAAE,2BAA4B,CAAC,EAAEa,IAAK,CAC/D,CAAC;EACF;EAEA,MAAMe,QAAQ,GAAG,IAAIH,IAAI,CAAED,GAAI,CAAC;EAChCI,QAAQ,CAACC,OAAO,CAAED,QAAQ,CAACxB,OAAO,CAAC,CAAC,GAAG,CAAE,CAAC;EAE1C,IAAKuB,SAAS,CAAEd,IAAI,EAAEe,QAAS,CAAC,EAAG;IAClC,OAAO3B,OAAO;IACb;IACAF,EAAE,CAAE,gBAAiB,CAAC;IACtB;IACAM,QAAQ,CAAEL,EAAE,CAAE,UAAU,EAAE,2BAA4B,CAAC,EAAEa,IAAK,CAC/D,CAAC;EACF;EAEA,IAAKA,IAAI,CAACiB,WAAW,CAAC,CAAC,KAAKN,GAAG,CAACM,WAAW,CAAC,CAAC,EAAG;IAC/C,OAAOzB,QAAQ;IACd;IACAL,EAAE,CAAE,cAAc,EAAE,wCAAyC,CAAC,EAC9Da,IACD,CAAC;EACF;EAEA,OAAOR,QAAQ;EACd;EACAL,EAAE,CAAE,iBAAiB,EAAE,gCAAiC,CAAC,EACzDa,IACD,CAAC;AACF;AAEA,SAASS,uBAAuBA,CAAA,EAAG;EAClC,MAAM;IAAES;EAAS,CAAC,GAAG5B,WAAW,CAAC,CAAC;EAElC,IAAK4B,QAAQ,CAACC,IAAI,IAAIC,KAAK,CAAEC,MAAM,CAAEH,QAAQ,CAACC,IAAK,CAAE,CAAC,EAAG;IACxD,OAAOD,QAAQ,CAACC,IAAI;EACrB;EAEA,MAAMG,MAAM,GAAGJ,QAAQ,CAACK,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG;EAC7C,OAAO,MAAOD,MAAM,GAAKJ,QAAQ,CAACM,eAAe,EAAG;AACrD;AAEA,SAASX,4BAA4BA,CAAEb,IAAI,EAAG;EAC7C,MAAM;IAAEkB;EAAS,CAAC,GAAG5B,WAAW,CAAC,CAAC;EAElC,MAAMmC,UAAU,GAAGJ,MAAM,CAAEH,QAAQ,CAACK,MAAO,CAAC;EAC5C,MAAMG,UAAU,GAAG,CAAC,CAAC,IAAK1B,IAAI,CAAC2B,iBAAiB,CAAC,CAAC,GAAG,EAAE,CAAE;EACzD,OAAOF,UAAU,KAAKC,UAAU;AACjC;AAEA,SAASZ,SAASA,CAAEc,IAAI,EAAEC,KAAK,EAAG;EACjC,OACCD,IAAI,CAACrC,OAAO,CAAC,CAAC,KAAKsC,KAAK,CAACtC,OAAO,CAAC,CAAC,IAClCqC,IAAI,CAACE,QAAQ,CAAC,CAAC,KAAKD,KAAK,CAACC,QAAQ,CAAC,CAAC,IACpCF,IAAI,CAACX,WAAW,CAAC,CAAC,KAAKY,KAAK,CAACZ,WAAW,CAAC,CAAC;AAE5C","ignoreList":[]}