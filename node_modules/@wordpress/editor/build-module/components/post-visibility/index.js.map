{"version":3,"names":["__","useState","TextControl","RadioControl","__experimentalVStack","VStack","useInstanceId","useSelect","useDispatch","__experimentalInspectorPopoverHeader","InspectorPopoverHeader","VISIBILITY_OPTIONS","store","editorStore","jsx","_jsx","jsxs","_jsxs","PostVisibility","onClose","instanceId","status","visibility","password","select","getEditedPostAttribute","getEditedPostVisibility","editPost","hasPassword","setHasPassword","updateVisibility","value","nextValues","public","private","updatePassword","className","children","title","help","spacing","label","hideLabelFromVision","options","selected","onChange","placeholder","type","id","__next40pxDefaultSize","__nextHasNoMarginBottom","maxLength"],"sources":["@wordpress/editor/src/components/post-visibility/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport {\n\tTextControl,\n\tRadioControl,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { VISIBILITY_OPTIONS } from './utils';\nimport { store as editorStore } from '../../store';\n\n/**\n * Allows users to set the visibility of a post.\n *\n * @param {Object}   props         The component props.\n * @param {Function} props.onClose Function to call when the popover is closed.\n * @return {React.ReactNode} The rendered component.\n */\nexport default function PostVisibility( { onClose } ) {\n\tconst instanceId = useInstanceId( PostVisibility );\n\n\tconst { status, visibility, password } = useSelect( ( select ) => ( {\n\t\tstatus: select( editorStore ).getEditedPostAttribute( 'status' ),\n\t\tvisibility: select( editorStore ).getEditedPostVisibility(),\n\t\tpassword: select( editorStore ).getEditedPostAttribute( 'password' ),\n\t} ) );\n\n\tconst { editPost } = useDispatch( editorStore );\n\n\tconst [ hasPassword, setHasPassword ] = useState( !! password );\n\n\tfunction updateVisibility( value ) {\n\t\tconst nextValues = {\n\t\t\tpublic: {\n\t\t\t\tstatus: visibility === 'private' ? 'draft' : status,\n\t\t\t\tpassword: '',\n\t\t\t},\n\t\t\tprivate: { status: 'private', password: '' },\n\t\t\tpassword: {\n\t\t\t\tstatus: visibility === 'private' ? 'draft' : status,\n\t\t\t\tpassword: password || '',\n\t\t\t},\n\t\t};\n\n\t\teditPost( nextValues[ value ] );\n\t\tsetHasPassword( value === 'password' );\n\t}\n\n\tconst updatePassword = ( value ) => {\n\t\teditPost( { password: value } );\n\t};\n\n\treturn (\n\t\t<div className=\"editor-post-visibility\">\n\t\t\t<InspectorPopoverHeader\n\t\t\t\ttitle={ __( 'Visibility' ) }\n\t\t\t\thelp={ __( 'Control how this post is viewed.' ) }\n\t\t\t\tonClose={ onClose }\n\t\t\t/>\n\t\t\t<VStack spacing={ 4 }>\n\t\t\t\t<RadioControl\n\t\t\t\t\tlabel={ __( 'Visibility' ) }\n\t\t\t\t\thideLabelFromVision\n\t\t\t\t\toptions={ VISIBILITY_OPTIONS }\n\t\t\t\t\tselected={ hasPassword ? 'password' : visibility }\n\t\t\t\t\tonChange={ updateVisibility }\n\t\t\t\t/>\n\t\t\t\t{ hasPassword && (\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'Password' ) }\n\t\t\t\t\t\tonChange={ updatePassword }\n\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\tplaceholder={ __( 'Use a secure password' ) }\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid={ `editor-post-visibility__password-input-${ instanceId }` }\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tmaxLength={ 255 }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</VStack>\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}