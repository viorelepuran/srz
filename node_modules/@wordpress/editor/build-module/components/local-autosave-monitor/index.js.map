{"version":3,"names":["useCallback","useEffect","useRef","ifCondition","usePrevious","useSelect","useDispatch","__","parse","store","noticesStore","AutosaveMonitor","localAutosaveGet","localAutosaveClear","editorStore","jsx","_jsx","requestIdleCallback","window","requestAnimationFrame","hasStorageSupport","hasSessionStorageSupport","undefined","sessionStorage","setItem","removeItem","useAutosaveNotice","postId","isEditedPostNew","hasRemoteAutosave","select","getCurrentPostId","getEditorSettings","autosave","getEditedPostAttribute","createWarningNotice","removeNotice","editPost","resetEditorBlocks","localAutosave","JSON","post_title","title","content","excerpt","edits","hasDifference","Object","keys","some","key","id","actions","label","onClick","editsContent","editsWithoutContent","useAutosavePurge","isDirty","isAutosaving","didError","isEditedPostDirty","isAutosavingPost","didPostSaveRequestFail","lastIsDirtyRef","lastIsAutosavingRef","current","wasEditedPostNew","prevPostId","LocalAutosaveMonitor","deferredAutosave","local","localAutosaveInterval","interval"],"sources":["@wordpress/editor/src/components/local-autosave-monitor/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useCallback, useEffect, useRef } from '@wordpress/element';\nimport { ifCondition, usePrevious } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { parse } from '@wordpress/blocks';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport AutosaveMonitor from '../autosave-monitor';\nimport {\n\tlocalAutosaveGet,\n\tlocalAutosaveClear,\n} from '../../store/local-autosave';\nimport { store as editorStore } from '../../store';\n\nconst requestIdleCallback = window.requestIdleCallback\n\t? window.requestIdleCallback\n\t: window.requestAnimationFrame;\n\nlet hasStorageSupport;\n\n/**\n * Function which returns true if the current environment supports browser\n * sessionStorage, or false otherwise. The result of this function is cached and\n * reused in subsequent invocations.\n */\nconst hasSessionStorageSupport = () => {\n\tif ( hasStorageSupport !== undefined ) {\n\t\treturn hasStorageSupport;\n\t}\n\n\ttry {\n\t\t// Private Browsing in Safari 10 and earlier will throw an error when\n\t\t// attempting to set into sessionStorage. The test here is intentional in\n\t\t// causing a thrown error as condition bailing from local autosave.\n\t\twindow.sessionStorage.setItem( '__wpEditorTestSessionStorage', '' );\n\t\twindow.sessionStorage.removeItem( '__wpEditorTestSessionStorage' );\n\t\thasStorageSupport = true;\n\t} catch {\n\t\thasStorageSupport = false;\n\t}\n\n\treturn hasStorageSupport;\n};\n\n/**\n * Custom hook which manages the creation of a notice prompting the user to\n * restore a local autosave, if one exists.\n */\nfunction useAutosaveNotice() {\n\tconst { postId, isEditedPostNew, hasRemoteAutosave } = useSelect(\n\t\t( select ) => ( {\n\t\t\tpostId: select( editorStore ).getCurrentPostId(),\n\t\t\tisEditedPostNew: select( editorStore ).isEditedPostNew(),\n\t\t\thasRemoteAutosave:\n\t\t\t\t!! select( editorStore ).getEditorSettings().autosave,\n\t\t} ),\n\t\t[]\n\t);\n\tconst { getEditedPostAttribute } = useSelect( editorStore );\n\n\tconst { createWarningNotice, removeNotice } = useDispatch( noticesStore );\n\tconst { editPost, resetEditorBlocks } = useDispatch( editorStore );\n\n\tuseEffect( () => {\n\t\tlet localAutosave = localAutosaveGet( postId, isEditedPostNew );\n\t\tif ( ! localAutosave ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tlocalAutosave = JSON.parse( localAutosave );\n\t\t} catch {\n\t\t\t// Not usable if it can't be parsed.\n\t\t\treturn;\n\t\t}\n\n\t\tconst { post_title: title, content, excerpt } = localAutosave;\n\t\tconst edits = { title, content, excerpt };\n\n\t\t{\n\t\t\t// Only display a notice if there is a difference between what has been\n\t\t\t// saved and that which is stored in sessionStorage.\n\t\t\tconst hasDifference = Object.keys( edits ).some( ( key ) => {\n\t\t\t\treturn edits[ key ] !== getEditedPostAttribute( key );\n\t\t\t} );\n\n\t\t\tif ( ! hasDifference ) {\n\t\t\t\t// If there is no difference, it can be safely ejected from storage.\n\t\t\t\tlocalAutosaveClear( postId, isEditedPostNew );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( hasRemoteAutosave ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = 'wpEditorAutosaveRestore';\n\n\t\tcreateWarningNotice(\n\t\t\t__(\n\t\t\t\t'The backup of this post in your browser is different from the version below.'\n\t\t\t),\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\tactions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __( 'Restore the backup' ),\n\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tcontent: editsContent,\n\t\t\t\t\t\t\t\t...editsWithoutContent\n\t\t\t\t\t\t\t} = edits;\n\t\t\t\t\t\t\teditPost( editsWithoutContent );\n\t\t\t\t\t\t\tresetEditorBlocks( parse( edits.content ) );\n\t\t\t\t\t\t\tremoveNotice( id );\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t);\n\t}, [ isEditedPostNew, postId ] );\n}\n\n/**\n * Custom hook which ejects a local autosave after a successful save occurs.\n */\nfunction useAutosavePurge() {\n\tconst { postId, isEditedPostNew, isDirty, isAutosaving, didError } =\n\t\tuseSelect(\n\t\t\t( select ) => ( {\n\t\t\t\tpostId: select( editorStore ).getCurrentPostId(),\n\t\t\t\tisEditedPostNew: select( editorStore ).isEditedPostNew(),\n\t\t\t\tisDirty: select( editorStore ).isEditedPostDirty(),\n\t\t\t\tisAutosaving: select( editorStore ).isAutosavingPost(),\n\t\t\t\tdidError: select( editorStore ).didPostSaveRequestFail(),\n\t\t\t} ),\n\t\t\t[]\n\t\t);\n\n\tconst lastIsDirtyRef = useRef( isDirty );\n\tconst lastIsAutosavingRef = useRef( isAutosaving );\n\n\tuseEffect( () => {\n\t\tif (\n\t\t\t! didError &&\n\t\t\t( ( lastIsAutosavingRef.current && ! isAutosaving ) ||\n\t\t\t\t( lastIsDirtyRef.current && ! isDirty ) )\n\t\t) {\n\t\t\tlocalAutosaveClear( postId, isEditedPostNew );\n\t\t}\n\n\t\tlastIsDirtyRef.current = isDirty;\n\t\tlastIsAutosavingRef.current = isAutosaving;\n\t}, [ isDirty, isAutosaving, didError ] );\n\n\t// Once the isEditedPostNew changes from true to false, let's clear the auto-draft autosave.\n\tconst wasEditedPostNew = usePrevious( isEditedPostNew );\n\tconst prevPostId = usePrevious( postId );\n\tuseEffect( () => {\n\t\tif ( prevPostId === postId && wasEditedPostNew && ! isEditedPostNew ) {\n\t\t\tlocalAutosaveClear( postId, true );\n\t\t}\n\t}, [ isEditedPostNew, postId ] );\n}\n\nfunction LocalAutosaveMonitor() {\n\tconst { autosave } = useDispatch( editorStore );\n\tconst deferredAutosave = useCallback( () => {\n\t\trequestIdleCallback( () => autosave( { local: true } ) );\n\t}, [] );\n\tuseAutosaveNotice();\n\tuseAutosavePurge();\n\n\tconst localAutosaveInterval = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditorSettings().localAutosaveInterval,\n\t\t[]\n\t);\n\n\treturn (\n\t\t<AutosaveMonitor\n\t\t\tinterval={ localAutosaveInterval }\n\t\t\tautosave={ deferredAutosave }\n\t\t/>\n\t);\n}\n\n/**\n * Monitors local autosaves of a post in the editor.\n * It uses several hooks and functions to manage autosave behavior:\n * - `useAutosaveNotice` hook: Manages the creation of a notice prompting the user to restore a local autosave, if one exists.\n * - `useAutosavePurge` hook: Ejects a local autosave after a successful save occurs.\n * - `hasSessionStorageSupport` function: Checks if the current environment supports browser sessionStorage.\n * - `LocalAutosaveMonitor` component: Uses the `AutosaveMonitor` component to perform autosaves at a specified interval.\n *\n * The module also checks for sessionStorage support and conditionally exports the `LocalAutosaveMonitor` component based on that.\n *\n * @module LocalAutosaveMonitor\n */\nexport default ifCondition( hasSessionStorageSupport )( LocalAutosaveMonitor );\n"],"mappings":"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","ignoreList":[]}