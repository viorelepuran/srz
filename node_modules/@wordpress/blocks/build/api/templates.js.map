{"version":3,"names":["_element","require","_convertLegacyBlock","_factory","_registration","doBlocksMatchTemplate","blocks","template","length","every","name","innerBlocksTemplate","index","block","innerBlocks","isHTMLAttribute","attributeDefinition","source","isQueryAttribute","normalizeAttributes","schema","values","Object","fromEntries","entries","map","key","value","normalizeAttribute","definition","Array","isArray","renderToString","subValues","query","synchronizeBlocksWithTemplate","attributes","_blockType$attributes","blockType","getBlockType","normalizedAttributes","blockName","blockAttributes","convertLegacyBlockNameAndAttributes","createBlock"],"sources":["@wordpress/blocks/src/api/templates.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { renderToString } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { convertLegacyBlockNameAndAttributes } from './parser/convert-legacy-block';\nimport { createBlock } from './factory';\nimport { getBlockType } from './registration';\n\n/**\n * Checks whether a list of blocks matches a template by comparing the block names.\n *\n * @param {Array} blocks   Block list.\n * @param {Array} template Block template.\n *\n * @return {boolean} Whether the list of blocks matches a templates.\n */\nexport function doBlocksMatchTemplate( blocks = [], template = [] ) {\n\treturn (\n\t\tblocks.length === template.length &&\n\t\ttemplate.every( ( [ name, , innerBlocksTemplate ], index ) => {\n\t\t\tconst block = blocks[ index ];\n\t\t\treturn (\n\t\t\t\tname === block.name &&\n\t\t\t\tdoBlocksMatchTemplate( block.innerBlocks, innerBlocksTemplate )\n\t\t\t);\n\t\t} )\n\t);\n}\n\nconst isHTMLAttribute = ( attributeDefinition ) =>\n\tattributeDefinition?.source === 'html';\n\nconst isQueryAttribute = ( attributeDefinition ) =>\n\tattributeDefinition?.source === 'query';\n\nfunction normalizeAttributes( schema, values ) {\n\tif ( ! values ) {\n\t\treturn {};\n\t}\n\n\treturn Object.fromEntries(\n\t\tObject.entries( values ).map( ( [ key, value ] ) => [\n\t\t\tkey,\n\t\t\tnormalizeAttribute( schema[ key ], value ),\n\t\t] )\n\t);\n}\n\nfunction normalizeAttribute( definition, value ) {\n\tif ( isHTMLAttribute( definition ) && Array.isArray( value ) ) {\n\t\t// Introduce a deprecated call at this point\n\t\t// When we're confident that \"children\" format should be removed from the templates.\n\n\t\treturn renderToString( value );\n\t}\n\n\tif ( isQueryAttribute( definition ) && value ) {\n\t\treturn value.map( ( subValues ) => {\n\t\t\treturn normalizeAttributes( definition.query, subValues );\n\t\t} );\n\t}\n\n\treturn value;\n}\n\n/**\n * Synchronize a block list with a block template.\n *\n * Synchronizing a block list with a block template means that we loop over the blocks\n * keep the block as is if it matches the block at the same position in the template\n * (If it has the same name) and if doesn't match, we create a new block based on the template.\n * Extra blocks not present in the template are removed.\n *\n * @param {Array} blocks   Block list.\n * @param {Array} template Block template.\n *\n * @return {Array} Updated Block list.\n */\nexport function synchronizeBlocksWithTemplate( blocks = [], template ) {\n\t// If no template is provided, return blocks unmodified.\n\tif ( ! template ) {\n\t\treturn blocks;\n\t}\n\n\treturn template.map(\n\t\t( [ name, attributes, innerBlocksTemplate ], index ) => {\n\t\t\tconst block = blocks[ index ];\n\n\t\t\tif ( block && block.name === name ) {\n\t\t\t\tconst innerBlocks = synchronizeBlocksWithTemplate(\n\t\t\t\t\tblock.innerBlocks,\n\t\t\t\t\tinnerBlocksTemplate\n\t\t\t\t);\n\t\t\t\treturn { ...block, innerBlocks };\n\t\t\t}\n\n\t\t\t// To support old templates that were using the \"children\" format\n\t\t\t// for the attributes using \"html\" strings now, we normalize the template attributes\n\t\t\t// before creating the blocks.\n\n\t\t\tconst blockType = getBlockType( name );\n\n\t\t\tconst normalizedAttributes = normalizeAttributes(\n\t\t\t\tblockType?.attributes ?? {},\n\t\t\t\tattributes\n\t\t\t);\n\n\t\t\tconst [ blockName, blockAttributes ] =\n\t\t\t\tconvertLegacyBlockNameAndAttributes(\n\t\t\t\t\tname,\n\t\t\t\t\tnormalizedAttributes\n\t\t\t\t);\n\n\t\t\treturn createBlock(\n\t\t\t\tblockName,\n\t\t\t\tblockAttributes,\n\t\t\t\tsynchronizeBlocksWithTemplate( [], innerBlocksTemplate )\n\t\t\t);\n\t\t}\n\t);\n}\n"],"mappings":"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","ignoreList":[]}