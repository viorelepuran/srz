{"version":3,"names":["colord","extend","namesPlugin","a11yPlugin","Component","isValidElement","__","sprintf","__unstableStripHTML","stripHTML","RichTextData","deprecated","BLOCK_ICON_DEFAULT","getBlockType","getDefaultBlockName","ICON_COLORS","isUnmodifiedBlock","block","_getBlockType$attribu","Object","entries","name","attributes","every","key","definition","value","hasOwnProperty","default","type","length","undefined","isUnmodifiedDefaultBlock","isValidIcon","icon","normalizeIconObject","src","colordBgColor","background","getColorContrast","iconColor","contrast","maxContrast","Math","max","map","foreground","find","shadowColor","alpha","toRgbString","normalizeBlockType","blockTypeOrName","getBlockLabel","blockType","context","__experimentalLabel","getLabel","title","label","toPlainText","getAccessibleBlockLabel","position","direction","hasPosition","hasLabel","getDefault","attributeSchema","isBlockRegistered","__experimentalSanitizeBlockAttributes","Error","reduce","accumulator","schema","fromHTMLString","toHTMLString","_default","indexOf","source","Array","isArray","getBlockAttributesNamesByRole","role","attributesNames","keys","filter","attributeName","attribute","__experimentalRole","since","version","alternative","hint","__experimentalGetBlockAttributesNamesByRole","args","isContentBlock","some","attributeKey","omit","object","fromEntries","includes"],"sources":["@wordpress/blocks/src/api/utils.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { colord, extend } from 'colord';\nimport namesPlugin from 'colord/plugins/names';\nimport a11yPlugin from 'colord/plugins/a11y';\n\n/**\n * WordPress dependencies\n */\nimport { Component, isValidElement } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { __unstableStripHTML as stripHTML } from '@wordpress/dom';\nimport { RichTextData } from '@wordpress/rich-text';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { BLOCK_ICON_DEFAULT } from './constants';\nimport { getBlockType, getDefaultBlockName } from './registration';\n\nextend( [ namesPlugin, a11yPlugin ] );\n\n/**\n * Array of icon colors containing a color to be used if the icon color\n * was not explicitly set but the icon background color was.\n *\n * @type {Object}\n */\nconst ICON_COLORS = [ '#191e23', '#f8f9f9' ];\n\n/**\n * Determines whether the block's attributes are equal to the default attributes\n * which means the block is unmodified.\n *\n * @param {WPBlock} block Block Object\n *\n * @return {boolean} Whether the block is an unmodified block.\n */\nexport function isUnmodifiedBlock( block ) {\n\treturn Object.entries( getBlockType( block.name )?.attributes ?? {} ).every(\n\t\t( [ key, definition ] ) => {\n\t\t\tconst value = block.attributes[ key ];\n\n\t\t\t// Every attribute that has a default must match the default.\n\t\t\tif ( definition.hasOwnProperty( 'default' ) ) {\n\t\t\t\treturn value === definition.default;\n\t\t\t}\n\n\t\t\t// The rich text type is a bit different from the rest because it\n\t\t\t// has an implicit default value of an empty RichTextData instance,\n\t\t\t// so check the length of the value.\n\t\t\tif ( definition.type === 'rich-text' ) {\n\t\t\t\treturn ! value?.length;\n\t\t\t}\n\n\t\t\t// Every attribute that doesn't have a default should be undefined.\n\t\t\treturn value === undefined;\n\t\t}\n\t);\n}\n\n/**\n * Determines whether the block is a default block and its attributes are equal\n * to the default attributes which means the block is unmodified.\n *\n * @param {WPBlock} block Block Object\n *\n * @return {boolean} Whether the block is an unmodified default block.\n */\nexport function isUnmodifiedDefaultBlock( block ) {\n\treturn block.name === getDefaultBlockName() && isUnmodifiedBlock( block );\n}\n\n/**\n * Function that checks if the parameter is a valid icon.\n *\n * @param {*} icon Parameter to be checked.\n *\n * @return {boolean} True if the parameter is a valid icon and false otherwise.\n */\n\nexport function isValidIcon( icon ) {\n\treturn (\n\t\t!! icon &&\n\t\t( typeof icon === 'string' ||\n\t\t\tisValidElement( icon ) ||\n\t\t\ttypeof icon === 'function' ||\n\t\t\ticon instanceof Component )\n\t);\n}\n\n/**\n * Function that receives an icon as set by the blocks during the registration\n * and returns a new icon object that is normalized so we can rely on just on possible icon structure\n * in the codebase.\n *\n * @param {WPBlockTypeIconRender} icon Render behavior of a block type icon;\n *                                     one of a Dashicon slug, an element, or a\n *                                     component.\n *\n * @return {WPBlockTypeIconDescriptor} Object describing the icon.\n */\nexport function normalizeIconObject( icon ) {\n\ticon = icon || BLOCK_ICON_DEFAULT;\n\tif ( isValidIcon( icon ) ) {\n\t\treturn { src: icon };\n\t}\n\n\tif ( 'background' in icon ) {\n\t\tconst colordBgColor = colord( icon.background );\n\t\tconst getColorContrast = ( iconColor ) =>\n\t\t\tcolordBgColor.contrast( iconColor );\n\t\tconst maxContrast = Math.max( ...ICON_COLORS.map( getColorContrast ) );\n\n\t\treturn {\n\t\t\t...icon,\n\t\t\tforeground: icon.foreground\n\t\t\t\t? icon.foreground\n\t\t\t\t: ICON_COLORS.find(\n\t\t\t\t\t\t( iconColor ) =>\n\t\t\t\t\t\t\tgetColorContrast( iconColor ) === maxContrast\n\t\t\t\t  ),\n\t\t\tshadowColor: colordBgColor.alpha( 0.3 ).toRgbString(),\n\t\t};\n\t}\n\n\treturn icon;\n}\n\n/**\n * Normalizes block type passed as param. When string is passed then\n * it converts it to the matching block type object.\n * It passes the original object otherwise.\n *\n * @param {string|Object} blockTypeOrName Block type or name.\n *\n * @return {?Object} Block type.\n */\nexport function normalizeBlockType( blockTypeOrName ) {\n\tif ( typeof blockTypeOrName === 'string' ) {\n\t\treturn getBlockType( blockTypeOrName );\n\t}\n\n\treturn blockTypeOrName;\n}\n\n/**\n * Get the label for the block, usually this is either the block title,\n * or the value of the block's `label` function when that's specified.\n *\n * @param {Object} blockType  The block type.\n * @param {Object} attributes The values of the block's attributes.\n * @param {Object} context    The intended use for the label.\n *\n * @return {string} The block label.\n */\nexport function getBlockLabel( blockType, attributes, context = 'visual' ) {\n\tconst { __experimentalLabel: getLabel, title } = blockType;\n\n\tconst label = getLabel && getLabel( attributes, { context } );\n\n\tif ( ! label ) {\n\t\treturn title;\n\t}\n\n\tif ( label.toPlainText ) {\n\t\treturn label.toPlainText();\n\t}\n\n\t// Strip any HTML (i.e. RichText formatting) before returning.\n\treturn stripHTML( label );\n}\n\n/**\n * Get a label for the block for use by screenreaders, this is more descriptive\n * than the visual label and includes the block title and the value of the\n * `getLabel` function if it's specified.\n *\n * @param {?Object} blockType              The block type.\n * @param {Object}  attributes             The values of the block's attributes.\n * @param {?number} position               The position of the block in the block list.\n * @param {string}  [direction='vertical'] The direction of the block layout.\n *\n * @return {string} The block label.\n */\nexport function getAccessibleBlockLabel(\n\tblockType,\n\tattributes,\n\tposition,\n\tdirection = 'vertical'\n) {\n\t// `title` is already localized, `label` is a user-supplied value.\n\tconst title = blockType?.title;\n\tconst label = blockType\n\t\t? getBlockLabel( blockType, attributes, 'accessibility' )\n\t\t: '';\n\tconst hasPosition = position !== undefined;\n\n\t// getBlockLabel returns the block title as a fallback when there's no label,\n\t// if it did return the title, this function needs to avoid adding the\n\t// title twice within the accessible label. Use this `hasLabel` boolean to\n\t// handle that.\n\tconst hasLabel = label && label !== title;\n\n\tif ( hasPosition && direction === 'vertical' ) {\n\t\tif ( hasLabel ) {\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: accessibility text. 1: The block title. 2: The block row number. 3: The block label.. */\n\t\t\t\t__( '%1$s Block. Row %2$d. %3$s' ),\n\t\t\t\ttitle,\n\t\t\t\tposition,\n\t\t\t\tlabel\n\t\t\t);\n\t\t}\n\n\t\treturn sprintf(\n\t\t\t/* translators: accessibility text. 1: The block title. 2: The block row number. */\n\t\t\t__( '%1$s Block. Row %2$d' ),\n\t\t\ttitle,\n\t\t\tposition\n\t\t);\n\t} else if ( hasPosition && direction === 'horizontal' ) {\n\t\tif ( hasLabel ) {\n\t\t\treturn sprintf(\n\t\t\t\t/* translators: accessibility text. 1: The block title. 2: The block column number. 3: The block label.. */\n\t\t\t\t__( '%1$s Block. Column %2$d. %3$s' ),\n\t\t\t\ttitle,\n\t\t\t\tposition,\n\t\t\t\tlabel\n\t\t\t);\n\t\t}\n\n\t\treturn sprintf(\n\t\t\t/* translators: accessibility text. 1: The block title. 2: The block column number. */\n\t\t\t__( '%1$s Block. Column %2$d' ),\n\t\t\ttitle,\n\t\t\tposition\n\t\t);\n\t}\n\n\tif ( hasLabel ) {\n\t\treturn sprintf(\n\t\t\t/* translators: accessibility text. %1: The block title. %2: The block label. */\n\t\t\t__( '%1$s Block. %2$s' ),\n\t\t\ttitle,\n\t\t\tlabel\n\t\t);\n\t}\n\n\treturn sprintf(\n\t\t/* translators: accessibility text. %s: The block title. */\n\t\t__( '%s Block' ),\n\t\ttitle\n\t);\n}\n\nexport function getDefault( attributeSchema ) {\n\tif ( attributeSchema.default !== undefined ) {\n\t\treturn attributeSchema.default;\n\t}\n\n\tif ( attributeSchema.type === 'rich-text' ) {\n\t\treturn new RichTextData();\n\t}\n}\n\n/**\n * Check if a block is registered.\n *\n * @param {string} name The block's name.\n *\n * @return {boolean} Whether the block is registered.\n */\nexport function isBlockRegistered( name ) {\n\treturn getBlockType( name ) !== undefined;\n}\n\n/**\n * Ensure attributes contains only values defined by block type, and merge\n * default values for missing attributes.\n *\n * @param {string} name       The block's name.\n * @param {Object} attributes The block's attributes.\n * @return {Object} The sanitized attributes.\n */\nexport function __experimentalSanitizeBlockAttributes( name, attributes ) {\n\t// Get the type definition associated with a registered block.\n\tconst blockType = getBlockType( name );\n\n\tif ( undefined === blockType ) {\n\t\tthrow new Error( `Block type '${ name }' is not registered.` );\n\t}\n\n\treturn Object.entries( blockType.attributes ).reduce(\n\t\t( accumulator, [ key, schema ] ) => {\n\t\t\tconst value = attributes[ key ];\n\n\t\t\tif ( undefined !== value ) {\n\t\t\t\tif ( schema.type === 'rich-text' ) {\n\t\t\t\t\tif ( value instanceof RichTextData ) {\n\t\t\t\t\t\taccumulator[ key ] = value;\n\t\t\t\t\t} else if ( typeof value === 'string' ) {\n\t\t\t\t\t\taccumulator[ key ] =\n\t\t\t\t\t\t\tRichTextData.fromHTMLString( value );\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tschema.type === 'string' &&\n\t\t\t\t\tvalue instanceof RichTextData\n\t\t\t\t) {\n\t\t\t\t\taccumulator[ key ] = value.toHTMLString();\n\t\t\t\t} else {\n\t\t\t\t\taccumulator[ key ] = value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst _default = getDefault( schema );\n\t\t\t\tif ( undefined !== _default ) {\n\t\t\t\t\taccumulator[ key ] = _default;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( [ 'node', 'children' ].indexOf( schema.source ) !== -1 ) {\n\t\t\t\t// Ensure value passed is always an array, which we're expecting in\n\t\t\t\t// the RichText component to handle the deprecated value.\n\t\t\t\tif ( typeof accumulator[ key ] === 'string' ) {\n\t\t\t\t\taccumulator[ key ] = [ accumulator[ key ] ];\n\t\t\t\t} else if ( ! Array.isArray( accumulator[ key ] ) ) {\n\t\t\t\t\taccumulator[ key ] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn accumulator;\n\t\t},\n\t\t{}\n\t);\n}\n\n/**\n * Filter block attributes by `role` and return their names.\n *\n * @param {string} name Block attribute's name.\n * @param {string} role The role of a block attribute.\n *\n * @return {string[]} The attribute names that have the provided role.\n */\nexport function getBlockAttributesNamesByRole( name, role ) {\n\tconst attributes = getBlockType( name )?.attributes;\n\tif ( ! attributes ) {\n\t\treturn [];\n\t}\n\tconst attributesNames = Object.keys( attributes );\n\tif ( ! role ) {\n\t\treturn attributesNames;\n\t}\n\n\treturn attributesNames.filter( ( attributeName ) => {\n\t\tconst attribute = attributes[ attributeName ];\n\t\tif ( attribute?.role === role ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( attribute?.__experimentalRole === role ) {\n\t\t\tdeprecated( '__experimentalRole attribute', {\n\t\t\t\tsince: '6.7',\n\t\t\t\tversion: '6.8',\n\t\t\t\talternative: 'role attribute',\n\t\t\t\thint: `Check the block.json of the ${ name } block.`,\n\t\t\t} );\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} );\n}\n\nexport const __experimentalGetBlockAttributesNamesByRole = ( ...args ) => {\n\tdeprecated( '__experimentalGetBlockAttributesNamesByRole', {\n\t\tsince: '6.7',\n\t\tversion: '6.8',\n\t\talternative: 'getBlockAttributesNamesByRole',\n\t} );\n\treturn getBlockAttributesNamesByRole( ...args );\n};\n\n/**\n * Checks if a block is a content block by examining its attributes.\n * A block is considered a content block if it has at least one attribute\n * with a role of 'content'.\n *\n * @param {string} name The name of the block to check.\n * @return {boolean}    Whether the block is a content block.\n */\nexport function isContentBlock( name ) {\n\tconst attributes = getBlockType( name )?.attributes;\n\n\tif ( ! attributes ) {\n\t\treturn false;\n\t}\n\n\treturn !! Object.keys( attributes )?.some( ( attributeKey ) => {\n\t\tconst attribute = attributes[ attributeKey ];\n\t\treturn (\n\t\t\tattribute?.role === 'content' ||\n\t\t\tattribute?.__experimentalRole === 'content'\n\t\t);\n\t} );\n}\n\n/**\n * Return a new object with the specified keys omitted.\n *\n * @param {Object} object Original object.\n * @param {Array}  keys   Keys to be omitted.\n *\n * @return {Object} Object with omitted keys.\n */\nexport function omit( object, keys ) {\n\treturn Object.fromEntries(\n\t\tObject.entries( object ).filter( ( [ key ] ) => ! keys.includes( key ) )\n\t);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,MAAM,EAAEC,MAAM,QAAQ,QAAQ;AACvC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB;;AAE5C;AACA;AACA;AACA,SAASC,SAAS,EAAEC,cAAc,QAAQ,oBAAoB;AAC9D,SAASC,EAAE,EAAEC,OAAO,QAAQ,iBAAiB;AAC7C,SAASC,mBAAmB,IAAIC,SAAS,QAAQ,gBAAgB;AACjE,SAASC,YAAY,QAAQ,sBAAsB;AACnD,OAAOC,UAAU,MAAM,uBAAuB;;AAE9C;AACA;AACA;AACA,SAASC,kBAAkB,QAAQ,aAAa;AAChD,SAASC,YAAY,EAAEC,mBAAmB,QAAQ,gBAAgB;AAElEb,MAAM,CAAE,CAAEC,WAAW,EAAEC,UAAU,CAAG,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,MAAMY,WAAW,GAAG,CAAE,SAAS,EAAE,SAAS,CAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAAEC,KAAK,EAAG;EAAA,IAAAC,qBAAA;EAC1C,OAAOC,MAAM,CAACC,OAAO,EAAAF,qBAAA,GAAEL,YAAY,CAAEI,KAAK,CAACI,IAAK,CAAC,EAAEC,UAAU,cAAAJ,qBAAA,cAAAA,qBAAA,GAAI,CAAC,CAAE,CAAC,CAACK,KAAK,CAC1E,CAAE,CAAEC,GAAG,EAAEC,UAAU,CAAE,KAAM;IAC1B,MAAMC,KAAK,GAAGT,KAAK,CAACK,UAAU,CAAEE,GAAG,CAAE;;IAErC;IACA,IAAKC,UAAU,CAACE,cAAc,CAAE,SAAU,CAAC,EAAG;MAC7C,OAAOD,KAAK,KAAKD,UAAU,CAACG,OAAO;IACpC;;IAEA;IACA;IACA;IACA,IAAKH,UAAU,CAACI,IAAI,KAAK,WAAW,EAAG;MACtC,OAAO,CAAEH,KAAK,EAAEI,MAAM;IACvB;;IAEA;IACA,OAAOJ,KAAK,KAAKK,SAAS;EAC3B,CACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,wBAAwBA,CAAEf,KAAK,EAAG;EACjD,OAAOA,KAAK,CAACI,IAAI,KAAKP,mBAAmB,CAAC,CAAC,IAAIE,iBAAiB,CAAEC,KAAM,CAAC;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASgB,WAAWA,CAAEC,IAAI,EAAG;EACnC,OACC,CAAC,CAAEA,IAAI,KACL,OAAOA,IAAI,KAAK,QAAQ,IACzB7B,cAAc,CAAE6B,IAAK,CAAC,IACtB,OAAOA,IAAI,KAAK,UAAU,IAC1BA,IAAI,YAAY9B,SAAS,CAAE;AAE9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS+B,mBAAmBA,CAAED,IAAI,EAAG;EAC3CA,IAAI,GAAGA,IAAI,IAAItB,kBAAkB;EACjC,IAAKqB,WAAW,CAAEC,IAAK,CAAC,EAAG;IAC1B,OAAO;MAAEE,GAAG,EAAEF;IAAK,CAAC;EACrB;EAEA,IAAK,YAAY,IAAIA,IAAI,EAAG;IAC3B,MAAMG,aAAa,GAAGrC,MAAM,CAAEkC,IAAI,CAACI,UAAW,CAAC;IAC/C,MAAMC,gBAAgB,GAAKC,SAAS,IACnCH,aAAa,CAACI,QAAQ,CAAED,SAAU,CAAC;IACpC,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAE,GAAG7B,WAAW,CAAC8B,GAAG,CAAEN,gBAAiB,CAAE,CAAC;IAEtE,OAAO;MACN,GAAGL,IAAI;MACPY,UAAU,EAAEZ,IAAI,CAACY,UAAU,GACxBZ,IAAI,CAACY,UAAU,GACf/B,WAAW,CAACgC,IAAI,CACdP,SAAS,IACVD,gBAAgB,CAAEC,SAAU,CAAC,KAAKE,WACnC,CAAC;MACJM,WAAW,EAAEX,aAAa,CAACY,KAAK,CAAE,GAAI,CAAC,CAACC,WAAW,CAAC;IACrD,CAAC;EACF;EAEA,OAAOhB,IAAI;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASiB,kBAAkBA,CAAEC,eAAe,EAAG;EACrD,IAAK,OAAOA,eAAe,KAAK,QAAQ,EAAG;IAC1C,OAAOvC,YAAY,CAAEuC,eAAgB,CAAC;EACvC;EAEA,OAAOA,eAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAAEC,SAAS,EAAEhC,UAAU,EAAEiC,OAAO,GAAG,QAAQ,EAAG;EAC1E,MAAM;IAAEC,mBAAmB,EAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGJ,SAAS;EAE1D,MAAMK,KAAK,GAAGF,QAAQ,IAAIA,QAAQ,CAAEnC,UAAU,EAAE;IAAEiC;EAAQ,CAAE,CAAC;EAE7D,IAAK,CAAEI,KAAK,EAAG;IACd,OAAOD,KAAK;EACb;EAEA,IAAKC,KAAK,CAACC,WAAW,EAAG;IACxB,OAAOD,KAAK,CAACC,WAAW,CAAC,CAAC;EAC3B;;EAEA;EACA,OAAOnD,SAAS,CAAEkD,KAAM,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,uBAAuBA,CACtCP,SAAS,EACThC,UAAU,EACVwC,QAAQ,EACRC,SAAS,GAAG,UAAU,EACrB;EACD;EACA,MAAML,KAAK,GAAGJ,SAAS,EAAEI,KAAK;EAC9B,MAAMC,KAAK,GAAGL,SAAS,GACpBD,aAAa,CAAEC,SAAS,EAAEhC,UAAU,EAAE,eAAgB,CAAC,GACvD,EAAE;EACL,MAAM0C,WAAW,GAAGF,QAAQ,KAAK/B,SAAS;;EAE1C;EACA;EACA;EACA;EACA,MAAMkC,QAAQ,GAAGN,KAAK,IAAIA,KAAK,KAAKD,KAAK;EAEzC,IAAKM,WAAW,IAAID,SAAS,KAAK,UAAU,EAAG;IAC9C,IAAKE,QAAQ,EAAG;MACf,OAAO1D,OAAO,CACb;MACAD,EAAE,CAAE,4BAA6B,CAAC,EAClCoD,KAAK,EACLI,QAAQ,EACRH,KACD,CAAC;IACF;IAEA,OAAOpD,OAAO,CACb;IACAD,EAAE,CAAE,sBAAuB,CAAC,EAC5BoD,KAAK,EACLI,QACD,CAAC;EACF,CAAC,MAAM,IAAKE,WAAW,IAAID,SAAS,KAAK,YAAY,EAAG;IACvD,IAAKE,QAAQ,EAAG;MACf,OAAO1D,OAAO,CACb;MACAD,EAAE,CAAE,+BAAgC,CAAC,EACrCoD,KAAK,EACLI,QAAQ,EACRH,KACD,CAAC;IACF;IAEA,OAAOpD,OAAO,CACb;IACAD,EAAE,CAAE,yBAA0B,CAAC,EAC/BoD,KAAK,EACLI,QACD,CAAC;EACF;EAEA,IAAKG,QAAQ,EAAG;IACf,OAAO1D,OAAO,CACb;IACAD,EAAE,CAAE,kBAAmB,CAAC,EACxBoD,KAAK,EACLC,KACD,CAAC;EACF;EAEA,OAAOpD,OAAO,CACb;EACAD,EAAE,CAAE,UAAW,CAAC,EAChBoD,KACD,CAAC;AACF;AAEA,OAAO,SAASQ,UAAUA,CAAEC,eAAe,EAAG;EAC7C,IAAKA,eAAe,CAACvC,OAAO,KAAKG,SAAS,EAAG;IAC5C,OAAOoC,eAAe,CAACvC,OAAO;EAC/B;EAEA,IAAKuC,eAAe,CAACtC,IAAI,KAAK,WAAW,EAAG;IAC3C,OAAO,IAAInB,YAAY,CAAC,CAAC;EAC1B;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS0D,iBAAiBA,CAAE/C,IAAI,EAAG;EACzC,OAAOR,YAAY,CAAEQ,IAAK,CAAC,KAAKU,SAAS;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASsC,qCAAqCA,CAAEhD,IAAI,EAAEC,UAAU,EAAG;EACzE;EACA,MAAMgC,SAAS,GAAGzC,YAAY,CAAEQ,IAAK,CAAC;EAEtC,IAAKU,SAAS,KAAKuB,SAAS,EAAG;IAC9B,MAAM,IAAIgB,KAAK,CAAE,eAAgBjD,IAAI,sBAAwB,CAAC;EAC/D;EAEA,OAAOF,MAAM,CAACC,OAAO,CAAEkC,SAAS,CAAChC,UAAW,CAAC,CAACiD,MAAM,CACnD,CAAEC,WAAW,EAAE,CAAEhD,GAAG,EAAEiD,MAAM,CAAE,KAAM;IACnC,MAAM/C,KAAK,GAAGJ,UAAU,CAAEE,GAAG,CAAE;IAE/B,IAAKO,SAAS,KAAKL,KAAK,EAAG;MAC1B,IAAK+C,MAAM,CAAC5C,IAAI,KAAK,WAAW,EAAG;QAClC,IAAKH,KAAK,YAAYhB,YAAY,EAAG;UACpC8D,WAAW,CAAEhD,GAAG,CAAE,GAAGE,KAAK;QAC3B,CAAC,MAAM,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;UACvC8C,WAAW,CAAEhD,GAAG,CAAE,GACjBd,YAAY,CAACgE,cAAc,CAAEhD,KAAM,CAAC;QACtC;MACD,CAAC,MAAM,IACN+C,MAAM,CAAC5C,IAAI,KAAK,QAAQ,IACxBH,KAAK,YAAYhB,YAAY,EAC5B;QACD8D,WAAW,CAAEhD,GAAG,CAAE,GAAGE,KAAK,CAACiD,YAAY,CAAC,CAAC;MAC1C,CAAC,MAAM;QACNH,WAAW,CAAEhD,GAAG,CAAE,GAAGE,KAAK;MAC3B;IACD,CAAC,MAAM;MACN,MAAMkD,QAAQ,GAAGV,UAAU,CAAEO,MAAO,CAAC;MACrC,IAAK1C,SAAS,KAAK6C,QAAQ,EAAG;QAC7BJ,WAAW,CAAEhD,GAAG,CAAE,GAAGoD,QAAQ;MAC9B;IACD;IAEA,IAAK,CAAE,MAAM,EAAE,UAAU,CAAE,CAACC,OAAO,CAAEJ,MAAM,CAACK,MAAO,CAAC,KAAK,CAAC,CAAC,EAAG;MAC7D;MACA;MACA,IAAK,OAAON,WAAW,CAAEhD,GAAG,CAAE,KAAK,QAAQ,EAAG;QAC7CgD,WAAW,CAAEhD,GAAG,CAAE,GAAG,CAAEgD,WAAW,CAAEhD,GAAG,CAAE,CAAE;MAC5C,CAAC,MAAM,IAAK,CAAEuD,KAAK,CAACC,OAAO,CAAER,WAAW,CAAEhD,GAAG,CAAG,CAAC,EAAG;QACnDgD,WAAW,CAAEhD,GAAG,CAAE,GAAG,EAAE;MACxB;IACD;IAEA,OAAOgD,WAAW;EACnB,CAAC,EACD,CAAC,CACF,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASS,6BAA6BA,CAAE5D,IAAI,EAAE6D,IAAI,EAAG;EAC3D,MAAM5D,UAAU,GAAGT,YAAY,CAAEQ,IAAK,CAAC,EAAEC,UAAU;EACnD,IAAK,CAAEA,UAAU,EAAG;IACnB,OAAO,EAAE;EACV;EACA,MAAM6D,eAAe,GAAGhE,MAAM,CAACiE,IAAI,CAAE9D,UAAW,CAAC;EACjD,IAAK,CAAE4D,IAAI,EAAG;IACb,OAAOC,eAAe;EACvB;EAEA,OAAOA,eAAe,CAACE,MAAM,CAAIC,aAAa,IAAM;IACnD,MAAMC,SAAS,GAAGjE,UAAU,CAAEgE,aAAa,CAAE;IAC7C,IAAKC,SAAS,EAAEL,IAAI,KAAKA,IAAI,EAAG;MAC/B,OAAO,IAAI;IACZ;IACA,IAAKK,SAAS,EAAEC,kBAAkB,KAAKN,IAAI,EAAG;MAC7CvE,UAAU,CAAE,8BAA8B,EAAE;QAC3C8E,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE,KAAK;QACdC,WAAW,EAAE,gBAAgB;QAC7BC,IAAI,EAAE,+BAAgCvE,IAAI;MAC3C,CAAE,CAAC;MACH,OAAO,IAAI;IACZ;IACA,OAAO,KAAK;EACb,CAAE,CAAC;AACJ;AAEA,OAAO,MAAMwE,2CAA2C,GAAGA,CAAE,GAAGC,IAAI,KAAM;EACzEnF,UAAU,CAAE,6CAA6C,EAAE;IAC1D8E,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE;EACd,CAAE,CAAC;EACH,OAAOV,6BAA6B,CAAE,GAAGa,IAAK,CAAC;AAChD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAAE1E,IAAI,EAAG;EACtC,MAAMC,UAAU,GAAGT,YAAY,CAAEQ,IAAK,CAAC,EAAEC,UAAU;EAEnD,IAAK,CAAEA,UAAU,EAAG;IACnB,OAAO,KAAK;EACb;EAEA,OAAO,CAAC,CAAEH,MAAM,CAACiE,IAAI,CAAE9D,UAAW,CAAC,EAAE0E,IAAI,CAAIC,YAAY,IAAM;IAC9D,MAAMV,SAAS,GAAGjE,UAAU,CAAE2E,YAAY,CAAE;IAC5C,OACCV,SAAS,EAAEL,IAAI,KAAK,SAAS,IAC7BK,SAAS,EAAEC,kBAAkB,KAAK,SAAS;EAE7C,CAAE,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,IAAIA,CAAEC,MAAM,EAAEf,IAAI,EAAG;EACpC,OAAOjE,MAAM,CAACiF,WAAW,CACxBjF,MAAM,CAACC,OAAO,CAAE+E,MAAO,CAAC,CAACd,MAAM,CAAE,CAAE,CAAE7D,GAAG,CAAE,KAAM,CAAE4D,IAAI,CAACiB,QAAQ,CAAE7E,GAAI,CAAE,CACxE,CAAC;AACF","ignoreList":[]}