/**
*  Converts a hex value into the rgb equivalent.
*
* @param {string} hex - the hexadecimal value to convert
* @return {string} comma separated rgb values
*/
/**
 * Colors
 */
/**
 * Breakpoints & Media Queries
 */
/**
 * SCSS Variables.
 *
 * Please use variables from this sheet to ensure consistency across the UI.
 * Don't add to this sheet unless you're pretty sure the value will be reused in many places.
 * For example, don't add rules to this sheet that affect block visuals. It's purely for UI.
 */
/**
*  Converts a hex value into the rgb equivalent.
*
* @param {string} hex - the hexadecimal value to convert
* @return {string} comma separated rgb values
*/
/**
 * Colors
 */
/**
 * Fonts & basic variables.
 */
/**
 * Typography
 */
/**
 * Grid System.
 * https://make.wordpress.org/design/2019/10/31/proposal-a-consistent-spacing-system-for-wordpress/
 */
/**
 * Radius scale.
 */
/**
 * Elevation scale.
 */
/**
 * Dimensions.
 */
/**
 * Mobile specific styles
 */
/**
 * Editor styles.
 */
/**
 * Block & Editor UI.
 */
/**
 * Block paddings.
 */
/**
 * React Native specific.
 * These variables do not appear to be used anywhere else.
 */
/**
*  Converts a hex value into the rgb equivalent.
*
* @param {string} hex - the hexadecimal value to convert
* @return {string} comma separated rgb values
*/
/**
 * Long content fade mixin
 *
 * Creates a fading overlay to signify that the content is longer
 * than the space allows.
 */
/**
 * Typography
 */
/**
 * Breakpoint mixins
 */
/**
 * Focus styles.
 */
/**
 * Applies editor left position to the selector passed as argument
 */
/**
 * Styles that are reused verbatim in a few places
 */
/**
 * Allows users to opt-out of animations via OS-level preferences.
 */
/**
 * Reset default styles for JavaScript UI based pages.
 * This is a WP-admin agnostic reset
 */
/**
 * Reset the WP Admin page styles for Gutenberg-like pages.
 */
:root {
  --wp-admin-theme-color: #007cba;
  --wp-admin-theme-color--rgb: 0, 124, 186;
  --wp-admin-theme-color-darker-10: #006ba1;
  --wp-admin-theme-color-darker-10--rgb: 0, 107, 161;
  --wp-admin-theme-color-darker-20: #005a87;
  --wp-admin-theme-color-darker-20--rgb: 0, 90, 135;
  --wp-admin-border-width-focus: 2px;
  --wp-block-synced-color: #7a00df;
  --wp-block-synced-color--rgb: 122, 0, 223;
  --wp-bound-block-color: var(--wp-block-synced-color);
}
@media (min-resolution: 192dpi) {
  :root {
    --wp-admin-border-width-focus: 1.5px;
  }
}

.patterns-menu-items__convert-modal {
  z-index: 1000001;
}
.patterns-menu-items__convert-modal [role=dialog] > [role=document] {
  width: 350px;
}
.patterns-menu-items__convert-modal .patterns-menu-items__convert-modal-categories {
  position: relative;
}
.patterns-menu-items__convert-modal .components-form-token-field__suggestions-list:not(:empty) {
  position: absolute;
  border: 1px solid var(--wp-admin-theme-color);
  border-bottom-right-radius: 2px;
  border-bottom-left-radius: 2px;
  box-shadow: 0 0 0.5px 0.5px var(--wp-admin-theme-color);
  box-sizing: border-box;
  z-index: 1;
  background-color: #fff;
  width: calc(100% + 2px);
  right: -1px;
  min-width: initial;
  max-height: 96px;
}

.patterns-create-modal__name-input input[type=text] {
  margin: 0;
}

.patterns-rename-pattern-category-modal__validation-message {
  color: #cc1818;
}
@media (min-width: 782px) {
  .patterns-rename-pattern-category-modal__validation-message {
    width: 320px;
  }
}

.pattern-overrides-control__allow-overrides-button {
  width: 100%;
  justify-content: center;
}

.patterns-pattern-overrides-toolbar-indicator__popover .components-popover__content {
  min-width: 260px;
  padding: 16px;
}

.patterns-pattern-overrides-toolbar-indicator .patterns-pattern-overrides-toolbar-indicator-icon.has-colors svg {
  fill: var(--wp-block-synced-color);
}

.editor-collapsible-block-toolbar .patterns-pattern-overrides-toolbar-indicator {
  height: 32px;
}