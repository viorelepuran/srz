"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateFileSize = validateFileSize;
var _i18n = require("@wordpress/i18n");
var _uploadError = require("./upload-error");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Verifies whether the file is within the file upload size limits for the site.
 *
 * @param file              File object.
 * @param maxUploadFileSize Maximum upload size in bytes allowed for the site.
 */
function validateFileSize(file, maxUploadFileSize) {
  // Don't allow empty files to be uploaded.
  if (file.size <= 0) {
    throw new _uploadError.UploadError({
      code: 'EMPTY_FILE',
      message: (0, _i18n.sprintf)(
      // translators: %s: file name.
      (0, _i18n.__)('%s: This file is empty.'), file.name),
      file
    });
  }
  if (maxUploadFileSize && file.size > maxUploadFileSize) {
    throw new _uploadError.UploadError({
      code: 'SIZE_ABOVE_LIMIT',
      message: (0, _i18n.sprintf)(
      // translators: %s: file name.
      (0, _i18n.__)('%s: This file exceeds the maximum upload size for this site.'), file.name),
      file
    });
  }
}
//# sourceMappingURL=validate-file-size.js.map