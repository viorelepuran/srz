{"version":3,"names":["_i18n","require","_sideloadToServer","_uploadError","noop","sideloadMedia","file","attachmentId","additionalData","signal","onFileChange","onError","attachment","sideloadToServer","error","message","Error","sprintf","__","name","UploadError","code","cause","undefined"],"sources":["@wordpress/media-utils/src/utils/sideload-media.ts"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport type {\n\tOnChangeHandler,\n\tOnErrorHandler,\n\tCreateSideloadFile,\n\tRestAttachment,\n} from './types';\nimport { sideloadToServer } from './sideload-to-server';\nimport { UploadError } from './upload-error';\n\nconst noop = () => {};\n\ninterface SideloadMediaArgs {\n\t// Additional data to include in the request.\n\tadditionalData?: CreateSideloadFile;\n\t// File to sideload.\n\tfile: File;\n\t// Attachment ID.\n\tattachmentId: RestAttachment[ 'id' ];\n\t// Function called when an error happens.\n\tonError?: OnErrorHandler;\n\t// Function called each time a file or a temporary representation of the file is available.\n\tonFileChange?: OnChangeHandler;\n\t// Abort signal.\n\tsignal?: AbortSignal;\n}\n\n/**\n * Uploads a file to the server without creating an attachment.\n *\n * @param $0                Parameters object passed to the function.\n * @param $0.file           Media File to Save.\n * @param $0.attachmentId   Parent attachment ID.\n * @param $0.additionalData Additional data to include in the request.\n * @param $0.signal         Abort signal.\n * @param $0.onFileChange   Function called each time a file or a temporary representation of the file is available.\n * @param $0.onError        Function called when an error happens.\n */\nexport async function sideloadMedia( {\n\tfile,\n\tattachmentId,\n\tadditionalData = {},\n\tsignal,\n\tonFileChange,\n\tonError = noop,\n}: SideloadMediaArgs ) {\n\ttry {\n\t\tconst attachment = await sideloadToServer(\n\t\t\tfile,\n\t\t\tattachmentId,\n\t\t\tadditionalData,\n\t\t\tsignal\n\t\t);\n\t\tonFileChange?.( [ attachment ] );\n\t} catch ( error ) {\n\t\tlet message;\n\t\tif ( error instanceof Error ) {\n\t\t\tmessage = error.message;\n\t\t} else {\n\t\t\tmessage = sprintf(\n\t\t\t\t// translators: %s: file name\n\t\t\t\t__( 'Error while sideloading file %s to the server.' ),\n\t\t\t\tfile.name\n\t\t\t);\n\t\t}\n\t\tonError(\n\t\t\tnew UploadError( {\n\t\t\t\tcode: 'GENERAL',\n\t\t\t\tmessage,\n\t\t\t\tfile,\n\t\t\t\tcause: error instanceof Error ? error : undefined,\n\t\t\t} )\n\t\t);\n\t}\n}\n"],"mappings":";;;;;;AAGA,IAAAA,KAAA,GAAAC,OAAA;AAWA,IAAAC,iBAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AAfA;AACA;AACA;;AAGA;AACA;AACA;;AAUA,MAAMG,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;AAiBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,aAAaA,CAAE;EACpCC,IAAI;EACJC,YAAY;EACZC,cAAc,GAAG,CAAC,CAAC;EACnBC,MAAM;EACNC,YAAY;EACZC,OAAO,GAAGP;AACQ,CAAC,EAAG;EACtB,IAAI;IACH,MAAMQ,UAAU,GAAG,MAAM,IAAAC,kCAAgB,EACxCP,IAAI,EACJC,YAAY,EACZC,cAAc,EACdC,MACD,CAAC;IACDC,YAAY,GAAI,CAAEE,UAAU,CAAG,CAAC;EACjC,CAAC,CAAC,OAAQE,KAAK,EAAG;IACjB,IAAIC,OAAO;IACX,IAAKD,KAAK,YAAYE,KAAK,EAAG;MAC7BD,OAAO,GAAGD,KAAK,CAACC,OAAO;IACxB,CAAC,MAAM;MACNA,OAAO,GAAG,IAAAE,aAAO;MAChB;MACA,IAAAC,QAAE,EAAE,gDAAiD,CAAC,EACtDZ,IAAI,CAACa,IACN,CAAC;IACF;IACAR,OAAO,CACN,IAAIS,wBAAW,CAAE;MAChBC,IAAI,EAAE,SAAS;MACfN,OAAO;MACPT,IAAI;MACJgB,KAAK,EAAER,KAAK,YAAYE,KAAK,GAAGF,KAAK,GAAGS;IACzC,CAAE,CACH,CAAC;EACF;AACD","ignoreList":[]}