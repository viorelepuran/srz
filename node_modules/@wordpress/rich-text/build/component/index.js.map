{"version":3,"names":["_element","require","_compose","_data","_create","_toDom","_toHtmlString","_useDefaultStyle","_useBoundaryStyle","_eventListeners","useRichText","value","selectionStart","selectionEnd","placeholder","onSelectionChange","preserveWhiteSpace","onChange","__unstableDisableFormats","disableFormats","__unstableIsSelected","isSelected","__unstableDependencies","__unstableAfterParse","__unstableBeforeSerialize","__unstableAddInvisibleFormats","registry","useRegistry","forceRender","useReducer","ref","useRef","createRecord","ownerDocument","defaultView","current","selection","getSelection","range","rangeCount","getRangeAt","create","element","__unstableIsEditableTree","applyRecord","newRecord","domOnly","apply","prepareEditableTree","__unstableDomOnly","_valueRef","recordRef","setRecordFromProps","RichTextData","fromHTMLString","empty","text","formats","replacements","Array","length","start","end","hadSelectionUpdateRef","activeFormats","undefined","handleChange","newFormats","toHTMLString","batch","__unstableFormats","__unstableText","applyFromProps","didMountRef","useLayoutEffect","activeElement","focus","mergedRefs","useMergeRefs","useDefaultStyle","useBoundaryStyle","record","useEventListeners","useRefEffect","getValue","__experimentalRichText"],"sources":["@wordpress/rich-text/src/component/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useLayoutEffect, useReducer } from '@wordpress/element';\nimport { useMergeRefs, useRefEffect } from '@wordpress/compose';\nimport { useRegistry } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { create, RichTextData } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { useDefaultStyle } from './use-default-style';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useEventListeners } from './event-listeners';\n\nexport function useRichText( {\n\tvalue = '',\n\tselectionStart,\n\tselectionEnd,\n\tplaceholder,\n\tonSelectionChange,\n\tpreserveWhiteSpace,\n\tonChange,\n\t__unstableDisableFormats: disableFormats,\n\t__unstableIsSelected: isSelected,\n\t__unstableDependencies = [],\n\t__unstableAfterParse,\n\t__unstableBeforeSerialize,\n\t__unstableAddInvisibleFormats,\n} ) {\n\tconst registry = useRegistry();\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst ref = useRef();\n\n\tfunction createRecord() {\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\t__unstableIsEditableTree: true,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tprepareEditableTree: __unstableAddInvisibleFormats,\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _valueRef = useRef( value );\n\tconst recordRef = useRef();\n\n\tfunction setRecordFromProps() {\n\t\t_valueRef.current = value;\n\t\trecordRef.current = value;\n\t\tif ( ! ( value instanceof RichTextData ) ) {\n\t\t\trecordRef.current = value\n\t\t\t\t? RichTextData.fromHTMLString( value, { preserveWhiteSpace } )\n\t\t\t\t: RichTextData.empty();\n\t\t}\n\t\t// To do: make rich text internally work with RichTextData.\n\t\trecordRef.current = {\n\t\t\ttext: recordRef.current.text,\n\t\t\tformats: recordRef.current.formats,\n\t\t\treplacements: recordRef.current.replacements,\n\t\t};\n\t\tif ( disableFormats ) {\n\t\t\trecordRef.current.formats = Array( value.length );\n\t\t\trecordRef.current.replacements = Array( value.length );\n\t\t}\n\t\tif ( __unstableAfterParse ) {\n\t\t\trecordRef.current.formats = __unstableAfterParse(\n\t\t\t\trecordRef.current\n\t\t\t);\n\t\t}\n\t\trecordRef.current.start = selectionStart;\n\t\trecordRef.current.end = selectionEnd;\n\t}\n\n\tconst hadSelectionUpdateRef = useRef( false );\n\n\tif ( ! recordRef.current ) {\n\t\thadSelectionUpdateRef.current = isSelected;\n\t\tsetRecordFromProps();\n\t} else if (\n\t\tselectionStart !== recordRef.current.start ||\n\t\tselectionEnd !== recordRef.current.end\n\t) {\n\t\thadSelectionUpdateRef.current = isSelected;\n\t\trecordRef.current = {\n\t\t\t...recordRef.current,\n\t\t\tstart: selectionStart,\n\t\t\tend: selectionEnd,\n\t\t\tactiveFormats: undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object} newRecord The record to sync and apply.\n\t */\n\tfunction handleChange( newRecord ) {\n\t\trecordRef.current = newRecord;\n\t\tapplyRecord( newRecord );\n\n\t\tif ( disableFormats ) {\n\t\t\t_valueRef.current = newRecord.text;\n\t\t} else {\n\t\t\tconst newFormats = __unstableBeforeSerialize\n\t\t\t\t? __unstableBeforeSerialize( newRecord )\n\t\t\t\t: newRecord.formats;\n\t\t\tnewRecord = { ...newRecord, formats: newFormats };\n\t\t\tif ( typeof value === 'string' ) {\n\t\t\t\t_valueRef.current = toHTMLString( {\n\t\t\t\t\tvalue: newRecord,\n\t\t\t\t\tpreserveWhiteSpace,\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\t_valueRef.current = new RichTextData( newRecord );\n\t\t\t}\n\t\t}\n\n\t\tconst { start, end, formats, text } = recordRef.current;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\t// We batch both calls to only attempt to rerender once.\n\t\tregistry.batch( () => {\n\t\t\tonSelectionChange( start, end );\n\t\t\tonChange( _valueRef.current, {\n\t\t\t\t__unstableFormats: formats,\n\t\t\t\t__unstableText: text,\n\t\t\t} );\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction applyFromProps() {\n\t\tsetRecordFromProps();\n\t\tapplyRecord( recordRef.current );\n\t}\n\n\tconst didMountRef = useRef( false );\n\n\t// Value updates must happen synchronously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( didMountRef.current && value !== _valueRef.current ) {\n\t\t\tapplyFromProps();\n\t\t\tforceRender();\n\t\t}\n\t}, [ value ] );\n\n\t// Value updates must happen synchronously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( ! hadSelectionUpdateRef.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ref.current.ownerDocument.activeElement !== ref.current ) {\n\t\t\tref.current.focus();\n\t\t}\n\n\t\tapplyRecord( recordRef.current );\n\t\thadSelectionUpdateRef.current = false;\n\t}, [ hadSelectionUpdateRef.current ] );\n\n\tconst mergedRefs = useMergeRefs( [\n\t\tref,\n\t\tuseDefaultStyle(),\n\t\tuseBoundaryStyle( { record: recordRef } ),\n\t\tuseEventListeners( {\n\t\t\trecord: recordRef,\n\t\t\thandleChange,\n\t\t\tapplyRecord,\n\t\t\tcreateRecord,\n\t\t\tisSelected,\n\t\t\tonSelectionChange,\n\t\t\tforceRender,\n\t\t} ),\n\t\tuseRefEffect( () => {\n\t\t\tapplyFromProps();\n\t\t\tdidMountRef.current = true;\n\t\t}, [ placeholder, ...__unstableDependencies ] ),\n\t] );\n\n\treturn {\n\t\tvalue: recordRef.current,\n\t\t// A function to get the most recent value so event handlers in\n\t\t// useRichText implementations have access to it. For example when\n\t\t// listening to input events, we internally update the state, but this\n\t\t// state is not yet available to the input event handler because React\n\t\t// may re-render asynchronously.\n\t\tgetValue: () => recordRef.current,\n\t\tonChange: handleChange,\n\t\tref: mergedRefs,\n\t};\n}\n\nexport default function __experimentalRichText() {}\n"],"mappings":"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","ignoreList":[]}