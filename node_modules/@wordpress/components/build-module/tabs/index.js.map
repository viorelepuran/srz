{"version":3,"names":["Ariakit","useInstanceId","useEffect","useMemo","isRTL","TabsContext","Tab","TabList","TabPanel","jsx","_jsx","externalToInternalTabId","externalId","instanceId","internalToExternalTabId","internalId","replace","Tabs","Object","assign","selectOnMove","defaultTabId","orientation","onSelect","children","selectedTabId","activeTabId","defaultActiveTabId","onActiveTabIdChange","store","useTabStore","defaultSelectedId","setSelectedId","newSelectedId","selectedId","defaultActiveId","setActiveId","newActiveId","activeId","rtl","items","useStoreState","requestAnimationFrame","focusedElement","element","ownerDocument","activeElement","some","item","id","contextValue","Provider","value","displayName","Context"],"sources":["@wordpress/components/src/tabs/index.tsx"],"sourcesContent":["/**\n * External dependencies\n */\nimport * as Ariakit from '@ariakit/react';\n\n/**\n * WordPress dependencies\n */\nimport { useInstanceId } from '@wordpress/compose';\nimport { useEffect, useMemo } from '@wordpress/element';\nimport { isRTL } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport type { TabsProps } from './types';\nimport { TabsContext } from './context';\nimport { Tab } from './tab';\nimport { TabList } from './tablist';\nimport { TabPanel } from './tabpanel';\n\nfunction externalToInternalTabId(\n\texternalId: string | undefined | null,\n\tinstanceId: string\n) {\n\treturn externalId && `${ instanceId }-${ externalId }`;\n}\n\nfunction internalToExternalTabId(\n\tinternalId: string | undefined | null,\n\tinstanceId: string\n) {\n\treturn typeof internalId === 'string'\n\t\t? internalId.replace( `${ instanceId }-`, '' )\n\t\t: internalId;\n}\n\n/**\n * Tabs is a collection of React components that combine to render\n * an [ARIA-compliant tabs pattern](https://www.w3.org/WAI/ARIA/apg/patterns/tabs/).\n *\n * Tabs organizes content across different screens, data sets, and interactions.\n * It has two sections: a list of tabs, and the view to show when a tab is chosen.\n *\n * `Tabs` itself is a wrapper component and context provider.\n * It is responsible for managing the state of the tabs, and rendering one instance of the `Tabs.TabList` component and one or more instances of the `Tab.TabPanel` component.\n */\nexport const Tabs = Object.assign(\n\tfunction Tabs( {\n\t\tselectOnMove = true,\n\t\tdefaultTabId,\n\t\torientation = 'horizontal',\n\t\tonSelect,\n\t\tchildren,\n\t\tselectedTabId,\n\t\tactiveTabId,\n\t\tdefaultActiveTabId,\n\t\tonActiveTabIdChange,\n\t}: TabsProps ) {\n\t\tconst instanceId = useInstanceId( Tabs, 'tabs' );\n\t\tconst store = Ariakit.useTabStore( {\n\t\t\tselectOnMove,\n\t\t\torientation,\n\t\t\tdefaultSelectedId: externalToInternalTabId(\n\t\t\t\tdefaultTabId,\n\t\t\t\tinstanceId\n\t\t\t),\n\t\t\tsetSelectedId: ( newSelectedId ) => {\n\t\t\t\tonSelect?.(\n\t\t\t\t\tinternalToExternalTabId( newSelectedId, instanceId )\n\t\t\t\t);\n\t\t\t},\n\t\t\tselectedId: externalToInternalTabId( selectedTabId, instanceId ),\n\t\t\tdefaultActiveId: externalToInternalTabId(\n\t\t\t\tdefaultActiveTabId,\n\t\t\t\tinstanceId\n\t\t\t),\n\t\t\tsetActiveId: ( newActiveId ) => {\n\t\t\t\tonActiveTabIdChange?.(\n\t\t\t\t\tinternalToExternalTabId( newActiveId, instanceId )\n\t\t\t\t);\n\t\t\t},\n\t\t\tactiveId: externalToInternalTabId( activeTabId, instanceId ),\n\t\t\trtl: isRTL(),\n\t\t} );\n\n\t\tconst { items, activeId } = Ariakit.useStoreState( store );\n\t\tconst { setActiveId } = store;\n\n\t\tuseEffect( () => {\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tconst focusedElement =\n\t\t\t\t\titems?.[ 0 ]?.element?.ownerDocument.activeElement;\n\n\t\t\t\tif (\n\t\t\t\t\t! focusedElement ||\n\t\t\t\t\t! items.some( ( item ) => focusedElement === item.element )\n\t\t\t\t) {\n\t\t\t\t\treturn; // Return early if no tabs are focused.\n\t\t\t\t}\n\n\t\t\t\t// If, after ariakit re-computes the active tab, that tab doesn't match\n\t\t\t\t// the currently focused tab, then we force an update to ariakit to avoid\n\t\t\t\t// any mismatches, especially when navigating to previous/next tab with\n\t\t\t\t// arrow keys.\n\t\t\t\tif ( activeId !== focusedElement.id ) {\n\t\t\t\t\tsetActiveId( focusedElement.id );\n\t\t\t\t}\n\t\t\t} );\n\t\t}, [ activeId, items, setActiveId ] );\n\n\t\tconst contextValue = useMemo(\n\t\t\t() => ( {\n\t\t\t\tstore,\n\t\t\t\tinstanceId,\n\t\t\t} ),\n\t\t\t[ store, instanceId ]\n\t\t);\n\n\t\treturn (\n\t\t\t<TabsContext.Provider value={ contextValue }>\n\t\t\t\t{ children }\n\t\t\t</TabsContext.Provider>\n\t\t);\n\t},\n\t{\n\t\t/**\n\t\t * Renders a single tab.\n\t\t *\n\t\t * The currently active tab receives default styling that can be\n\t\t * overridden with CSS targeting `[aria-selected=\"true\"]`.\n\t\t */\n\t\tTab: Object.assign( Tab, {\n\t\t\tdisplayName: 'Tabs.Tab',\n\t\t} ),\n\t\t/**\n\t\t * A wrapper component for the `Tab` components.\n\t\t *\n\t\t * It is responsible for rendering the list of tabs.\n\t\t */\n\t\tTabList: Object.assign( TabList, {\n\t\t\tdisplayName: 'Tabs.TabList',\n\t\t} ),\n\t\t/**\n\t\t * Renders the content to display for a single tab once that tab is selected.\n\t\t */\n\t\tTabPanel: Object.assign( TabPanel, {\n\t\t\tdisplayName: 'Tabs.TabPanel',\n\t\t} ),\n\t\tContext: Object.assign( TabsContext, {\n\t\t\tdisplayName: 'Tabs.Context',\n\t\t} ),\n\t}\n);\n"],"mappings":"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","ignoreList":[]}