{"version":3,"names":["View","Text","TouchableWithoutFeedback","__","useState","useContext","usePreferredColorSchemeStyle","useRoute","useNavigation","ColorPalette","ColorIndicator","NavBar","SegmentedControls","colorsUtils","PanelBody","BottomSheetContext","ColorControl","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HIT_SLOP","top","bottom","left","right","PaletteScreen","route","navigation","shouldEnableBottomSheetScroll","label","onColorChange","onGradientChange","onColorCleared","colorValue","defaultSettings","hideNavigation","params","segments","isGradient","currentValue","setCurrentValue","isGradientColor","selectedSegmentIndex","currentSegment","setCurrentSegment","isGradientSegment","currentSegmentColors","colors","gradients","allAvailableColors","allAvailableGradients","flatMap","filter","Boolean","horizontalSeparatorStyle","horizontalSeparator","horizontalSeparatorDark","clearButtonStyle","clearButton","clearButtonDark","selectedColorTextStyle","colorText","colorTextDark","isSolidSegment","isCustomGadientShown","setColor","color","onClear","undefined","onCustomPress","navigate","screens","picker","gradientPicker","getClearButton","accessibilityLabel","onPress","hitSlop","children","style","clearButtonContainer","getFooter","segmentHandler","selectedIndex","indexOf","addonLeft","colorIndicator","addonRight","footer","flex","maxFontSizeMultiplier","selectable","toUpperCase","selectColorText","BackButton","goBack","Heading","colorPalettes","map","palette","paletteKey","paletteSettings","allColors","allGradients","enableCustomColor","name","activeColor","withColorIndicator"],"sources":["@wordpress/components/src/mobile/color-settings/palette.screen.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { View, Text, TouchableWithoutFeedback } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState, useContext } from '@wordpress/element';\nimport { usePreferredColorSchemeStyle } from '@wordpress/compose';\nimport { useRoute, useNavigation } from '@react-navigation/native';\n\n/**\n * Internal dependencies\n */\nimport ColorPalette from '../../color-palette';\nimport ColorIndicator from '../../color-indicator';\nimport NavBar from '../bottom-sheet/nav-bar';\nimport SegmentedControls from '../segmented-control';\nimport { colorsUtils } from './utils';\nimport PanelBody from '../../panel/body';\nimport { BottomSheetContext } from '../bottom-sheet/bottom-sheet-context';\nimport ColorControl from '../../color-control';\n\nimport styles from './style.scss';\n\nconst HIT_SLOP = { top: 8, bottom: 8, left: 8, right: 8 };\n\nconst PaletteScreen = () => {\n\tconst route = useRoute();\n\tconst navigation = useNavigation();\n\tconst { shouldEnableBottomSheetScroll } = useContext( BottomSheetContext );\n\tconst {\n\t\tlabel,\n\t\tonColorChange,\n\t\tonGradientChange,\n\t\tonColorCleared,\n\t\tcolorValue,\n\t\tdefaultSettings,\n\t\thideNavigation = false,\n\t} = route.params || {};\n\tconst { segments, isGradient } = colorsUtils;\n\tconst [ currentValue, setCurrentValue ] = useState( colorValue );\n\tconst isGradientColor = isGradient( currentValue );\n\tconst selectedSegmentIndex = isGradientColor ? 1 : 0;\n\n\tconst [ currentSegment, setCurrentSegment ] = useState(\n\t\tsegments[ selectedSegmentIndex ]\n\t);\n\tconst isGradientSegment = currentSegment === colorsUtils.segments[ 1 ];\n\tconst currentSegmentColors = ! isGradientSegment\n\t\t? defaultSettings.colors\n\t\t: defaultSettings.gradients;\n\tconst allAvailableColors = defaultSettings?.allAvailableColors || [];\n\tconst allAvailableGradients = currentSegmentColors\n\t\t.flatMap( ( { gradients } ) => gradients )\n\t\t.filter( Boolean );\n\n\tconst horizontalSeparatorStyle = usePreferredColorSchemeStyle(\n\t\tstyles.horizontalSeparator,\n\t\tstyles.horizontalSeparatorDark\n\t);\n\tconst clearButtonStyle = usePreferredColorSchemeStyle(\n\t\tstyles.clearButton,\n\t\tstyles.clearButtonDark\n\t);\n\tconst selectedColorTextStyle = usePreferredColorSchemeStyle(\n\t\tstyles.colorText,\n\t\tstyles.colorTextDark\n\t);\n\n\tconst isSolidSegment = currentSegment === segments[ 0 ];\n\tconst isCustomGadientShown = ! isSolidSegment && isGradientColor;\n\n\tconst setColor = ( color ) => {\n\t\tsetCurrentValue( color );\n\t\tif ( isSolidSegment && onColorChange && onGradientChange ) {\n\t\t\tonColorChange( color );\n\t\t} else if ( isSolidSegment && onColorChange ) {\n\t\t\tonColorChange( color );\n\t\t} else if ( ! isSolidSegment && onGradientChange ) {\n\t\t\tonGradientChange( color );\n\t\t}\n\t};\n\n\tfunction onClear() {\n\t\tsetCurrentValue( undefined );\n\n\t\tif ( onColorCleared ) {\n\t\t\tonColorCleared();\n\t\t}\n\t}\n\n\tfunction onCustomPress() {\n\t\tif ( isSolidSegment ) {\n\t\t\tnavigation.navigate( colorsUtils.screens.picker, {\n\t\t\t\tcurrentValue,\n\t\t\t\tsetColor,\n\t\t\t} );\n\t\t} else {\n\t\t\tnavigation.navigate( colorsUtils.screens.gradientPicker, {\n\t\t\t\tsetColor,\n\t\t\t\tisGradientColor,\n\t\t\t\tcurrentValue,\n\t\t\t} );\n\t\t}\n\t}\n\n\tfunction getClearButton() {\n\t\treturn (\n\t\t\t<TouchableWithoutFeedback\n\t\t\t\taccessibilityLabel={ __( 'Clear selected color' ) }\n\t\t\t\tonPress={ onClear }\n\t\t\t\thitSlop={ HIT_SLOP }\n\t\t\t>\n\t\t\t\t<View style={ styles.clearButtonContainer }>\n\t\t\t\t\t<Text style={ clearButtonStyle }>{ __( 'Reset' ) }</Text>\n\t\t\t\t</View>\n\t\t\t</TouchableWithoutFeedback>\n\t\t);\n\t}\n\n\tfunction getFooter() {\n\t\tif ( onGradientChange ) {\n\t\t\treturn (\n\t\t\t\t<SegmentedControls\n\t\t\t\t\tsegments={ segments }\n\t\t\t\t\tsegmentHandler={ setCurrentSegment }\n\t\t\t\t\tselectedIndex={ segments.indexOf( currentSegment ) }\n\t\t\t\t\taddonLeft={\n\t\t\t\t\t\tcurrentValue && (\n\t\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\taddonRight={ currentValue && getClearButton() }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<View style={ styles.footer }>\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && (\n\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t\t{ currentValue ? (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={ selectedColorTextStyle }\n\t\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t\t\tselectable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ currentValue.toUpperCase() }\n\t\t\t\t\t</Text>\n\t\t\t\t) : (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={ styles.selectColorText }\n\t\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Select a color above' ) }\n\t\t\t\t\t</Text>\n\t\t\t\t) }\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && getClearButton() }\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n\treturn (\n\t\t<View>\n\t\t\t{ ! hideNavigation && (\n\t\t\t\t<NavBar>\n\t\t\t\t\t<NavBar.BackButton onPress={ navigation.goBack } />\n\t\t\t\t\t<NavBar.Heading>{ label } </NavBar.Heading>\n\t\t\t\t</NavBar>\n\t\t\t) }\n\n\t\t\t<View style={ styles.colorPalettes }>\n\t\t\t\t{ currentSegmentColors.map( ( palette, paletteKey ) => {\n\t\t\t\t\tconst paletteSettings = {\n\t\t\t\t\t\tcolors: palette.colors,\n\t\t\t\t\t\tgradients: palette.gradients,\n\t\t\t\t\t\tallColors: allAvailableColors,\n\t\t\t\t\t\tallGradients: allAvailableGradients,\n\t\t\t\t\t};\n\t\t\t\t\t// Limit to show the custom indicator to the first available palette\n\t\t\t\t\tconst enableCustomColor = paletteKey === 0;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\t\tenableCustomColor={ enableCustomColor }\n\t\t\t\t\t\t\tlabel={ palette.name }\n\t\t\t\t\t\t\tkey={ paletteKey }\n\t\t\t\t\t\t\tsetColor={ setColor }\n\t\t\t\t\t\t\tactiveColor={ currentValue }\n\t\t\t\t\t\t\tisGradientColor={ isGradientColor }\n\t\t\t\t\t\t\tcurrentSegment={ currentSegment }\n\t\t\t\t\t\t\tonCustomPress={ onCustomPress }\n\t\t\t\t\t\t\tshouldEnableBottomSheetScroll={\n\t\t\t\t\t\t\t\tshouldEnableBottomSheetScroll\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefaultSettings={ paletteSettings }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</View>\n\n\t\t\t{ isCustomGadientShown && (\n\t\t\t\t<>\n\t\t\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t\t\t<PanelBody>\n\t\t\t\t\t\t<ColorControl\n\t\t\t\t\t\t\tlabel={ __( 'Customize Gradient' ) }\n\t\t\t\t\t\t\tonPress={ onCustomPress }\n\t\t\t\t\t\t\twithColorIndicator={ false }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t{ getFooter() }\n\t\t</View>\n\t);\n};\n\nexport default PaletteScreen;\n"],"mappings":"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","ignoreList":[]}