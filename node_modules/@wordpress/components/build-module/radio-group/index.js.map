{"version":3,"names":["Ariakit","deprecated","useMemo","forwardRef","isRTL","ButtonGroup","RadioGroupContext","jsx","_jsx","UnforwardedRadioGroup","label","checked","defaultChecked","disabled","onChange","children","props","ref","radioStore","useRadioStore","value","defaultValue","setValue","newValue","undefined","rtl","contextValue","store","alternative","since","Provider","RadioGroup","render","__shouldNotWarnDeprecated"],"sources":["@wordpress/components/src/radio-group/index.tsx"],"sourcesContent":["/**\n * External dependencies\n */\nimport * as Ariakit from '@ariakit/react';\n\n/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport { useMemo, forwardRef } from '@wordpress/element';\nimport { isRTL } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport ButtonGroup from '../button-group';\nimport type { WordPressComponentProps } from '../context';\nimport { RadioGroupContext } from './context';\nimport type { RadioGroupProps } from './types';\n\nfunction UnforwardedRadioGroup(\n\t{\n\t\tlabel,\n\t\tchecked,\n\t\tdefaultChecked,\n\t\tdisabled,\n\t\tonChange,\n\t\tchildren,\n\t\t...props\n\t}: WordPressComponentProps< RadioGroupProps, 'div', false >,\n\tref: React.ForwardedRef< any >\n) {\n\tconst radioStore = Ariakit.useRadioStore( {\n\t\tvalue: checked,\n\t\tdefaultValue: defaultChecked,\n\t\tsetValue: ( newValue ) => {\n\t\t\tonChange?.( newValue ?? undefined );\n\t\t},\n\t\trtl: isRTL(),\n\t} );\n\n\tconst contextValue = useMemo(\n\t\t() => ( {\n\t\t\tstore: radioStore,\n\t\t\tdisabled,\n\t\t} ),\n\t\t[ radioStore, disabled ]\n\t);\n\n\tdeprecated( 'wp.components.__experimentalRadioGroup', {\n\t\talternative:\n\t\t\t'wp.components.RadioControl or wp.components.__experimentalToggleGroupControl',\n\t\tsince: '6.8',\n\t} );\n\n\treturn (\n\t\t<RadioGroupContext.Provider value={ contextValue }>\n\t\t\t<Ariakit.RadioGroup\n\t\t\t\tstore={ radioStore }\n\t\t\t\trender={\n\t\t\t\t\t<ButtonGroup __shouldNotWarnDeprecated>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t}\n\t\t\t\taria-label={ label }\n\t\t\t\tref={ ref }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t</RadioGroupContext.Provider>\n\t);\n}\n\n/**\n * @deprecated Use `RadioControl` or `ToggleGroupControl` instead.\n */\nexport const RadioGroup = forwardRef( UnforwardedRadioGroup );\nexport default RadioGroup;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,KAAKA,OAAO,MAAM,gBAAgB;;AAEzC;AACA;AACA;AACA,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,SAASC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AACxD,SAASC,KAAK,QAAQ,iBAAiB;;AAEvC;AACA;AACA;AACA,OAAOC,WAAW,MAAM,iBAAiB;AAEzC,SAASC,iBAAiB,QAAQ,WAAW;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAG9C,SAASC,qBAAqBA,CAC7B;EACCC,KAAK;EACLC,OAAO;EACPC,cAAc;EACdC,QAAQ;EACRC,QAAQ;EACRC,QAAQ;EACR,GAAGC;AACsD,CAAC,EAC3DC,GAA8B,EAC7B;EACD,MAAMC,UAAU,GAAGlB,OAAO,CAACmB,aAAa,CAAE;IACzCC,KAAK,EAAET,OAAO;IACdU,YAAY,EAAET,cAAc;IAC5BU,QAAQ,EAAIC,QAAQ,IAAM;MACzBT,QAAQ,GAAIS,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIC,SAAU,CAAC;IACpC,CAAC;IACDC,GAAG,EAAErB,KAAK,CAAC;EACZ,CAAE,CAAC;EAEH,MAAMsB,YAAY,GAAGxB,OAAO,CAC3B,OAAQ;IACPyB,KAAK,EAAET,UAAU;IACjBL;EACD,CAAC,CAAE,EACH,CAAEK,UAAU,EAAEL,QAAQ,CACvB,CAAC;EAEDZ,UAAU,CAAE,wCAAwC,EAAE;IACrD2B,WAAW,EACV,8EAA8E;IAC/EC,KAAK,EAAE;EACR,CAAE,CAAC;EAEH,oBACCrB,IAAA,CAACF,iBAAiB,CAACwB,QAAQ;IAACV,KAAK,EAAGM,YAAc;IAAAX,QAAA,eACjDP,IAAA,CAACR,OAAO,CAAC+B,UAAU;MAClBJ,KAAK,EAAGT,UAAY;MACpBc,MAAM,eACLxB,IAAA,CAACH,WAAW;QAAC4B,yBAAyB;QAAAlB,QAAA,EACnCA;MAAQ,CACE,CACb;MACD,cAAaL,KAAO;MACpBO,GAAG,EAAGA,GAAK;MAAA,GACND;IAAK,CACV;EAAC,CACyB,CAAC;AAE/B;;AAEA;AACA;AACA;AACA,OAAO,MAAMe,UAAU,GAAG5B,UAAU,CAAEM,qBAAsB,CAAC;AAC7D,eAAesB,UAAU","ignoreList":[]}