{"version":3,"names":["Ariakit","useInstanceId","useLayoutEffect","useMemo","useRef","contextConnect","useContextSystem","useToggleGroupControlContext","styles","useCx","Tooltip","jsx","_jsx","Fragment","_Fragment","ButtonContentView","LabelView","WithToolTip","showTooltip","text","children","placement","ToggleGroupControlOptionBase","props","forwardedRef","toggleGroupControlContext","id","baseId","buttonProps","isBlock","isDeselectable","size","className","isIcon","value","disabled","otherButtonProps","isPressed","cx","labelViewClasses","labelBlock","itemClasses","buttonView","buttonOnClick","setValue","undefined","commonProps","ref","labelRef","current","setSelectedElement","type","onClick","Radio","onFocusVisible","selectedValueIsEmpty","activeItemIsNotFirstItem","render","ConnectedToggleGroupControlOptionBase"],"sources":["@wordpress/components/src/toggle-group-control/toggle-group-control-option-base/component.tsx"],"sourcesContent":["/**\n * External dependencies\n */\nimport type { ForwardedRef } from 'react';\nimport * as Ariakit from '@ariakit/react';\n\n/**\n * WordPress dependencies\n */\nimport { useInstanceId } from '@wordpress/compose';\nimport { useLayoutEffect, useMemo, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport type { WordPressComponentProps } from '../../context';\nimport { contextConnect, useContextSystem } from '../../context';\nimport type {\n\tToggleGroupControlOptionBaseProps,\n\tWithToolTipProps,\n} from '../types';\nimport { useToggleGroupControlContext } from '../context';\nimport * as styles from './styles';\nimport { useCx } from '../../utils/hooks';\nimport Tooltip from '../../tooltip';\n\nconst { ButtonContentView, LabelView } = styles;\n\nconst WithToolTip = ( { showTooltip, text, children }: WithToolTipProps ) => {\n\tif ( showTooltip && text ) {\n\t\treturn (\n\t\t\t<Tooltip text={ text } placement=\"top\">\n\t\t\t\t{ children }\n\t\t\t</Tooltip>\n\t\t);\n\t}\n\treturn <>{ children }</>;\n};\n\nfunction ToggleGroupControlOptionBase(\n\tprops: Omit<\n\t\tWordPressComponentProps<\n\t\t\tToggleGroupControlOptionBaseProps,\n\t\t\t'button',\n\t\t\tfalse\n\t\t>,\n\t\t// the element's id is generated internally\n\t\t| 'id'\n\t\t// due to how the component works, only the `disabled` prop should be used\n\t\t| 'aria-disabled'\n\t>,\n\tforwardedRef: ForwardedRef< any >\n) {\n\tconst toggleGroupControlContext = useToggleGroupControlContext();\n\n\tconst id = useInstanceId(\n\t\tToggleGroupControlOptionBase,\n\t\ttoggleGroupControlContext.baseId || 'toggle-group-control-option-base'\n\t);\n\n\tconst buttonProps = useContextSystem(\n\t\t{ ...props, id },\n\t\t'ToggleGroupControlOptionBase'\n\t);\n\n\tconst {\n\t\tisBlock = false,\n\t\tisDeselectable = false,\n\t\tsize = 'default',\n\t} = toggleGroupControlContext;\n\n\tconst {\n\t\tclassName,\n\t\tisIcon = false,\n\t\tvalue,\n\t\tchildren,\n\t\tshowTooltip = false,\n\t\tdisabled,\n\t\t...otherButtonProps\n\t} = buttonProps;\n\n\tconst isPressed = toggleGroupControlContext.value === value;\n\tconst cx = useCx();\n\tconst labelViewClasses = useMemo(\n\t\t() => cx( isBlock && styles.labelBlock ),\n\t\t[ cx, isBlock ]\n\t);\n\tconst itemClasses = useMemo(\n\t\t() =>\n\t\t\tcx(\n\t\t\t\tstyles.buttonView( {\n\t\t\t\t\tisDeselectable,\n\t\t\t\t\tisIcon,\n\t\t\t\t\tisPressed,\n\t\t\t\t\tsize,\n\t\t\t\t} ),\n\t\t\t\tclassName\n\t\t\t),\n\t\t[ cx, isDeselectable, isIcon, isPressed, size, className ]\n\t);\n\n\tconst buttonOnClick = () => {\n\t\tif ( isDeselectable && isPressed ) {\n\t\t\ttoggleGroupControlContext.setValue( undefined );\n\t\t} else {\n\t\t\ttoggleGroupControlContext.setValue( value );\n\t\t}\n\t};\n\n\tconst commonProps = {\n\t\t...otherButtonProps,\n\t\tclassName: itemClasses,\n\t\t'data-value': value,\n\t\tref: forwardedRef,\n\t};\n\n\tconst labelRef = useRef< HTMLDivElement | null >( null );\n\tuseLayoutEffect( () => {\n\t\tif ( isPressed && labelRef.current ) {\n\t\t\ttoggleGroupControlContext.setSelectedElement( labelRef.current );\n\t\t}\n\t}, [ isPressed, toggleGroupControlContext ] );\n\n\treturn (\n\t\t<LabelView ref={ labelRef } className={ labelViewClasses }>\n\t\t\t<WithToolTip\n\t\t\t\tshowTooltip={ showTooltip }\n\t\t\t\ttext={ otherButtonProps[ 'aria-label' ] }\n\t\t\t>\n\t\t\t\t{ isDeselectable ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\t{ ...commonProps }\n\t\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t\taria-pressed={ isPressed }\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={ buttonOnClick }\n\t\t\t\t\t>\n\t\t\t\t\t\t<ButtonContentView>{ children }</ButtonContentView>\n\t\t\t\t\t</button>\n\t\t\t\t) : (\n\t\t\t\t\t<Ariakit.Radio\n\t\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t\tonFocusVisible={ () => {\n\t\t\t\t\t\t\tconst selectedValueIsEmpty =\n\t\t\t\t\t\t\t\ttoggleGroupControlContext.value === null ||\n\t\t\t\t\t\t\t\ttoggleGroupControlContext.value === '';\n\n\t\t\t\t\t\t\t// Conditions ensure that the first visible focus to a radio group\n\t\t\t\t\t\t\t// without a selected option will not automatically select the option.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t! selectedValueIsEmpty ||\n\t\t\t\t\t\t\t\ttoggleGroupControlContext.activeItemIsNotFirstItem?.()\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\ttoggleGroupControlContext.setValue( value );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t\trender={ <button type=\"button\" { ...commonProps } /> }\n\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t>\n\t\t\t\t\t\t<ButtonContentView>{ children }</ButtonContentView>\n\t\t\t\t\t</Ariakit.Radio>\n\t\t\t\t) }\n\t\t\t</WithToolTip>\n\t\t</LabelView>\n\t);\n}\n\n/**\n * `ToggleGroupControlOptionBase` is a form component and is meant to be used as an internal,\n * generic component for any children of `ToggleGroupControl`.\n *\n * @example\n * ```jsx\n * import {\n *   __experimentalToggleGroupControl as ToggleGroupControl,\n *   __experimentalToggleGroupControlOptionBase as ToggleGroupControlOptionBase,\n * } from '@wordpress/components';\n *\n * function Example() {\n *   return (\n *     <ToggleGroupControl label=\"my label\" value=\"vertical\" isBlock>\n *       <ToggleGroupControlOption value=\"horizontal\" label=\"Horizontal\" />\n *       <ToggleGroupControlOption value=\"vertical\" label=\"Vertical\" />\n *     </ToggleGroupControl>\n *   );\n * }\n * ```\n */\nconst ConnectedToggleGroupControlOptionBase = contextConnect(\n\tToggleGroupControlOptionBase,\n\t'ToggleGroupControlOptionBase'\n);\n\nexport default ConnectedToggleGroupControlOptionBase;\n"],"mappings":"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","ignoreList":[]}