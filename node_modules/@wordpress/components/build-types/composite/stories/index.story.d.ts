/**
 * External dependencies
 */
import type { Meta, StoryObj } from '@storybook/react';
import { Composite } from '..';
declare const meta: Meta<typeof Composite>;
export default meta;
export declare const Default: StoryObj<typeof Composite>;
export declare const Groups: StoryObj<typeof Composite>;
export declare const Grid: StoryObj<typeof Composite>;
export declare const Hover: StoryObj<typeof Composite>;
export declare const Typeahead: StoryObj<typeof Composite>;
export declare const WithSlotFill: StoryObj<typeof Composite>;
/**
 * Combining the `Tooltip` and `Composite` component has a few caveats. And while there are a few ways to compose these two components, our recommendation is to render `Composite.Item` as a child of `Tooltip`.
 *
 * ```jsx
 * // ðŸ”´ Does not work
 * <Composite.Item
 *   render={
 *     <Tooltip text="Tooltip">
 *       <button>Item</button>
 *     </Tooltip>
 *   }
 * />
 *
 * // ðŸŸ¢ Good
 * <Tooltip text="Tooltip one">
 *   <Composite.Item>
 *     Item one
 *   </Composite.Item>
 * </Tooltip>
 * ```
 */
export declare const WithTooltips: StoryObj<typeof Composite>;
//# sourceMappingURL=index.story.d.ts.map