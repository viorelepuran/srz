{"version":3,"names":["_a11y","require","_icons","_i18n","_dropdownMenu","_interopRequireDefault","_menuGroup","_menuItem","_hStack","_heading","_hook","_context","_styles","_jsxRuntime","DefaultControlsGroup","itemClassName","items","toggleItem","length","resetSuffix","jsx","ResetLabel","children","__","Fragment","map","label","hasValue","default","className","role","sprintf","onClick","speak","suffix","icon","check","isSelected","OptionalControlsGroup","itemLabel","_x","ToolsPanelHeader","props","forwardedRef","areAllOptionalControlsHidden","defaultControlsItemClassName","dropdownMenuClassName","hasMenuItems","headingClassName","headingLevel","labelText","menuItems","resetAll","dropdownMenuProps","headerProps","useToolsPanelHeader","defaultItems","Object","entries","optionalItems","optional","dropDownMenuIcon","plus","moreVertical","dropDownMenuLabelText","dropdownMenuDescriptionText","undefined","canResetAll","some","jsxs","HStack","ref","Heading","level","menuProps","toggleProps","size","description","variant","ConnectedToolsPanelHeader","contextConnect","_default","exports"],"sources":["@wordpress/components/src/tools-panel/tools-panel-header/component.tsx"],"sourcesContent":["/**\n * External dependencies\n */\nimport type { ForwardedRef } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { speak } from '@wordpress/a11y';\nimport { check, moreVertical, plus } from '@wordpress/icons';\nimport { __, _x, sprintf } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport DropdownMenu from '../../dropdown-menu';\nimport MenuGroup from '../../menu-group';\nimport MenuItem from '../../menu-item';\nimport { HStack } from '../../h-stack';\nimport { Heading } from '../../heading';\nimport { useToolsPanelHeader } from './hook';\nimport type { WordPressComponentProps } from '../../context';\nimport { contextConnect } from '../../context';\nimport { ResetLabel } from '../styles';\nimport type {\n\tToolsPanelControlsGroupProps,\n\tToolsPanelHeaderProps,\n} from '../types';\n\nconst DefaultControlsGroup = ( {\n\titemClassName,\n\titems,\n\ttoggleItem,\n}: ToolsPanelControlsGroupProps ) => {\n\tif ( ! items.length ) {\n\t\treturn null;\n\t}\n\n\tconst resetSuffix = <ResetLabel aria-hidden>{ __( 'Reset' ) }</ResetLabel>;\n\n\treturn (\n\t\t<>\n\t\t\t{ items.map( ( [ label, hasValue ] ) => {\n\t\t\t\tif ( hasValue ) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tkey={ label }\n\t\t\t\t\t\t\tclassName={ itemClassName }\n\t\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\t\tlabel={ sprintf(\n\t\t\t\t\t\t\t\t// translators: %s: The name of the control being reset e.g. \"Padding\".\n\t\t\t\t\t\t\t\t__( 'Reset %s' ),\n\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\ttoggleItem( label );\n\t\t\t\t\t\t\t\tspeak(\n\t\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t\t// translators: %s: The name of the control being reset e.g. \"Padding\".\n\t\t\t\t\t\t\t\t\t\t__( '%s reset to default' ),\n\t\t\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t'assertive'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tsuffix={ resetSuffix }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tkey={ label }\n\t\t\t\t\t\ticon={ check }\n\t\t\t\t\t\tclassName={ itemClassName }\n\t\t\t\t\t\trole=\"menuitemcheckbox\"\n\t\t\t\t\t\tisSelected\n\t\t\t\t\t\taria-disabled\n\t\t\t\t\t>\n\t\t\t\t\t\t{ label }\n\t\t\t\t\t</MenuItem>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</>\n\t);\n};\n\nconst OptionalControlsGroup = ( {\n\titems,\n\ttoggleItem,\n}: ToolsPanelControlsGroupProps ) => {\n\tif ( ! items.length ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ items.map( ( [ label, isSelected ] ) => {\n\t\t\t\tconst itemLabel = isSelected\n\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t// translators: %s: The name of the control being hidden and reset e.g. \"Padding\".\n\t\t\t\t\t\t\t__( 'Hide and reset %s' ),\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t  )\n\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t// translators: %s: The name of the control to display e.g. \"Padding\".\n\t\t\t\t\t\t\t_x( 'Show %s', 'input control' ),\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t  );\n\n\t\t\t\treturn (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tkey={ label }\n\t\t\t\t\t\ticon={ isSelected ? check : null }\n\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\tlabel={ itemLabel }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tif ( isSelected ) {\n\t\t\t\t\t\t\t\tspeak(\n\t\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t\t// translators: %s: The name of the control being reset e.g. \"Padding\".\n\t\t\t\t\t\t\t\t\t\t__( '%s hidden and reset to default' ),\n\t\t\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t'assertive'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tspeak(\n\t\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t\t// translators: %s: The name of the control being reset e.g. \"Padding\".\n\t\t\t\t\t\t\t\t\t\t__( '%s is now visible' ),\n\t\t\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t'assertive'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttoggleItem( label );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\trole=\"menuitemcheckbox\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ label }\n\t\t\t\t\t</MenuItem>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</>\n\t);\n};\n\nconst ToolsPanelHeader = (\n\tprops: WordPressComponentProps< ToolsPanelHeaderProps, 'h2' >,\n\tforwardedRef: ForwardedRef< any >\n) => {\n\tconst {\n\t\tareAllOptionalControlsHidden,\n\t\tdefaultControlsItemClassName,\n\t\tdropdownMenuClassName,\n\t\thasMenuItems,\n\t\theadingClassName,\n\t\theadingLevel = 2,\n\t\tlabel: labelText,\n\t\tmenuItems,\n\t\tresetAll,\n\t\ttoggleItem,\n\t\tdropdownMenuProps,\n\t\t...headerProps\n\t} = useToolsPanelHeader( props );\n\n\tif ( ! labelText ) {\n\t\treturn null;\n\t}\n\n\tconst defaultItems = Object.entries( menuItems?.default || {} );\n\tconst optionalItems = Object.entries( menuItems?.optional || {} );\n\tconst dropDownMenuIcon = areAllOptionalControlsHidden ? plus : moreVertical;\n\tconst dropDownMenuLabelText = sprintf(\n\t\t// translators: %s: The name of the tool e.g. \"Color\" or \"Typography\".\n\t\t_x( '%s options', 'Button label to reveal tool panel options' ),\n\t\tlabelText\n\t);\n\tconst dropdownMenuDescriptionText = areAllOptionalControlsHidden\n\t\t? __( 'All options are currently hidden' )\n\t\t: undefined;\n\n\tconst canResetAll = [ ...defaultItems, ...optionalItems ].some(\n\t\t( [ , isSelected ] ) => isSelected\n\t);\n\n\treturn (\n\t\t<HStack { ...headerProps } ref={ forwardedRef }>\n\t\t\t<Heading level={ headingLevel } className={ headingClassName }>\n\t\t\t\t{ labelText }\n\t\t\t</Heading>\n\t\t\t{ hasMenuItems && (\n\t\t\t\t<DropdownMenu\n\t\t\t\t\t{ ...dropdownMenuProps }\n\t\t\t\t\ticon={ dropDownMenuIcon }\n\t\t\t\t\tlabel={ dropDownMenuLabelText }\n\t\t\t\t\tmenuProps={ { className: dropdownMenuClassName } }\n\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\tsize: 'small',\n\t\t\t\t\t\tdescription: dropdownMenuDescriptionText,\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ () => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<MenuGroup label={ labelText }>\n\t\t\t\t\t\t\t\t<DefaultControlsGroup\n\t\t\t\t\t\t\t\t\titems={ defaultItems }\n\t\t\t\t\t\t\t\t\ttoggleItem={ toggleItem }\n\t\t\t\t\t\t\t\t\titemClassName={\n\t\t\t\t\t\t\t\t\t\tdefaultControlsItemClassName\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<OptionalControlsGroup\n\t\t\t\t\t\t\t\t\titems={ optionalItems }\n\t\t\t\t\t\t\t\t\ttoggleItem={ toggleItem }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\taria-disabled={ ! canResetAll }\n\t\t\t\t\t\t\t\t\t// @ts-expect-error - TODO: If this \"tertiary\" style is something we really want to allow on MenuItem,\n\t\t\t\t\t\t\t\t\t// we should rename it and explicitly allow it as an official API. All the other Button variants\n\t\t\t\t\t\t\t\t\t// don't make sense in a MenuItem context, and should be disallowed.\n\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tif ( canResetAll ) {\n\t\t\t\t\t\t\t\t\t\t\tresetAll();\n\t\t\t\t\t\t\t\t\t\t\tspeak(\n\t\t\t\t\t\t\t\t\t\t\t\t__( 'All options reset' ),\n\t\t\t\t\t\t\t\t\t\t\t\t'assertive'\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Reset all' ) }\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</DropdownMenu>\n\t\t\t) }\n\t\t</HStack>\n\t);\n};\n\nconst ConnectedToolsPanelHeader = contextConnect(\n\tToolsPanelHeader,\n\t'ToolsPanelHeader'\n);\n\nexport default ConnectedToolsPanelHeader;\n"],"mappings":"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","ignoreList":[]}