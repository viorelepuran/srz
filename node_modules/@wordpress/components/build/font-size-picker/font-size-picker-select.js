"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _i18n = require("@wordpress/i18n");
var _customSelectControl = _interopRequireDefault(require("../custom-select-control"));
var _utils = require("./utils");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const DEFAULT_OPTION = {
  key: 'default',
  name: (0, _i18n.__)('Default'),
  value: undefined
};
const FontSizePickerSelect = props => {
  var _options$find;
  const {
    __next40pxDefaultSize,
    fontSizes,
    value,
    size,
    onChange
  } = props;
  const options = [DEFAULT_OPTION, ...fontSizes.map(fontSize => {
    let hint;
    if ((0, _utils.isSimpleCssValue)(fontSize.size)) {
      hint = String(fontSize.size);
    }
    return {
      key: fontSize.slug,
      name: fontSize.name || fontSize.slug,
      value: fontSize.size,
      hint
    };
  })];
  const selectedOption = (_options$find = options.find(option => option.value === value)) !== null && _options$find !== void 0 ? _options$find : DEFAULT_OPTION;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_customSelectControl.default, {
    __next40pxDefaultSize: __next40pxDefaultSize,
    __shouldNotWarnDeprecated36pxSize: true,
    className: "components-font-size-picker__select",
    label: (0, _i18n.__)('Font size'),
    hideLabelFromVision: true,
    describedBy: (0, _i18n.sprintf)(
    // translators: %s: Currently selected font size.
    (0, _i18n.__)('Currently selected font size: %s'), selectedOption.name),
    options: options,
    value: selectedOption,
    showSelectedHint: true,
    onChange: ({
      selectedItem
    }) => {
      onChange(selectedItem.value);
    },
    size: size
  });
};
var _default = exports.default = FontSizePickerSelect;
//# sourceMappingURL=font-size-picker-select.js.map