{"version":3,"names":["_compose","require","_element","useComputeControlledOrUncontrolledValue","valueProp","isInitialRenderRef","useRef","prevValueProp","usePrevious","prevIsControlledRef","useEffect","current","isControlled","value","defaultValue","undefined"],"sources":["@wordpress/components/src/toggle-group-control/toggle-group-control/utils.ts"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { usePrevious } from '@wordpress/compose';\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport type { ToggleGroupControlProps } from '../types';\n\ntype ValueProp = ToggleGroupControlProps[ 'value' ];\n\n/**\n * Used to determine, via an internal heuristics, whether an `undefined` value\n * received for the `value` prop should be interpreted as the component being\n * used in uncontrolled mode, or as an \"empty\" value for controlled mode.\n *\n * @param valueProp The received `value`\n */\nexport function useComputeControlledOrUncontrolledValue(\n\tvalueProp: ValueProp\n): { value: ValueProp; defaultValue: ValueProp } {\n\tconst isInitialRenderRef = useRef( true );\n\tconst prevValueProp = usePrevious( valueProp );\n\tconst prevIsControlledRef = useRef( false );\n\n\tuseEffect( () => {\n\t\tif ( isInitialRenderRef.current ) {\n\t\t\tisInitialRenderRef.current = false;\n\t\t}\n\t}, [] );\n\n\t// Assume the component is being used in controlled mode on the first re-render\n\t// that has a different `valueProp` from the previous render.\n\tconst isControlled =\n\t\tprevIsControlledRef.current ||\n\t\t( ! isInitialRenderRef.current && prevValueProp !== valueProp );\n\tuseEffect( () => {\n\t\tprevIsControlledRef.current = isControlled;\n\t}, [ isControlled ] );\n\n\tif ( isControlled ) {\n\t\t// When in controlled mode, use `''` instead of `undefined`\n\t\treturn { value: valueProp ?? '', defaultValue: undefined };\n\t}\n\n\t// When in uncontrolled mode, the `value` should be intended as the initial value\n\treturn { value: undefined, defaultValue: valueProp };\n}\n"],"mappings":";;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAJA;AACA;AACA;;AAIA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,uCAAuCA,CACtDC,SAAoB,EAC4B;EAChD,MAAMC,kBAAkB,GAAG,IAAAC,eAAM,EAAE,IAAK,CAAC;EACzC,MAAMC,aAAa,GAAG,IAAAC,oBAAW,EAAEJ,SAAU,CAAC;EAC9C,MAAMK,mBAAmB,GAAG,IAAAH,eAAM,EAAE,KAAM,CAAC;EAE3C,IAAAI,kBAAS,EAAE,MAAM;IAChB,IAAKL,kBAAkB,CAACM,OAAO,EAAG;MACjCN,kBAAkB,CAACM,OAAO,GAAG,KAAK;IACnC;EACD,CAAC,EAAE,EAAG,CAAC;;EAEP;EACA;EACA,MAAMC,YAAY,GACjBH,mBAAmB,CAACE,OAAO,IACzB,CAAEN,kBAAkB,CAACM,OAAO,IAAIJ,aAAa,KAAKH,SAAW;EAChE,IAAAM,kBAAS,EAAE,MAAM;IAChBD,mBAAmB,CAACE,OAAO,GAAGC,YAAY;EAC3C,CAAC,EAAE,CAAEA,YAAY,CAAG,CAAC;EAErB,IAAKA,YAAY,EAAG;IACnB;IACA,OAAO;MAAEC,KAAK,EAAET,SAAS,aAATA,SAAS,cAATA,SAAS,GAAI,EAAE;MAAEU,YAAY,EAAEC;IAAU,CAAC;EAC3D;;EAEA;EACA,OAAO;IAAEF,KAAK,EAAEE,SAAS;IAAED,YAAY,EAAEV;EAAU,CAAC;AACrD","ignoreList":[]}