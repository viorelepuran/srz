{"version":3,"names":["_compose","require","_element","useOnValueUpdate","value","onUpdate","previousValueRef","useRef","updateCallbackEvent","useEvent","useLayoutEffect","current","previousValue"],"sources":["@wordpress/components/src/utils/hooks/use-on-value-update.ts"],"sourcesContent":["/* eslint-disable jsdoc/require-param */\n/**\n * WordPress dependencies\n */\nimport { useEvent } from '@wordpress/compose';\nimport { useRef, useLayoutEffect } from '@wordpress/element';\n\n/**\n * Context object for the `onUpdate` callback of `useOnValueUpdate`.\n */\nexport type ValueUpdateContext< T > = {\n\tpreviousValue: T;\n};\n\n/**\n * Calls the `onUpdate` callback when the `value` changes.\n */\nexport function useOnValueUpdate< T >(\n\t/**\n\t * The value to watch for changes.\n\t */\n\tvalue: T,\n\t/**\n\t * Callback to fire when the value changes.\n\t */\n\tonUpdate: ( context: ValueUpdateContext< T > ) => void\n) {\n\tconst previousValueRef = useRef( value );\n\tconst updateCallbackEvent = useEvent( onUpdate );\n\tuseLayoutEffect( () => {\n\t\tif ( previousValueRef.current !== value ) {\n\t\t\tupdateCallbackEvent( {\n\t\t\t\tpreviousValue: previousValueRef.current,\n\t\t\t} );\n\t\t\tpreviousValueRef.current = value;\n\t\t}\n\t}, [ updateCallbackEvent, value ] );\n}\n/* eslint-enable jsdoc/require-param */\n"],"mappings":";;;;;;AAIA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AALA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAKA;AACA;AACA;AACO,SAASE,gBAAgBA;AAC/B;AACD;AACA;AACCC,KAAQ;AACR;AACD;AACA;AACCC,QAAsD,EACrD;EACD,MAAMC,gBAAgB,GAAG,IAAAC,eAAM,EAAEH,KAAM,CAAC;EACxC,MAAMI,mBAAmB,GAAG,IAAAC,iBAAQ,EAAEJ,QAAS,CAAC;EAChD,IAAAK,wBAAe,EAAE,MAAM;IACtB,IAAKJ,gBAAgB,CAACK,OAAO,KAAKP,KAAK,EAAG;MACzCI,mBAAmB,CAAE;QACpBI,aAAa,EAAEN,gBAAgB,CAACK;MACjC,CAAE,CAAC;MACHL,gBAAgB,CAACK,OAAO,GAAGP,KAAK;IACjC;EACD,CAAC,EAAE,CAAEI,mBAAmB,EAAEJ,KAAK,CAAG,CAAC;AACpC;AACA","ignoreList":[]}