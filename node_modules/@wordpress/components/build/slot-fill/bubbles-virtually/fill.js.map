{"version":3,"names":["_compose","require","_element","_slotFillContext","_interopRequireDefault","_styleProvider","_jsxRuntime","Fill","name","children","_slot$fillProps","registry","useContext","SlotFillContext","slot","useObservableValue","slots","instanceRef","useRef","useEffect","instance","current","registerFill","unregisterFill","ref","wrappedChildren","jsx","default","document","ownerDocument","fillProps","createPortal"],"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/fill.tsx"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useObservableValue } from '@wordpress/compose';\nimport {\n\tuseContext,\n\tuseRef,\n\tuseEffect,\n\tcreatePortal,\n} from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './slot-fill-context';\nimport StyleProvider from '../../style-provider';\nimport type { FillComponentProps } from '../types';\n\nexport default function Fill( { name, children }: FillComponentProps ) {\n\tconst registry = useContext( SlotFillContext );\n\tconst slot = useObservableValue( registry.slots, name );\n\tconst instanceRef = useRef( {} );\n\n\t// We register fills so we can keep track of their existence.\n\t// Slots can use the `useSlotFills` hook to know if there're already fills\n\t// registered so they can choose to render themselves or not.\n\tuseEffect( () => {\n\t\tconst instance = instanceRef.current;\n\t\tregistry.registerFill( name, instance );\n\t\treturn () => registry.unregisterFill( name, instance );\n\t}, [ registry, name ] );\n\n\tif ( ! slot || ! slot.ref.current ) {\n\t\treturn null;\n\t}\n\n\t// When using a `Fill`, the `children` will be rendered in the document of the\n\t// `Slot`. This means that we need to wrap the `children` in a `StyleProvider`\n\t// to make sure we're referencing the right document/iframe (instead of the\n\t// context of the `Fill`'s parent).\n\tconst wrappedChildren = (\n\t\t<StyleProvider document={ slot.ref.current.ownerDocument }>\n\t\t\t{ typeof children === 'function'\n\t\t\t\t? children( slot.fillProps ?? {} )\n\t\t\t\t: children }\n\t\t</StyleProvider>\n\t);\n\n\treturn createPortal( wrappedChildren, slot.ref.current );\n}\n"],"mappings":";;;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAUA,IAAAE,gBAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,cAAA,GAAAD,sBAAA,CAAAH,OAAA;AAAiD,IAAAK,WAAA,GAAAL,OAAA;AAfjD;AACA;AACA;;AASA;AACA;AACA;;AAKe,SAASM,IAAIA,CAAE;EAAEC,IAAI;EAAEC;AAA6B,CAAC,EAAG;EAAA,IAAAC,eAAA;EACtE,MAAMC,QAAQ,GAAG,IAAAC,mBAAU,EAAEC,wBAAgB,CAAC;EAC9C,MAAMC,IAAI,GAAG,IAAAC,2BAAkB,EAAEJ,QAAQ,CAACK,KAAK,EAAER,IAAK,CAAC;EACvD,MAAMS,WAAW,GAAG,IAAAC,eAAM,EAAE,CAAC,CAAE,CAAC;;EAEhC;EACA;EACA;EACA,IAAAC,kBAAS,EAAE,MAAM;IAChB,MAAMC,QAAQ,GAAGH,WAAW,CAACI,OAAO;IACpCV,QAAQ,CAACW,YAAY,CAAEd,IAAI,EAAEY,QAAS,CAAC;IACvC,OAAO,MAAMT,QAAQ,CAACY,cAAc,CAAEf,IAAI,EAAEY,QAAS,CAAC;EACvD,CAAC,EAAE,CAAET,QAAQ,EAAEH,IAAI,CAAG,CAAC;EAEvB,IAAK,CAAEM,IAAI,IAAI,CAAEA,IAAI,CAACU,GAAG,CAACH,OAAO,EAAG;IACnC,OAAO,IAAI;EACZ;;EAEA;EACA;EACA;EACA;EACA,MAAMI,eAAe,gBACpB,IAAAnB,WAAA,CAAAoB,GAAA,EAACrB,cAAA,CAAAsB,OAAa;IAACC,QAAQ,EAAGd,IAAI,CAACU,GAAG,CAACH,OAAO,CAACQ,aAAe;IAAApB,QAAA,EACvD,OAAOA,QAAQ,KAAK,UAAU,GAC7BA,QAAQ,EAAAC,eAAA,GAAEI,IAAI,CAACgB,SAAS,cAAApB,eAAA,cAAAA,eAAA,GAAI,CAAC,CAAE,CAAC,GAChCD;EAAQ,CACG,CACf;EAED,OAAO,IAAAsB,qBAAY,EAAEN,eAAe,EAAEX,IAAI,CAACU,GAAG,CAACH,OAAQ,CAAC;AACzD","ignoreList":[]}