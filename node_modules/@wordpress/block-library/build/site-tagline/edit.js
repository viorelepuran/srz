"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SiteTaglineEdit;
var _clsx = _interopRequireDefault(require("clsx"));
var _data = require("@wordpress/data");
var _coreData = require("@wordpress/core-data");
var _blockEditor = require("@wordpress/block-editor");
var _i18n = require("@wordpress/i18n");
var _blocks = require("@wordpress/blocks");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

function SiteTaglineEdit({
  attributes,
  setAttributes,
  insertBlocksAfter
}) {
  const {
    textAlign,
    level,
    levelOptions
  } = attributes;
  const {
    canUserEdit,
    tagline
  } = (0, _data.useSelect)(select => {
    const {
      canUser,
      getEntityRecord,
      getEditedEntityRecord
    } = select(_coreData.store);
    const canEdit = canUser('update', {
      kind: 'root',
      name: 'site'
    });
    const settings = canEdit ? getEditedEntityRecord('root', 'site') : {};
    const readOnlySettings = getEntityRecord('root', '__unstableBase');
    return {
      canUserEdit: canEdit,
      tagline: canEdit ? settings?.description : readOnlySettings?.description
    };
  }, []);
  const TagName = level === 0 ? 'p' : `h${level}`;
  const {
    editEntityRecord
  } = (0, _data.useDispatch)(_coreData.store);
  function setTagline(newTagline) {
    editEntityRecord('root', 'site', undefined, {
      description: newTagline
    });
  }
  const blockProps = (0, _blockEditor.useBlockProps)({
    className: (0, _clsx.default)({
      [`has-text-align-${textAlign}`]: textAlign,
      'wp-block-site-tagline__placeholder': !canUserEdit && !tagline
    })
  });
  const siteTaglineContent = canUserEdit ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_blockEditor.RichText, {
    allowedFormats: [],
    onChange: setTagline,
    "aria-label": (0, _i18n.__)('Site tagline text'),
    placeholder: (0, _i18n.__)('Write site taglineâ€¦'),
    tagName: TagName,
    value: tagline,
    disableLineBreaks: true,
    __unstableOnSplitAtEnd: () => insertBlocksAfter((0, _blocks.createBlock)((0, _blocks.getDefaultBlockName)())),
    ...blockProps
  }) : /*#__PURE__*/(0, _jsxRuntime.jsx)(TagName, {
    ...blockProps,
    children: tagline || (0, _i18n.__)('Site Tagline placeholder')
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(_blockEditor.BlockControls, {
      group: "block",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_blockEditor.HeadingLevelDropdown, {
        value: level,
        options: levelOptions,
        onChange: newLevel => setAttributes({
          level: newLevel
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_blockEditor.AlignmentControl, {
        onChange: newAlign => setAttributes({
          textAlign: newAlign
        }),
        value: textAlign
      })]
    }), siteTaglineContent]
  });
}
//# sourceMappingURL=edit.js.map