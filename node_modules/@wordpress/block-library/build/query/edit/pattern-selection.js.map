{"version":3,"names":["_element","require","_data","_components","_blockEditor","_i18n","_utils","_searchPatterns","_jsxRuntime","PatternSelectionModal","clientId","attributes","setIsPatternSelectionModalOpen","jsx","Modal","overlayClassName","title","__","onRequestClose","isFullScreen","children","PatternSelection","useBlockPatterns","blockNameForPatterns","useBlockNameForPatterns","usePatterns","showTitlesAsTooltip","showSearch","searchValue","setSearchValue","useState","replaceBlock","selectBlock","useDispatch","blockEditorStore","blockPatterns","blockPreviewContext","useMemo","previewPostType","query","postType","filteredBlockPatterns","searchPatterns","onBlockPatternSelect","pattern","blocks","newBlocks","queryClientIds","getTransformedBlocksFromPattern","jsxs","className","SearchControl","__nextHasNoMarginBottom","onChange","value","label","placeholder","BlockContextProvider","__experimentalBlockPatternsList","onClickPattern"],"sources":["@wordpress/block-library/src/query/edit/pattern-selection.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useMemo } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { Modal, SearchControl } from '@wordpress/components';\nimport {\n\tBlockContextProvider,\n\tstore as blockEditorStore,\n\t__experimentalBlockPatternsList as BlockPatternsList,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tuseBlockNameForPatterns,\n\tgetTransformedBlocksFromPattern,\n\tusePatterns,\n} from '../utils';\nimport { searchPatterns } from '../../utils/search-patterns';\n\nexport function PatternSelectionModal( {\n\tclientId,\n\tattributes,\n\tsetIsPatternSelectionModalOpen,\n} ) {\n\treturn (\n\t\t<Modal\n\t\t\toverlayClassName=\"block-library-query-pattern__selection-modal\"\n\t\t\ttitle={ __( 'Choose a pattern' ) }\n\t\t\tonRequestClose={ () => setIsPatternSelectionModalOpen( false ) }\n\t\t\tisFullScreen\n\t\t>\n\t\t\t<PatternSelection clientId={ clientId } attributes={ attributes } />\n\t\t</Modal>\n\t);\n}\n\nexport function useBlockPatterns( clientId, attributes ) {\n\tconst blockNameForPatterns = useBlockNameForPatterns(\n\t\tclientId,\n\t\tattributes\n\t);\n\treturn usePatterns( clientId, blockNameForPatterns );\n}\n\nexport default function PatternSelection( {\n\tclientId,\n\tattributes,\n\tshowTitlesAsTooltip = false,\n\tshowSearch = true,\n} ) {\n\tconst [ searchValue, setSearchValue ] = useState( '' );\n\tconst { replaceBlock, selectBlock } = useDispatch( blockEditorStore );\n\tconst blockPatterns = useBlockPatterns( clientId, attributes );\n\t/*\n\t * When we preview Query Loop blocks we should prefer the current\n\t * block's postType, which is passed through block context.\n\t */\n\tconst blockPreviewContext = useMemo(\n\t\t() => ( {\n\t\t\tpreviewPostType: attributes.query.postType,\n\t\t} ),\n\t\t[ attributes.query.postType ]\n\t);\n\tconst filteredBlockPatterns = useMemo( () => {\n\t\treturn searchPatterns( blockPatterns, searchValue );\n\t}, [ blockPatterns, searchValue ] );\n\n\tconst onBlockPatternSelect = ( pattern, blocks ) => {\n\t\tconst { newBlocks, queryClientIds } = getTransformedBlocksFromPattern(\n\t\t\tblocks,\n\t\t\tattributes\n\t\t);\n\t\treplaceBlock( clientId, newBlocks );\n\t\tif ( queryClientIds[ 0 ] ) {\n\t\t\tselectBlock( queryClientIds[ 0 ] );\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"block-library-query-pattern__selection-content\">\n\t\t\t{ showSearch && (\n\t\t\t\t<div className=\"block-library-query-pattern__selection-search\">\n\t\t\t\t\t<SearchControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tonChange={ setSearchValue }\n\t\t\t\t\t\tvalue={ searchValue }\n\t\t\t\t\t\tlabel={ __( 'Search' ) }\n\t\t\t\t\t\tplaceholder={ __( 'Search' ) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<BlockContextProvider value={ blockPreviewContext }>\n\t\t\t\t<BlockPatternsList\n\t\t\t\t\tblockPatterns={ filteredBlockPatterns }\n\t\t\t\t\tonClickPattern={ onBlockPatternSelect }\n\t\t\t\t\tshowTitlesAsTooltip={ showTitlesAsTooltip }\n\t\t\t\t/>\n\t\t\t</BlockContextProvider>\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}