{"version":3,"names":["_clsx","_interopRequireDefault","require","_blockEditor","_data","_blocks","_jsxRuntime","DEFAULT_BLOCK","name","attributesToCopy","ButtonsEdit","attributes","className","_layout$orientation","fontSize","layout","style","blockProps","useBlockProps","clsx","typography","hasButtonVariations","useSelect","select","buttonVariations","blocksStore","getBlockVariations","length","innerBlocksProps","useInnerBlocksProps","defaultBlock","directInsert","template","templateInsertUpdatesSelection","orientation","jsx","_default","exports","default"],"sources":["@wordpress/block-library/src/buttons/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { useBlockProps, useInnerBlocksProps } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { store as blocksStore } from '@wordpress/blocks';\n\nconst DEFAULT_BLOCK = {\n\tname: 'core/button',\n\tattributesToCopy: [\n\t\t'backgroundColor',\n\t\t'border',\n\t\t'className',\n\t\t'fontFamily',\n\t\t'fontSize',\n\t\t'gradient',\n\t\t'style',\n\t\t'textColor',\n\t\t'width',\n\t],\n};\n\nfunction ButtonsEdit( { attributes, className } ) {\n\tconst { fontSize, layout, style } = attributes;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: clsx( className, {\n\t\t\t'has-custom-font-size': fontSize || style?.typography?.fontSize,\n\t\t} ),\n\t} );\n\tconst { hasButtonVariations } = useSelect( ( select ) => {\n\t\tconst buttonVariations = select( blocksStore ).getBlockVariations(\n\t\t\t'core/button',\n\t\t\t'inserter'\n\t\t);\n\t\treturn {\n\t\t\thasButtonVariations: buttonVariations.length > 0,\n\t\t};\n\t}, [] );\n\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tdefaultBlock: DEFAULT_BLOCK,\n\t\t// This check should be handled by the `Inserter` internally to be consistent across all blocks that use it.\n\t\tdirectInsert: ! hasButtonVariations,\n\t\ttemplate: [ [ 'core/button' ] ],\n\t\ttemplateInsertUpdatesSelection: true,\n\t\torientation: layout?.orientation ?? 'horizontal',\n\t} );\n\n\treturn <div { ...innerBlocksProps } />;\n}\n\nexport default ButtonsEdit;\n"],"mappings":";;;;;;;AAGA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAKA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AAAyD,IAAAI,WAAA,GAAAJ,OAAA;AAVzD;AACA;AACA;;AAGA;AACA;AACA;;AAKA,MAAMK,aAAa,GAAG;EACrBC,IAAI,EAAE,aAAa;EACnBC,gBAAgB,EAAE,CACjB,iBAAiB,EACjB,QAAQ,EACR,WAAW,EACX,YAAY,EACZ,UAAU,EACV,UAAU,EACV,OAAO,EACP,WAAW,EACX,OAAO;AAET,CAAC;AAED,SAASC,WAAWA,CAAE;EAAEC,UAAU;EAAEC;AAAU,CAAC,EAAG;EAAA,IAAAC,mBAAA;EACjD,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGL,UAAU;EAC9C,MAAMM,UAAU,GAAG,IAAAC,0BAAa,EAAE;IACjCN,SAAS,EAAE,IAAAO,aAAI,EAAEP,SAAS,EAAE;MAC3B,sBAAsB,EAAEE,QAAQ,IAAIE,KAAK,EAAEI,UAAU,EAAEN;IACxD,CAAE;EACH,CAAE,CAAC;EACH,MAAM;IAAEO;EAAoB,CAAC,GAAG,IAAAC,eAAS,EAAIC,MAAM,IAAM;IACxD,MAAMC,gBAAgB,GAAGD,MAAM,CAAEE,aAAY,CAAC,CAACC,kBAAkB,CAChE,aAAa,EACb,UACD,CAAC;IACD,OAAO;MACNL,mBAAmB,EAAEG,gBAAgB,CAACG,MAAM,GAAG;IAChD,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EAEP,MAAMC,gBAAgB,GAAG,IAAAC,gCAAmB,EAAEZ,UAAU,EAAE;IACzDa,YAAY,EAAEvB,aAAa;IAC3B;IACAwB,YAAY,EAAE,CAAEV,mBAAmB;IACnCW,QAAQ,EAAE,CAAE,CAAE,aAAa,CAAE,CAAE;IAC/BC,8BAA8B,EAAE,IAAI;IACpCC,WAAW,GAAArB,mBAAA,GAAEE,MAAM,EAAEmB,WAAW,cAAArB,mBAAA,cAAAA,mBAAA,GAAI;EACrC,CAAE,CAAC;EAEH,oBAAO,IAAAP,WAAA,CAAA6B,GAAA;IAAA,GAAUP;EAAgB,CAAI,CAAC;AACvC;AAAC,IAAAQ,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEc5B,WAAW","ignoreList":[]}