{"version":3,"names":["_reactNative","require","_blockEditor","_blocks","_compose","_data","_element","_components","_editor","_interopRequireDefault","_jsxRuntime","layoutProp","type","alignments","POPOVER_PROPS","placement","ButtonsEdit","attributes","layout","align","clientId","isSelected","setAttributes","blockWidth","name","resizeObserver","sizes","useResizeObserver","maxWidth","setMaxWidth","useState","marginLeft","spacing","styles","layoutBlockSupport","getBlockSupport","defaultBlockLayout","default","usedLayout","justifyContent","isInnerButtonSelected","shouldDelete","useSelect","select","getBlockCount","getBlockParents","getSelectedBlockClientId","blockEditorStore","selectedBlockClientId","selectedBlockParents","getBlockOrder","insertBlock","removeBlock","selectBlock","useDispatch","useEffect","width","isFullWidth","alignmentHelpers","isFullWidthBlock","onAddNextButton","useCallback","debounce","selectedId","order","selectedButtonIndex","findIndex","i","index","length","insertedBlock","createBlock","renderFooterAppender","useRef","jsx","View","style","appenderContainer","children","InnerBlocks","ButtonBlockAppender","isFloating","onAddBlock","justifyControls","remove","shouldRenderFooterAppender","jsxs","Fragment","BlockControls","group","JustifyContentControl","allowedControls","value","onChange","popoverProps","template","current","orientation","horizontalAlignment","onDeleteBlock","undefined","parentWidth","marginHorizontal","marginVertical","templateInsertUpdatesSelection"],"sources":["@wordpress/block-library/src/buttons/edit.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tBlockControls,\n\tInnerBlocks,\n\tJustifyContentControl,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { createBlock, getBlockSupport } from '@wordpress/blocks';\nimport { debounce, useResizeObserver } from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useState, useEffect, useRef, useCallback } from '@wordpress/element';\nimport { alignmentHelpers } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport styles from './editor.scss';\n\nconst layoutProp = { type: 'default', alignments: [] };\n\nconst POPOVER_PROPS = {\n\tplacement: 'bottom-start',\n};\n\nexport default function ButtonsEdit( {\n\tattributes: { layout, align },\n\tclientId,\n\tisSelected,\n\tsetAttributes,\n\tblockWidth,\n\tname,\n} ) {\n\tconst [ resizeObserver, sizes ] = useResizeObserver();\n\tconst [ maxWidth, setMaxWidth ] = useState( 0 );\n\tconst { marginLeft: spacing } = styles.spacing;\n\n\t// Extract attributes from block layout\n\tconst layoutBlockSupport = getBlockSupport( name, 'layout' );\n\tconst defaultBlockLayout = layoutBlockSupport?.default;\n\tconst usedLayout = layout || defaultBlockLayout || {};\n\tconst { justifyContent } = usedLayout;\n\n\tconst { isInnerButtonSelected, shouldDelete } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockCount, getBlockParents, getSelectedBlockClientId } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\t\tconst selectedBlockParents = getBlockParents(\n\t\t\t\tselectedBlockClientId,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tisInnerButtonSelected: selectedBlockParents[ 0 ] === clientId,\n\t\t\t\t// The purpose of `shouldDelete` check is giving the ability to\n\t\t\t\t// pass to mobile toolbar function called `onDelete` which removes\n\t\t\t\t// the whole `Buttons` container along with the last inner button\n\t\t\t\t// when there is exactly one button.\n\t\t\t\tshouldDelete: getBlockCount( clientId ) === 1,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst { getBlockOrder } = useSelect( blockEditorStore );\n\tconst { insertBlock, removeBlock, selectBlock } =\n\t\tuseDispatch( blockEditorStore );\n\n\tuseEffect( () => {\n\t\tconst { width } = sizes || {};\n\t\tconst { isFullWidth } = alignmentHelpers;\n\n\t\tif ( width ) {\n\t\t\tconst isFullWidthBlock = isFullWidth( align );\n\t\t\tsetMaxWidth( isFullWidthBlock ? blockWidth : width );\n\t\t}\n\t}, [ sizes, align ] );\n\n\tconst onAddNextButton = useCallback(\n\t\tdebounce( ( selectedId ) => {\n\t\t\tconst order = getBlockOrder( clientId );\n\t\t\tconst selectedButtonIndex = order.findIndex(\n\t\t\t\t( i ) => i === selectedId\n\t\t\t);\n\n\t\t\tconst index =\n\t\t\t\tselectedButtonIndex === -1\n\t\t\t\t\t? order.length + 1\n\t\t\t\t\t: selectedButtonIndex;\n\n\t\t\tconst insertedBlock = createBlock( 'core/button' );\n\n\t\t\tinsertBlock( insertedBlock, index, clientId, false );\n\t\t\tselectBlock( insertedBlock.clientId );\n\t\t}, 200 ),\n\t\t[]\n\t);\n\n\tconst renderFooterAppender = useRef( () => (\n\t\t<View style={ styles.appenderContainer }>\n\t\t\t<InnerBlocks.ButtonBlockAppender\n\t\t\t\tisFloating\n\t\t\t\tonAddBlock={ onAddNextButton }\n\t\t\t/>\n\t\t</View>\n\t) );\n\n\tconst justifyControls = [ 'left', 'center', 'right' ];\n\n\tconst remove = useCallback( () => removeBlock( clientId ), [ clientId ] );\n\tconst shouldRenderFooterAppender = isSelected || isInnerButtonSelected;\n\treturn (\n\t\t<>\n\t\t\t{ isSelected && (\n\t\t\t\t<BlockControls group=\"block\">\n\t\t\t\t\t<JustifyContentControl\n\t\t\t\t\t\tallowedControls={ justifyControls }\n\t\t\t\t\t\tvalue={ justifyContent }\n\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t\t...usedLayout,\n\t\t\t\t\t\t\t\t\tjustifyContent: value,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpopoverProps={ POPOVER_PROPS }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\t\t\t{ resizeObserver }\n\t\t\t<InnerBlocks\n\t\t\t\ttemplate={ [ [ 'core/button' ] ] }\n\t\t\t\trenderFooterAppender={\n\t\t\t\t\tshouldRenderFooterAppender && renderFooterAppender.current\n\t\t\t\t}\n\t\t\t\torientation=\"horizontal\"\n\t\t\t\thorizontalAlignment={ justifyContent }\n\t\t\t\tonDeleteBlock={ shouldDelete ? remove : undefined }\n\t\t\t\tonAddBlock={ onAddNextButton }\n\t\t\t\tparentWidth={ maxWidth } // This value controls the width of that the buttons are able to expand to.\n\t\t\t\tmarginHorizontal={ spacing }\n\t\t\t\tmarginVertical={ spacing }\n\t\t\t\tlayout={ layoutProp }\n\t\t\t\ttemplateInsertUpdatesSelection\n\t\t\t\tblockWidth={ blockWidth }\n\t\t\t/>\n\t\t</>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}