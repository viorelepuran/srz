{"version":3,"names":["_compose","require","_keycodes","_blockEditor","_data","_useIndentListItem","_interopRequireDefault","_useOutdentListItem","useSpace","clientId","getSelectionStart","getSelectionEnd","getBlockIndex","useSelect","blockEditorStore","indentListItem","useIndentListItem","outdentListItem","useOutdentListItem","useRefEffect","element","onKeyDown","event","keyCode","shiftKey","altKey","metaKey","ctrlKey","defaultPrevented","SPACE","TAB","selectionStart","selectionEnd","offset","preventDefault","addEventListener","removeEventListener"],"sources":["@wordpress/block-library/src/list-item/hooks/use-space.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRefEffect } from '@wordpress/compose';\nimport { SPACE, TAB } from '@wordpress/keycodes';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport useIndentListItem from './use-indent-list-item';\nimport useOutdentListItem from './use-outdent-list-item';\n\nexport default function useSpace( clientId ) {\n\tconst { getSelectionStart, getSelectionEnd, getBlockIndex } =\n\t\tuseSelect( blockEditorStore );\n\tconst indentListItem = useIndentListItem( clientId );\n\tconst outdentListItem = useOutdentListItem();\n\n\treturn useRefEffect(\n\t\t( element ) => {\n\t\t\tfunction onKeyDown( event ) {\n\t\t\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\t\t\tif (\n\t\t\t\t\tevent.defaultPrevented ||\n\t\t\t\t\t( keyCode !== SPACE && keyCode !== TAB ) ||\n\t\t\t\t\t// Only override when no modifiers are pressed.\n\t\t\t\t\taltKey ||\n\t\t\t\t\tmetaKey ||\n\t\t\t\t\tctrlKey\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst selectionStart = getSelectionStart();\n\t\t\t\tconst selectionEnd = getSelectionEnd();\n\t\t\t\tif (\n\t\t\t\t\tselectionStart.offset === 0 &&\n\t\t\t\t\tselectionEnd.offset === 0\n\t\t\t\t) {\n\t\t\t\t\tif ( shiftKey ) {\n\t\t\t\t\t\t// Note that backspace behaviour in defined in onMerge.\n\t\t\t\t\t\tif ( keyCode === TAB ) {\n\t\t\t\t\t\t\tif ( outdentListItem() ) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ( getBlockIndex( clientId ) !== 0 ) {\n\t\t\t\t\t\tif ( indentListItem() ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telement.addEventListener( 'keydown', onKeyDown );\n\t\t\treturn () => {\n\t\t\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t\t\t};\n\t\t},\n\t\t[ clientId, indentListItem ]\n\t);\n}\n"],"mappings":";;;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,KAAA,GAAAH,OAAA;AAKA,IAAAI,kBAAA,GAAAC,sBAAA,CAAAL,OAAA;AACA,IAAAM,mBAAA,GAAAD,sBAAA,CAAAL,OAAA;AAZA;AACA;AACA;;AAMA;AACA;AACA;;AAIe,SAASO,QAAQA,CAAEC,QAAQ,EAAG;EAC5C,MAAM;IAAEC,iBAAiB;IAAEC,eAAe;IAAEC;EAAc,CAAC,GAC1D,IAAAC,eAAS,EAAEC,kBAAiB,CAAC;EAC9B,MAAMC,cAAc,GAAG,IAAAC,0BAAiB,EAAEP,QAAS,CAAC;EACpD,MAAMQ,eAAe,GAAG,IAAAC,2BAAkB,EAAC,CAAC;EAE5C,OAAO,IAAAC,qBAAY,EAChBC,OAAO,IAAM;IACd,SAASC,SAASA,CAAEC,KAAK,EAAG;MAC3B,MAAM;QAAEC,OAAO;QAAEC,QAAQ;QAAEC,MAAM;QAAEC,OAAO;QAAEC;MAAQ,CAAC,GAAGL,KAAK;MAE7D,IACCA,KAAK,CAACM,gBAAgB,IACpBL,OAAO,KAAKM,eAAK,IAAIN,OAAO,KAAKO,aAAK;MACxC;MACAL,MAAM,IACNC,OAAO,IACPC,OAAO,EACN;QACD;MACD;MAEA,MAAMI,cAAc,GAAGrB,iBAAiB,CAAC,CAAC;MAC1C,MAAMsB,YAAY,GAAGrB,eAAe,CAAC,CAAC;MACtC,IACCoB,cAAc,CAACE,MAAM,KAAK,CAAC,IAC3BD,YAAY,CAACC,MAAM,KAAK,CAAC,EACxB;QACD,IAAKT,QAAQ,EAAG;UACf;UACA,IAAKD,OAAO,KAAKO,aAAG,EAAG;YACtB,IAAKb,eAAe,CAAC,CAAC,EAAG;cACxBK,KAAK,CAACY,cAAc,CAAC,CAAC;YACvB;UACD;QACD,CAAC,MAAM,IAAKtB,aAAa,CAAEH,QAAS,CAAC,KAAK,CAAC,EAAG;UAC7C,IAAKM,cAAc,CAAC,CAAC,EAAG;YACvBO,KAAK,CAACY,cAAc,CAAC,CAAC;UACvB;QACD;MACD;IACD;IAEAd,OAAO,CAACe,gBAAgB,CAAE,SAAS,EAAEd,SAAU,CAAC;IAChD,OAAO,MAAM;MACZD,OAAO,CAACgB,mBAAmB,CAAE,SAAS,EAAEf,SAAU,CAAC;IACpD,CAAC;EACF,CAAC,EACD,CAAEZ,QAAQ,EAAEM,cAAc,CAC3B,CAAC;AACF","ignoreList":[]}