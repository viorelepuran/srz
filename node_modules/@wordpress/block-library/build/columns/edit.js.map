{"version":3,"names":["_clsx","_interopRequireDefault","require","_i18n","_components","_blockEditor","_data","_blocks","_utils","_hooks","_jsxRuntime","DEFAULT_BLOCK","name","ColumnInspectorControls","clientId","setAttributes","isStackedOnMobile","count","canInsertColumnBlock","minCount","useSelect","select","canInsertBlockType","canRemoveBlock","getBlockOrder","blockEditorStore","blockOrder","preventRemovalBlockIndexes","reduce","acc","blockId","index","push","length","Math","max","getBlocks","replaceInnerBlocks","useDispatch","updateColumns","previousColumns","newColumns","innerBlocks","hasExplicitWidths","hasExplicitPercentColumnWidths","isAddingColumn","newColumnWidth","toWidthPrecision","newlyAddedColumns","widths","getRedistributedColumnWidths","getMappedColumnWidths","Array","from","map","createBlock","width","slice","dropdownMenuProps","useToolsPanelDropdownMenuProps","jsxs","__experimentalToolsPanel","label","__","resetAll","children","jsx","__experimentalToolsPanelItem","isShownByDefault","hasValue","onDeselect","__experimentalVStack","spacing","RangeControl","__nextHasNoMarginBottom","__next40pxDefaultSize","value","onChange","min","Notice","status","isDismissible","ToggleControl","checked","ColumnsEditContainer","attributes","verticalAlignment","templateLock","registry","useRegistry","updateBlockAttributes","classes","clsx","blockProps","useBlockProps","className","innerBlocksProps","useInnerBlocksProps","defaultBlock","directInsert","orientation","renderAppender","updateAlignment","newVerticalAlignment","innerBlockClientIds","batch","Fragment","BlockControls","BlockVerticalAlignmentToolbar","InspectorControls","Placeholder","blockType","defaultVariation","variations","getBlockVariations","getBlockType","getDefaultBlockVariation","blocksStore","__experimentalBlockVariationPicker","icon","src","title","instructions","onSelect","nextVariation","createBlocksFromInnerBlocksTemplate","allowSkip","ColumnsEdit","props","hasInnerBlocks","Component","_default","exports","default"],"sources":["@wordpress/block-library/src/columns/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tNotice,\n\tRangeControl,\n\tToggleControl,\n\t__experimentalToolsPanel as ToolsPanel,\n\t__experimentalToolsPanelItem as ToolsPanelItem,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\n\nimport {\n\tInspectorControls,\n\tuseInnerBlocksProps,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\t__experimentalBlockVariationPicker,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useDispatch, useSelect, useRegistry } from '@wordpress/data';\nimport {\n\tcreateBlock,\n\tcreateBlocksFromInnerBlocksTemplate,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport {\n\thasExplicitPercentColumnWidths,\n\tgetMappedColumnWidths,\n\tgetRedistributedColumnWidths,\n\ttoWidthPrecision,\n} from './utils';\nimport { useToolsPanelDropdownMenuProps } from '../utils/hooks';\n\nconst DEFAULT_BLOCK = {\n\tname: 'core/column',\n};\n\nfunction ColumnInspectorControls( {\n\tclientId,\n\tsetAttributes,\n\tisStackedOnMobile,\n} ) {\n\tconst { count, canInsertColumnBlock, minCount } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canInsertBlockType, canRemoveBlock, getBlockOrder } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst blockOrder = getBlockOrder( clientId );\n\n\t\t\t// Get the indexes of columns for which removal is prevented.\n\t\t\t// The highest index will be used to determine the minimum column count.\n\t\t\tconst preventRemovalBlockIndexes = blockOrder.reduce(\n\t\t\t\t( acc, blockId, index ) => {\n\t\t\t\t\tif ( ! canRemoveBlock( blockId ) ) {\n\t\t\t\t\t\tacc.push( index );\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tcount: blockOrder.length,\n\t\t\t\tcanInsertColumnBlock: canInsertBlockType(\n\t\t\t\t\t'core/column',\n\t\t\t\t\tclientId\n\t\t\t\t),\n\t\t\t\tminCount: Math.max( ...preventRemovalBlockIndexes ) + 1,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { getBlocks } = useSelect( blockEditorStore );\n\tconst { replaceInnerBlocks } = useDispatch( blockEditorStore );\n\n\t/**\n\t * Updates the column count, including necessary revisions to child Column\n\t * blocks to grant required or redistribute available space.\n\t *\n\t * @param {number} previousColumns Previous column count.\n\t * @param {number} newColumns      New column count.\n\t */\n\tfunction updateColumns( previousColumns, newColumns ) {\n\t\tlet innerBlocks = getBlocks( clientId );\n\t\tconst hasExplicitWidths = hasExplicitPercentColumnWidths( innerBlocks );\n\n\t\t// Redistribute available width for existing inner blocks.\n\t\tconst isAddingColumn = newColumns > previousColumns;\n\n\t\tif ( isAddingColumn && hasExplicitWidths ) {\n\t\t\t// If adding a new column, assign width to the new column equal to\n\t\t\t// as if it were `1 / columns` of the total available space.\n\t\t\tconst newColumnWidth = toWidthPrecision( 100 / newColumns );\n\t\t\tconst newlyAddedColumns = newColumns - previousColumns;\n\n\t\t\t// Redistribute in consideration of pending block insertion as\n\t\t\t// constraining the available working width.\n\t\t\tconst widths = getRedistributedColumnWidths(\n\t\t\t\tinnerBlocks,\n\t\t\t\t100 - newColumnWidth * newlyAddedColumns\n\t\t\t);\n\n\t\t\tinnerBlocks = [\n\t\t\t\t...getMappedColumnWidths( innerBlocks, widths ),\n\t\t\t\t...Array.from( {\n\t\t\t\t\tlength: newlyAddedColumns,\n\t\t\t\t} ).map( () => {\n\t\t\t\t\treturn createBlock( 'core/column', {\n\t\t\t\t\t\twidth: `${ newColumnWidth }%`,\n\t\t\t\t\t} );\n\t\t\t\t} ),\n\t\t\t];\n\t\t} else if ( isAddingColumn ) {\n\t\t\tinnerBlocks = [\n\t\t\t\t...innerBlocks,\n\t\t\t\t...Array.from( {\n\t\t\t\t\tlength: newColumns - previousColumns,\n\t\t\t\t} ).map( () => {\n\t\t\t\t\treturn createBlock( 'core/column' );\n\t\t\t\t} ),\n\t\t\t];\n\t\t} else if ( newColumns < previousColumns ) {\n\t\t\t// The removed column will be the last of the inner blocks.\n\t\t\tinnerBlocks = innerBlocks.slice(\n\t\t\t\t0,\n\t\t\t\t-( previousColumns - newColumns )\n\t\t\t);\n\t\t\tif ( hasExplicitWidths ) {\n\t\t\t\t// Redistribute as if block is already removed.\n\t\t\t\tconst widths = getRedistributedColumnWidths( innerBlocks, 100 );\n\n\t\t\t\tinnerBlocks = getMappedColumnWidths( innerBlocks, widths );\n\t\t\t}\n\t\t}\n\n\t\treplaceInnerBlocks( clientId, innerBlocks );\n\t}\n\n\tconst dropdownMenuProps = useToolsPanelDropdownMenuProps();\n\n\treturn (\n\t\t<ToolsPanel\n\t\t\tlabel={ __( 'Settings' ) }\n\t\t\tresetAll={ () => {\n\t\t\t\tupdateColumns( count, minCount );\n\t\t\t\tsetAttributes( {\n\t\t\t\t\tisStackedOnMobile: true,\n\t\t\t\t} );\n\t\t\t} }\n\t\t\tdropdownMenuProps={ dropdownMenuProps }\n\t\t>\n\t\t\t{ canInsertColumnBlock && (\n\t\t\t\t<ToolsPanelItem\n\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\tisShownByDefault\n\t\t\t\t\thasValue={ () => count }\n\t\t\t\t\tonDeselect={ () => updateColumns( count, minCount ) }\n\t\t\t\t>\n\t\t\t\t\t<VStack spacing={ 4 }>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\tvalue={ count }\n\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\tupdateColumns(\n\t\t\t\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\t\t\tMath.max( minCount, value )\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmin={ Math.max( 1, minCount ) }\n\t\t\t\t\t\t\tmax={ Math.max( 6, count ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ count > 6 && (\n\t\t\t\t\t\t\t<Notice status=\"warning\" isDismissible={ false }>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'This column count exceeds the recommended amount and may cause visual breakage.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</Notice>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</VStack>\n\t\t\t\t</ToolsPanelItem>\n\t\t\t) }\n\t\t\t<ToolsPanelItem\n\t\t\t\tlabel={ __( 'Stack on mobile' ) }\n\t\t\t\tisShownByDefault\n\t\t\t\thasValue={ () => isStackedOnMobile !== true }\n\t\t\t\tonDeselect={ () =>\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\tisStackedOnMobile: true,\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<ToggleControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ __( 'Stack on mobile' ) }\n\t\t\t\t\tchecked={ isStackedOnMobile }\n\t\t\t\t\tonChange={ () =>\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\tisStackedOnMobile: ! isStackedOnMobile,\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</ToolsPanelItem>\n\t\t</ToolsPanel>\n\t);\n}\n\nfunction ColumnsEditContainer( { attributes, setAttributes, clientId } ) {\n\tconst { isStackedOnMobile, verticalAlignment, templateLock } = attributes;\n\tconst registry = useRegistry();\n\tconst { getBlockOrder } = useSelect( blockEditorStore );\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\tconst classes = clsx( {\n\t\t[ `are-vertically-aligned-${ verticalAlignment }` ]: verticalAlignment,\n\t\t[ `is-not-stacked-on-mobile` ]: ! isStackedOnMobile,\n\t} );\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classes,\n\t} );\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tdefaultBlock: DEFAULT_BLOCK,\n\t\tdirectInsert: true,\n\t\torientation: 'horizontal',\n\t\trenderAppender: false,\n\t\ttemplateLock,\n\t} );\n\n\t/**\n\t * Update all child Column blocks with a new vertical alignment setting\n\t * based on whatever alignment is passed in. This allows change to parent\n\t * to override anything set on a individual column basis.\n\t *\n\t * @param {string} newVerticalAlignment The vertical alignment setting.\n\t */\n\tfunction updateAlignment( newVerticalAlignment ) {\n\t\tconst innerBlockClientIds = getBlockOrder( clientId );\n\n\t\t// Update own and child Column block vertical alignments.\n\t\t// This is a single action; the batching prevents creating multiple history records.\n\t\tregistry.batch( () => {\n\t\t\tsetAttributes( { verticalAlignment: newVerticalAlignment } );\n\t\t\tupdateBlockAttributes( innerBlockClientIds, {\n\t\t\t\tverticalAlignment: newVerticalAlignment,\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<ColumnInspectorControls\n\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\tisStackedOnMobile={ isStackedOnMobile }\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</>\n\t);\n}\n\nfunction Placeholder( { clientId, name, setAttributes } ) {\n\tconst { blockType, defaultVariation, variations } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockVariations,\n\t\t\t\tgetBlockType,\n\t\t\t\tgetDefaultBlockVariation,\n\t\t\t} = select( blocksStore );\n\n\t\t\treturn {\n\t\t\t\tblockType: getBlockType( name ),\n\t\t\t\tdefaultVariation: getDefaultBlockVariation( name, 'block' ),\n\t\t\t\tvariations: getBlockVariations( name, 'block' ),\n\t\t\t};\n\t\t},\n\t\t[ name ]\n\t);\n\tconst { replaceInnerBlocks } = useDispatch( blockEditorStore );\n\tconst blockProps = useBlockProps();\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<__experimentalBlockVariationPicker\n\t\t\t\ticon={ blockType?.icon?.src }\n\t\t\t\tlabel={ blockType?.title }\n\t\t\t\tvariations={ variations }\n\t\t\t\tinstructions={ __( 'Divide into columns. Select a layout:' ) }\n\t\t\t\tonSelect={ ( nextVariation = defaultVariation ) => {\n\t\t\t\t\tif ( nextVariation.attributes ) {\n\t\t\t\t\t\tsetAttributes( nextVariation.attributes );\n\t\t\t\t\t}\n\t\t\t\t\tif ( nextVariation.innerBlocks ) {\n\t\t\t\t\t\treplaceInnerBlocks(\n\t\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t\tcreateBlocksFromInnerBlocksTemplate(\n\t\t\t\t\t\t\t\tnextVariation.innerBlocks\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t\tallowSkip\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst ColumnsEdit = ( props ) => {\n\tconst { clientId } = props;\n\tconst hasInnerBlocks = useSelect(\n\t\t( select ) =>\n\t\t\tselect( blockEditorStore ).getBlocks( clientId ).length > 0,\n\t\t[ clientId ]\n\t);\n\tconst Component = hasInnerBlocks ? ColumnsEditContainer : Placeholder;\n\n\treturn <Component { ...props } />;\n};\n\nexport default ColumnsEdit;\n"],"mappings":"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","ignoreList":[]}