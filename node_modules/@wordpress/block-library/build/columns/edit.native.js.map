{"version":3,"names":["_reactNative","require","_i18n","_components","_blockEditor","_data","_element","_compose","_blocks","_icons","_variations","_interopRequireDefault","_editor","_utils","_columnCalculations","_columnPreview","_jsxRuntime","DEFAULT_COLUMNS_NUM","MIN_COLUMNS_NUM","isFullWidth","alignmentHelpers","ColumnsEditContainer","attributes","updateAlignment","updateColumns","columnCount","isSelected","onDeleteBlock","innerWidths","updateInnerColumnWidth","editorSidebarOpened","resizeListener","sizes","useResizeObserver","columnsInRow","setColumnsInRow","useState","screenWidth","Math","floor","Dimensions","get","width","globalStyles","useGlobalStyles","verticalAlignment","align","availableUnits","useSettings","units","useCustomUnits","useEffect","newColumnCount","getColumnsInRow","renderAppender","jsx","View","style","styles","columnAppender","children","InnerBlocks","ButtonBlockAppender","onAddBlock","contentWidths","useMemo","getContentWidths","useCallback","onChangeWidth","nextWidth","valueUnit","columnId","widthWithUnit","getWidthWithUnit","onChangeUnit","nextUnit","index","widthWithoutUnit","parseFloat","getWidths","onChange","isPercentageUnit","getColumnsSliders","map","column","getValueAndUnit","label","sprintf","__","UnitControl","settingLabel","min","max","undefined","value","clientId","onUnitChange","onComplete","unit","preview","default","columnWidths","selectedColumnIndex","length","onChangeColumnsNum","jsxs","Fragment","InspectorControls","PanelBody","title","RangeControl","icon","columns","type","FooterMessageControl","BlockControls","BlockVerticalAlignmentToolbar","innerBlocksSelected","orientation","horizontal","contentResizeMode","blockWidth","contentStyle","parentWidth","calculateContainerWidth","ColumnsEditContainerWrapper","withDispatch","dispatch","ownProps","registry","setAttributes","updateBlockAttributes","blockEditorStore","getBlockOrder","select","innerBlockClientIds","forEach","innerBlockClientId","previousColumns","newColumns","replaceInnerBlocks","getBlocks","getBlockAttributes","innerBlocks","hasExplicitWidths","hasExplicitPercentColumnWidths","isAddingColumn","newColumnWidth","toWidthPrecision","widths","getRedistributedColumnWidths","getMappedColumnWidths","Array","from","createBlock","slice","onAddNextColumn","selectBlock","insertedBlock","removeBlock","memo","ColumnsEdit","props","isDefaultColumns","hasParents","parentBlockAlignment","useSelect","getBlockCount","getBlockParents","isEditorSidebarOpened","innerBlocksList","isContentEmpty","every","innerBlock","parents","inn","isVisible","setIsVisible","revealTimeout","setTimeout","clearTimeout","onClose","BlockVariationPicker","variations","_default","exports"],"sources":["@wordpress/block-library/src/columns/edit.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { View, Dimensions } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tPanelBody,\n\tRangeControl,\n\tFooterMessageControl,\n\tUnitControl,\n\tgetValueAndUnit,\n\talignmentHelpers,\n\t__experimentalUseCustomUnits as useCustomUnits,\n} from '@wordpress/components';\nimport {\n\tInspectorControls,\n\tInnerBlocks,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\tBlockVariationPicker,\n\tuseSettings,\n\tstore as blockEditorStore,\n\tuseGlobalStyles,\n} from '@wordpress/block-editor';\nimport { withDispatch, useSelect } from '@wordpress/data';\nimport {\n\tuseEffect,\n\tuseState,\n\tuseMemo,\n\tuseCallback,\n\tmemo,\n} from '@wordpress/element';\nimport { useResizeObserver } from '@wordpress/compose';\nimport { createBlock } from '@wordpress/blocks';\nimport { columns } from '@wordpress/icons';\n/**\n * Internal dependencies\n */\nimport variations from './variations';\nimport styles from './editor.scss';\nimport {\n\thasExplicitPercentColumnWidths,\n\tgetMappedColumnWidths,\n\tgetRedistributedColumnWidths,\n\ttoWidthPrecision,\n\tgetWidths,\n\tgetWidthWithUnit,\n\tisPercentageUnit,\n} from './utils';\nimport {\n\tgetColumnsInRow,\n\tcalculateContainerWidth,\n\tgetContentWidths,\n} from './columnCalculations.native';\nimport ColumnsPreview from '../column/column-preview';\n\n/**\n * Number of columns to assume for template in case the user opts to skip\n * template option selection.\n *\n * @type {number}\n */\nconst DEFAULT_COLUMNS_NUM = 2;\n\n/**\n * Minimum number of columns in a row\n *\n * @type {number}\n */\nconst MIN_COLUMNS_NUM = 1;\n\nconst { isFullWidth } = alignmentHelpers;\n\nfunction ColumnsEditContainer( {\n\tattributes,\n\tupdateAlignment,\n\tupdateColumns,\n\tcolumnCount,\n\tisSelected,\n\tonDeleteBlock,\n\tinnerWidths,\n\tupdateInnerColumnWidth,\n\teditorSidebarOpened,\n} ) {\n\tconst [ resizeListener, sizes ] = useResizeObserver();\n\tconst [ columnsInRow, setColumnsInRow ] = useState( MIN_COLUMNS_NUM );\n\tconst screenWidth = Math.floor( Dimensions.get( 'window' ).width );\n\tconst globalStyles = useGlobalStyles();\n\n\tconst { verticalAlignment, align } = attributes;\n\tconst { width } = sizes || {};\n\n\tconst [ availableUnits ] = useSettings( 'spacing.units' );\n\tconst units = useCustomUnits( {\n\t\tavailableUnits: availableUnits || [ '%', 'px', 'em', 'rem', 'vw' ],\n\t} );\n\n\tuseEffect( () => {\n\t\tif ( columnCount === 0 ) {\n\t\t\tconst newColumnCount = columnCount || DEFAULT_COLUMNS_NUM;\n\t\t\tupdateColumns( columnCount, newColumnCount );\n\t\t}\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tif ( width ) {\n\t\t\tif ( getColumnsInRow( width, columnCount ) !== columnsInRow ) {\n\t\t\t\tsetColumnsInRow( getColumnsInRow( width, columnCount ) );\n\t\t\t}\n\t\t}\n\t}, [ width, columnCount ] );\n\n\tconst renderAppender = () => {\n\t\tif ( isSelected ) {\n\t\t\treturn (\n\t\t\t\t<View style={ isFullWidth( align ) && styles.columnAppender }>\n\t\t\t\t\t<InnerBlocks.ButtonBlockAppender\n\t\t\t\t\t\tonAddBlock={ onAddBlock }\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t};\n\n\tconst contentWidths = useMemo(\n\t\t() =>\n\t\t\tgetContentWidths(\n\t\t\t\tcolumnsInRow,\n\t\t\t\twidth,\n\t\t\t\tcolumnCount,\n\t\t\t\tinnerWidths,\n\t\t\t\tglobalStyles\n\t\t\t),\n\t\t[ width, columnsInRow, columnCount, innerWidths, globalStyles ]\n\t);\n\n\tconst onAddBlock = useCallback( () => {\n\t\tupdateColumns( columnCount, columnCount + 1 );\n\t}, [ columnCount ] );\n\n\tconst onChangeWidth = ( nextWidth, valueUnit, columnId ) => {\n\t\tconst widthWithUnit = getWidthWithUnit( nextWidth, valueUnit );\n\n\t\tupdateInnerColumnWidth( widthWithUnit, columnId );\n\t};\n\n\tconst onChangeUnit = ( nextUnit, index, columnId ) => {\n\t\tconst widthWithoutUnit = parseFloat(\n\t\t\tgetWidths( innerWidths )[ index ]\n\t\t);\n\t\tconst widthWithUnit = getWidthWithUnit( widthWithoutUnit, nextUnit );\n\n\t\tupdateInnerColumnWidth( widthWithUnit, columnId );\n\t};\n\n\tconst onChange = ( nextWidth, valueUnit, columnId ) => {\n\t\tif ( isPercentageUnit( valueUnit ) || ! valueUnit ) {\n\t\t\treturn;\n\t\t}\n\t\tonChangeWidth( nextWidth, valueUnit, columnId );\n\t};\n\n\tconst getColumnsSliders = useMemo( () => {\n\t\tif ( ! editorSidebarOpened || ! isSelected ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn innerWidths.map( ( column, index ) => {\n\t\t\tconst { valueUnit = '%' } =\n\t\t\t\tgetValueAndUnit( column.attributes.width ) || {};\n\t\t\tconst label = sprintf(\n\t\t\t\t/* translators: %d: column index. */\n\t\t\t\t__( 'Column %d' ),\n\t\t\t\tindex + 1\n\t\t\t);\n\t\t\treturn (\n\t\t\t\t<UnitControl\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tsettingLabel={ __( 'Width' ) }\n\t\t\t\t\tkey={ `${ column.clientId }-${\n\t\t\t\t\t\tgetWidths( innerWidths ).length\n\t\t\t\t\t}` }\n\t\t\t\t\tmin={ 1 }\n\t\t\t\t\tmax={\n\t\t\t\t\t\tisPercentageUnit( valueUnit ) || ! valueUnit\n\t\t\t\t\t\t\t? 100\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t\tvalue={ getWidths( innerWidths )[ index ] }\n\t\t\t\t\tonChange={ ( nextWidth ) => {\n\t\t\t\t\t\tonChange( nextWidth, valueUnit, column.clientId );\n\t\t\t\t\t} }\n\t\t\t\t\tonUnitChange={ ( nextUnit ) =>\n\t\t\t\t\t\tonChangeUnit( nextUnit, index, column.clientId )\n\t\t\t\t\t}\n\t\t\t\t\tonComplete={ ( nextWidth ) => {\n\t\t\t\t\t\tonChangeWidth( nextWidth, valueUnit, column.clientId );\n\t\t\t\t\t} }\n\t\t\t\t\tunit={ valueUnit }\n\t\t\t\t\tunits={ units }\n\t\t\t\t\tpreview={\n\t\t\t\t\t\t<ColumnsPreview\n\t\t\t\t\t\t\tcolumnWidths={ getWidths( innerWidths, false ) }\n\t\t\t\t\t\t\tselectedColumnIndex={ index }\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t);\n\t\t} );\n\t}, [ editorSidebarOpened, isSelected, innerWidths ] );\n\n\tconst onChangeColumnsNum = useCallback(\n\t\t( value ) => {\n\t\t\tupdateColumns( columnCount, value );\n\t\t},\n\t\t[ columnCount ]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{ isSelected && (\n\t\t\t\t<>\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<PanelBody title={ __( 'Columns Settings' ) }>\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Number of columns' ) }\n\t\t\t\t\t\t\t\ticon={ columns }\n\t\t\t\t\t\t\t\tvalue={ columnCount }\n\t\t\t\t\t\t\t\tonChange={ onChangeColumnsNum }\n\t\t\t\t\t\t\t\tmin={ MIN_COLUMNS_NUM }\n\t\t\t\t\t\t\t\tmax={ columnCount + 1 }\n\t\t\t\t\t\t\t\ttype=\"stepper\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ getColumnsSliders }\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t<PanelBody>\n\t\t\t\t\t\t\t<FooterMessageControl\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'Note: Column layout may vary between themes and screen sizes'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<View style={ isSelected && styles.innerBlocksSelected }>\n\t\t\t\t{ resizeListener }\n\t\t\t\t{ width && (\n\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\trenderAppender={ renderAppender }\n\t\t\t\t\t\torientation={\n\t\t\t\t\t\t\tcolumnsInRow > 1 ? 'horizontal' : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\thorizontal={ columnsInRow > 1 }\n\t\t\t\t\t\tcontentResizeMode=\"stretch\"\n\t\t\t\t\t\tonAddBlock={ onAddBlock }\n\t\t\t\t\t\tonDeleteBlock={\n\t\t\t\t\t\t\tcolumnCount === 1 ? onDeleteBlock : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\tblockWidth={ width }\n\t\t\t\t\t\tcontentStyle={ contentWidths }\n\t\t\t\t\t\tparentWidth={\n\t\t\t\t\t\t\tisFullWidth( align ) && columnCount === 0\n\t\t\t\t\t\t\t\t? screenWidth\n\t\t\t\t\t\t\t\t: calculateContainerWidth( width, columnsInRow )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</View>\n\t\t</>\n\t);\n}\n\nconst ColumnsEditContainerWrapper = withDispatch(\n\t( dispatch, ownProps, registry ) => ( {\n\t\t/**\n\t\t * Update all child Column blocks with a new vertical alignment setting\n\t\t * based on whatever alignment is passed in. This allows change to parent\n\t\t * to override anything set on a individual column basis.\n\t\t *\n\t\t * @param {string} verticalAlignment the vertical alignment setting\n\t\t */\n\t\tupdateAlignment( verticalAlignment ) {\n\t\t\tconst { clientId, setAttributes } = ownProps;\n\t\t\tconst { updateBlockAttributes } = dispatch( blockEditorStore );\n\t\t\tconst { getBlockOrder } = registry.select( blockEditorStore );\n\n\t\t\t// Update own alignment.\n\t\t\tsetAttributes( { verticalAlignment } );\n\n\t\t\t// Update all child Column Blocks to match.\n\t\t\tconst innerBlockClientIds = getBlockOrder( clientId );\n\t\t\tinnerBlockClientIds.forEach( ( innerBlockClientId ) => {\n\t\t\t\tupdateBlockAttributes( innerBlockClientId, {\n\t\t\t\t\tverticalAlignment,\n\t\t\t\t} );\n\t\t\t} );\n\t\t},\n\t\tupdateInnerColumnWidth( value, columnId ) {\n\t\t\tconst { updateBlockAttributes } = dispatch( blockEditorStore );\n\n\t\t\tupdateBlockAttributes( columnId, {\n\t\t\t\twidth: value,\n\t\t\t} );\n\t\t},\n\t\t/**\n\t\t * Updates the column columnCount, including necessary revisions to child Column\n\t\t * blocks to grant required or redistribute available space.\n\t\t *\n\t\t * @param {number} previousColumns Previous column columnCount.\n\t\t * @param {number} newColumns      New column columnCount.\n\t\t */\n\t\tupdateColumns( previousColumns, newColumns ) {\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst { replaceInnerBlocks } = dispatch( blockEditorStore );\n\t\t\tconst { getBlocks, getBlockAttributes } =\n\t\t\t\tregistry.select( blockEditorStore );\n\n\t\t\tlet innerBlocks = getBlocks( clientId );\n\t\t\tconst hasExplicitWidths =\n\t\t\t\thasExplicitPercentColumnWidths( innerBlocks );\n\n\t\t\t// Redistribute available width for existing inner blocks.\n\t\t\tconst isAddingColumn = newColumns > previousColumns;\n\n\t\t\t// Get verticalAlignment from Columns block to set the same to new Column.\n\t\t\tconst { verticalAlignment } = getBlockAttributes( clientId ) || {};\n\n\t\t\tif ( isAddingColumn && hasExplicitWidths ) {\n\t\t\t\t// If adding a new column, assign width to the new column equal to\n\t\t\t\t// as if it were `1 / columns` of the total available space.\n\t\t\t\tconst newColumnWidth = toWidthPrecision( 100 / newColumns );\n\n\t\t\t\t// Redistribute in consideration of pending block insertion as\n\t\t\t\t// constraining the available working width.\n\t\t\t\tconst widths = getRedistributedColumnWidths(\n\t\t\t\t\tinnerBlocks,\n\t\t\t\t\t100 - newColumnWidth\n\t\t\t\t);\n\n\t\t\t\tinnerBlocks = [\n\t\t\t\t\t...getMappedColumnWidths( innerBlocks, widths ),\n\t\t\t\t\t...Array.from( {\n\t\t\t\t\t\tlength: newColumns - previousColumns,\n\t\t\t\t\t} ).map( () => {\n\t\t\t\t\t\treturn createBlock( 'core/column', {\n\t\t\t\t\t\t\twidth: `${ newColumnWidth }%`,\n\t\t\t\t\t\t\tverticalAlignment,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} ),\n\t\t\t\t];\n\t\t\t} else if ( isAddingColumn ) {\n\t\t\t\tinnerBlocks = [\n\t\t\t\t\t...innerBlocks,\n\t\t\t\t\t...Array.from( {\n\t\t\t\t\t\tlength: newColumns - previousColumns,\n\t\t\t\t\t} ).map( () => {\n\t\t\t\t\t\treturn createBlock( 'core/column', {\n\t\t\t\t\t\t\tverticalAlignment,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} ),\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\t// The removed column will be the last of the inner blocks.\n\t\t\t\tinnerBlocks = innerBlocks.slice(\n\t\t\t\t\t0,\n\t\t\t\t\t-( previousColumns - newColumns )\n\t\t\t\t);\n\n\t\t\t\tif ( hasExplicitWidths ) {\n\t\t\t\t\t// Redistribute as if block is already removed.\n\t\t\t\t\tconst widths = getRedistributedColumnWidths(\n\t\t\t\t\t\tinnerBlocks,\n\t\t\t\t\t\t100\n\t\t\t\t\t);\n\n\t\t\t\t\tinnerBlocks = getMappedColumnWidths( innerBlocks, widths );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treplaceInnerBlocks( clientId, innerBlocks );\n\t\t},\n\t\tonAddNextColumn: () => {\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst { replaceInnerBlocks, selectBlock } =\n\t\t\t\tdispatch( blockEditorStore );\n\t\t\tconst { getBlocks, getBlockAttributes } =\n\t\t\t\tregistry.select( blockEditorStore );\n\n\t\t\t// Get verticalAlignment from Columns block to set the same to new Column.\n\t\t\tconst { verticalAlignment } = getBlockAttributes( clientId );\n\n\t\t\tconst innerBlocks = getBlocks( clientId );\n\n\t\t\tconst insertedBlock = createBlock( 'core/column', {\n\t\t\t\tverticalAlignment,\n\t\t\t} );\n\n\t\t\treplaceInnerBlocks(\n\t\t\t\tclientId,\n\t\t\t\t[ ...innerBlocks, insertedBlock ],\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tselectBlock( insertedBlock.clientId );\n\t\t},\n\t\tonDeleteBlock: () => {\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst { removeBlock } = dispatch( blockEditorStore );\n\t\t\tremoveBlock( clientId );\n\t\t},\n\t} )\n)( memo( ColumnsEditContainer ) );\n\nconst ColumnsEdit = ( props ) => {\n\tconst { clientId, isSelected, style } = props;\n\tconst {\n\t\tcolumnCount,\n\t\tisDefaultColumns,\n\t\tinnerBlocks,\n\t\thasParents,\n\t\tparentBlockAlignment,\n\t\teditorSidebarOpened,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockCount,\n\t\t\t\tgetBlocks,\n\t\t\t\tgetBlockParents,\n\t\t\t\tgetBlockAttributes,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst { isEditorSidebarOpened } = select( 'core/edit-post' );\n\n\t\t\tconst innerBlocksList = getBlocks( clientId );\n\n\t\t\tconst isContentEmpty = innerBlocksList.every(\n\t\t\t\t( innerBlock ) => innerBlock.innerBlocks.length === 0\n\t\t\t);\n\n\t\t\tconst parents = getBlockParents( clientId, true );\n\n\t\t\treturn {\n\t\t\t\tcolumnCount: getBlockCount( clientId ),\n\t\t\t\tisDefaultColumns: isContentEmpty,\n\t\t\t\tinnerBlocks: innerBlocksList,\n\t\t\t\thasParents: parents.length > 0,\n\t\t\t\tparentBlockAlignment: getBlockAttributes( parents[ 0 ] )?.align,\n\t\t\t\teditorSidebarOpened: isSelected && isEditorSidebarOpened(),\n\t\t\t};\n\t\t},\n\t\t[ clientId, isSelected ]\n\t);\n\n\tconst innerWidths = useMemo(\n\t\t() =>\n\t\t\tinnerBlocks.map( ( inn ) => ( {\n\t\t\t\tclientId: inn.clientId,\n\t\t\t\tattributes: { width: inn.attributes.width },\n\t\t\t} ) ),\n\t\t[ innerBlocks ]\n\t);\n\n\tconst [ isVisible, setIsVisible ] = useState( false );\n\n\tuseEffect( () => {\n\t\tif ( isSelected && isDefaultColumns ) {\n\t\t\tconst revealTimeout = setTimeout( () => setIsVisible( true ), 100 );\n\n\t\t\treturn () => clearTimeout( revealTimeout );\n\t\t}\n\t}, [] );\n\n\tconst onClose = useCallback( () => {\n\t\tsetIsVisible( false );\n\t}, [] );\n\n\treturn (\n\t\t<View style={ style }>\n\t\t\t<ColumnsEditContainerWrapper\n\t\t\t\tcolumnCount={ columnCount }\n\t\t\t\tinnerWidths={ innerWidths }\n\t\t\t\thasParents={ hasParents }\n\t\t\t\tparentBlockAlignment={ parentBlockAlignment }\n\t\t\t\teditorSidebarOpened={ editorSidebarOpened }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t\t<BlockVariationPicker\n\t\t\t\tvariations={ variations }\n\t\t\t\tonClose={ onClose }\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisVisible={ isVisible }\n\t\t\t/>\n\t\t</View>\n\t);\n};\n\nexport default ColumnsEdit;\n"],"mappings":"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","ignoreList":[]}