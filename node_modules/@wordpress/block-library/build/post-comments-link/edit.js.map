{"version":3,"names":["_clsx","_interopRequireDefault","require","_blockEditor","_element","_data","_apiFetch","_url","_i18n","_coreData","_jsxRuntime","PostCommentsLinkEdit","context","attributes","setAttributes","textAlign","postType","postId","commentsCount","setCommentsCount","useState","blockProps","useBlockProps","className","clsx","useEffect","currentPostId","apiFetch","path","addQueryArgs","post","parse","then","res","headers","get","useSelect","select","coreStore","getEditedEntityRecord","link","commentsText","undefined","commentsNumber","parseInt","__","sprintf","_n","toLocaleString","jsxs","Fragment","children","jsx","BlockControls","group","AlignmentControl","value","onChange","nextAlign","href","onClick","event","preventDefault","Warning","_default","exports","default"],"sources":["@wordpress/block-library/src/post-comments-link/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tWarning,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { useState, useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { __, sprintf, _n } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\n\nfunction PostCommentsLinkEdit( { context, attributes, setAttributes } ) {\n\tconst { textAlign } = attributes;\n\tconst { postType, postId } = context;\n\tconst [ commentsCount, setCommentsCount ] = useState();\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: clsx( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\tuseEffect( () => {\n\t\tif ( ! postId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentPostId = postId;\n\t\tapiFetch( {\n\t\t\tpath: addQueryArgs( '/wp/v2/comments', {\n\t\t\t\tpost: postId,\n\t\t\t} ),\n\t\t\tparse: false,\n\t\t} ).then( ( res ) => {\n\t\t\t// Stale requests will have the `currentPostId` of an older closure.\n\t\t\tif ( currentPostId === postId ) {\n\t\t\t\tsetCommentsCount( res.headers.get( 'X-WP-Total' ) );\n\t\t\t}\n\t\t} );\n\t}, [ postId ] );\n\n\tconst post = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpostType,\n\t\t\t\tpostId\n\t\t\t),\n\t\t[ postType, postId ]\n\t);\n\n\tif ( ! post ) {\n\t\treturn null;\n\t}\n\n\tconst { link } = post;\n\n\tlet commentsText;\n\tif ( commentsCount !== undefined ) {\n\t\tconst commentsNumber = parseInt( commentsCount );\n\n\t\tif ( commentsNumber === 0 ) {\n\t\t\tcommentsText = __( 'No comments' );\n\t\t} else {\n\t\t\tcommentsText = sprintf(\n\t\t\t\t/* translators: %s: Number of comments */\n\t\t\t\t_n( '%s comment', '%s comments', commentsNumber ),\n\t\t\t\tcommentsNumber.toLocaleString()\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\t\t\t<div { ...blockProps }>\n\t\t\t\t{ link && commentsText !== undefined ? (\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={ link + '#comments' }\n\t\t\t\t\t\tonClick={ ( event ) => event.preventDefault() }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ commentsText }\n\t\t\t\t\t</a>\n\t\t\t\t) : (\n\t\t\t\t\t<Warning>\n\t\t\t\t\t\t{ __( 'Post Comments Link block: post not found.' ) }\n\t\t\t\t\t</Warning>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default PostCommentsLinkEdit;\n"],"mappings":"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","ignoreList":[]}