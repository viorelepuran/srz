{"version":3,"names":["_element","require","useImageSizes","images","isSelected","getSettings","useMemo","getImageSizing","length","imageSizes","resizedImages","reduce","currentResizedImages","img","id","sizes","currentSizes","size","defaultUrl","slug","url","mediaDetailsUrl","media_details","source_url","parseInt","resizedImageSizes","Object","values","filter","some","map","name","value","label"],"sources":["@wordpress/block-library/src/gallery/use-image-sizes.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Calculates the image sizes that are available for the current gallery images in order to\n * populate the 'Resolution' selector.\n *\n * @param {Array}    images      Basic image block data taken from current gallery innerBlock.\n * @param {boolean}  isSelected  Is the block currently selected in the editor.\n * @param {Function} getSettings Block editor store selector.\n *\n * @return {Array} An array of image size options.\n */\nexport default function useImageSizes( images, isSelected, getSettings ) {\n\treturn useMemo( () => getImageSizing(), [ images, isSelected ] );\n\n\tfunction getImageSizing() {\n\t\tif ( ! images || images.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\tconst { imageSizes } = getSettings();\n\t\tlet resizedImages = {};\n\n\t\tif ( isSelected ) {\n\t\t\tresizedImages = images.reduce( ( currentResizedImages, img ) => {\n\t\t\t\tif ( ! img.id ) {\n\t\t\t\t\treturn currentResizedImages;\n\t\t\t\t}\n\n\t\t\t\tconst sizes = imageSizes.reduce( ( currentSizes, size ) => {\n\t\t\t\t\tconst defaultUrl = img.sizes?.[ size.slug ]?.url;\n\t\t\t\t\tconst mediaDetailsUrl =\n\t\t\t\t\t\timg.media_details?.sizes?.[ size.slug ]?.source_url;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...currentSizes,\n\t\t\t\t\t\t[ size.slug ]: defaultUrl || mediaDetailsUrl,\n\t\t\t\t\t};\n\t\t\t\t}, {} );\n\t\t\t\treturn {\n\t\t\t\t\t...currentResizedImages,\n\t\t\t\t\t[ parseInt( img.id, 10 ) ]: sizes,\n\t\t\t\t};\n\t\t\t}, {} );\n\t\t}\n\t\tconst resizedImageSizes = Object.values( resizedImages );\n\t\treturn imageSizes\n\t\t\t.filter( ( { slug } ) =>\n\t\t\t\tresizedImageSizes.some( ( sizes ) => sizes[ slug ] )\n\t\t\t)\n\t\t\t.map( ( { name, slug } ) => ( { value: slug, label: name } ) );\n\t}\n}\n"],"mappings":";;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,aAAaA,CAAEC,MAAM,EAAEC,UAAU,EAAEC,WAAW,EAAG;EACxE,OAAO,IAAAC,gBAAO,EAAE,MAAMC,cAAc,CAAC,CAAC,EAAE,CAAEJ,MAAM,EAAEC,UAAU,CAAG,CAAC;EAEhE,SAASG,cAAcA,CAAA,EAAG;IACzB,IAAK,CAAEJ,MAAM,IAAIA,MAAM,CAACK,MAAM,KAAK,CAAC,EAAG;MACtC;IACD;IACA,MAAM;MAAEC;IAAW,CAAC,GAAGJ,WAAW,CAAC,CAAC;IACpC,IAAIK,aAAa,GAAG,CAAC,CAAC;IAEtB,IAAKN,UAAU,EAAG;MACjBM,aAAa,GAAGP,MAAM,CAACQ,MAAM,CAAE,CAAEC,oBAAoB,EAAEC,GAAG,KAAM;QAC/D,IAAK,CAAEA,GAAG,CAACC,EAAE,EAAG;UACf,OAAOF,oBAAoB;QAC5B;QAEA,MAAMG,KAAK,GAAGN,UAAU,CAACE,MAAM,CAAE,CAAEK,YAAY,EAAEC,IAAI,KAAM;UAC1D,MAAMC,UAAU,GAAGL,GAAG,CAACE,KAAK,GAAIE,IAAI,CAACE,IAAI,CAAE,EAAEC,GAAG;UAChD,MAAMC,eAAe,GACpBR,GAAG,CAACS,aAAa,EAAEP,KAAK,GAAIE,IAAI,CAACE,IAAI,CAAE,EAAEI,UAAU;UACpD,OAAO;YACN,GAAGP,YAAY;YACf,CAAEC,IAAI,CAACE,IAAI,GAAID,UAAU,IAAIG;UAC9B,CAAC;QACF,CAAC,EAAE,CAAC,CAAE,CAAC;QACP,OAAO;UACN,GAAGT,oBAAoB;UACvB,CAAEY,QAAQ,CAAEX,GAAG,CAACC,EAAE,EAAE,EAAG,CAAC,GAAIC;QAC7B,CAAC;MACF,CAAC,EAAE,CAAC,CAAE,CAAC;IACR;IACA,MAAMU,iBAAiB,GAAGC,MAAM,CAACC,MAAM,CAAEjB,aAAc,CAAC;IACxD,OAAOD,UAAU,CACfmB,MAAM,CAAE,CAAE;MAAET;IAAK,CAAC,KAClBM,iBAAiB,CAACI,IAAI,CAAId,KAAK,IAAMA,KAAK,CAAEI,IAAI,CAAG,CACpD,CAAC,CACAW,GAAG,CAAE,CAAE;MAAEC,IAAI;MAAEZ;IAAK,CAAC,MAAQ;MAAEa,KAAK,EAAEb,IAAI;MAAEc,KAAK,EAAEF;IAAK,CAAC,CAAG,CAAC;EAChE;AACD","ignoreList":[]}