"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Gallery;
var _clsx = _interopRequireDefault(require("clsx"));
var _i18n = require("@wordpress/i18n");
var _primitives = require("@wordpress/primitives");
var _caption = require("../utils/caption");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function Gallery(props) {
  const {
    attributes,
    isSelected,
    setAttributes,
    mediaPlaceholder,
    insertBlocksAfter,
    blockProps,
    __unstableLayoutClassNames: layoutClassNames,
    isContentLocked,
    multiGallerySelection
  } = props;
  const {
    align,
    columns,
    imageCrop
  } = attributes;
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("figure", {
    ...blockProps,
    className: (0, _clsx.default)(blockProps.className, layoutClassNames, 'blocks-gallery-grid', {
      [`align${align}`]: align,
      [`columns-${columns}`]: columns !== undefined,
      [`columns-default`]: columns === undefined,
      'is-cropped': imageCrop
    }),
    children: [blockProps.children, isSelected && !blockProps.children && /*#__PURE__*/(0, _jsxRuntime.jsx)(_primitives.View, {
      className: "blocks-gallery-media-placeholder-wrapper",
      children: mediaPlaceholder
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_caption.Caption, {
      attributes: attributes,
      setAttributes: setAttributes,
      isSelected: isSelected,
      insertBlocksAfter: insertBlocksAfter,
      showToolbarButton: !multiGallerySelection && !isContentLocked,
      className: "blocks-gallery-caption",
      label: (0, _i18n.__)('Gallery caption text'),
      placeholder: (0, _i18n.__)('Add gallery caption')
    })]
  });
}
//# sourceMappingURL=gallery.js.map