{"version":3,"names":["_clsx","_interopRequireDefault","require","_coreData","_element","_blockEditor","_components","_i18n","_data","_hooks","_jsxRuntime","ELLIPSIS","PostExcerptEditor","attributes","textAlign","moreText","showMoreOnNewLine","excerptLength","setAttributes","isSelected","context","postId","postType","queryId","isDescendentOfQueryLoop","Number","isFinite","userCanEdit","useCanEditEntity","rawExcerpt","setExcerpt","rendered","renderedExcerpt","protected","isProtected","useEntityProp","dropdownMenuProps","useToolsPanelDropdownMenuProps","postTypeSupportsExcerpts","useSelect","select","coreStore","getPostType","supports","excerpt","isEditable","blockProps","useBlockProps","className","clsx","wordCountType","_x","strippedRenderedExcerpt","useMemo","document","window","DOMParser","parseFromString","body","textContent","innerText","jsxs","Fragment","children","jsx","BlockControls","AlignmentToolbar","value","onChange","newAlign","__","Warning","readMoreLink","RichText","identifier","tagName","placeholder","newMoreText","withoutInteractiveFormatting","excerptClassName","rawOrRenderedExcerpt","trim","trimmedExcerpt","split","join","excerptWithSpaces","numberOfSpaces","length","replaceAll","isTrimmed","excerptContent","InspectorControls","__experimentalToolsPanel","label","resetAll","__experimentalToolsPanelItem","hasValue","onDeselect","isShownByDefault","ToggleControl","__nextHasNoMarginBottom","checked","newShowMoreOnNewLine","RangeControl","__next40pxDefaultSize","min","max"],"sources":["@wordpress/block-library/src/post-excerpt/edit.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { useEntityProp, store as coreStore } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\nimport {\n\tAlignmentToolbar,\n\tBlockControls,\n\tInspectorControls,\n\tRichText,\n\tWarning,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport {\n\tToggleControl,\n\tRangeControl,\n\t__experimentalToolsPanel as ToolsPanel,\n\t__experimentalToolsPanelItem as ToolsPanelItem,\n} from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tuseCanEditEntity,\n\tuseToolsPanelDropdownMenuProps,\n} from '../utils/hooks';\n\nconst ELLIPSIS = '…';\n\nexport default function PostExcerptEditor( {\n\tattributes: { textAlign, moreText, showMoreOnNewLine, excerptLength },\n\tsetAttributes,\n\tisSelected,\n\tcontext: { postId, postType, queryId },\n} ) {\n\tconst isDescendentOfQueryLoop = Number.isFinite( queryId );\n\tconst userCanEdit = useCanEditEntity( 'postType', postType, postId );\n\tconst [\n\t\trawExcerpt,\n\t\tsetExcerpt,\n\t\t{ rendered: renderedExcerpt, protected: isProtected } = {},\n\t] = useEntityProp( 'postType', postType, 'excerpt', postId );\n\n\tconst dropdownMenuProps = useToolsPanelDropdownMenuProps();\n\n\t/**\n\t * Check if the post type supports excerpts.\n\t * Add an exception and return early for the \"page\" post type,\n\t * which is registered without support for the excerpt UI,\n\t * but supports saving the excerpt to the database.\n\t * See: https://core.trac.wordpress.org/browser/branches/6.1/src/wp-includes/post.php#L65\n\t * Without this exception, users that have excerpts saved to the database will\n\t * not be able to edit the excerpts.\n\t */\n\tconst postTypeSupportsExcerpts = useSelect(\n\t\t( select ) => {\n\t\t\tif ( postType === 'page' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !! select( coreStore ).getPostType( postType )?.supports\n\t\t\t\t?.excerpt;\n\t\t},\n\t\t[ postType ]\n\t);\n\n\t/**\n\t * The excerpt is editable if:\n\t * - The user can edit the post\n\t * - It is not a descendent of a Query Loop block\n\t * - The post type supports excerpts\n\t */\n\tconst isEditable =\n\t\tuserCanEdit && ! isDescendentOfQueryLoop && postTypeSupportsExcerpts;\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: clsx( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\t/**\n\t * translators: If your word count is based on single characters (e.g. East Asian characters),\n\t * enter 'characters_excluding_spaces' or 'characters_including_spaces'. Otherwise, enter 'words'.\n\t * Do not translate into your own language.\n\t */\n\tconst wordCountType = _x( 'words', 'Word count type. Do not translate!' );\n\n\t/**\n\t * When excerpt is editable, strip the html tags from\n\t * rendered excerpt. This will be used if the entity's\n\t * excerpt has been produced from the content.\n\t */\n\tconst strippedRenderedExcerpt = useMemo( () => {\n\t\tif ( ! renderedExcerpt ) {\n\t\t\treturn '';\n\t\t}\n\t\tconst document = new window.DOMParser().parseFromString(\n\t\t\trenderedExcerpt,\n\t\t\t'text/html'\n\t\t);\n\t\treturn document.body.textContent || document.body.innerText || '';\n\t}, [ renderedExcerpt ] );\n\n\tif ( ! postType || ! postId ) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<AlignmentToolbar\n\t\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\t\tonChange={ ( newAlign ) =>\n\t\t\t\t\t\t\tsetAttributes( { textAlign: newAlign } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t\t<div { ...blockProps }>\n\t\t\t\t\t<p>{ __( 'This block will display the excerpt.' ) }</p>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n\tif ( isProtected && ! userCanEdit ) {\n\t\treturn (\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<Warning>\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t'The content is currently protected and does not have the available excerpt.'\n\t\t\t\t\t) }\n\t\t\t\t</Warning>\n\t\t\t</div>\n\t\t);\n\t}\n\tconst readMoreLink = (\n\t\t<RichText\n\t\t\tidentifier=\"moreText\"\n\t\t\tclassName=\"wp-block-post-excerpt__more-link\"\n\t\t\ttagName=\"a\"\n\t\t\taria-label={ __( '“Read more” link text' ) }\n\t\t\tplaceholder={ __( 'Add \"read more\" link text' ) }\n\t\t\tvalue={ moreText }\n\t\t\tonChange={ ( newMoreText ) =>\n\t\t\t\tsetAttributes( { moreText: newMoreText } )\n\t\t\t}\n\t\t\twithoutInteractiveFormatting\n\t\t/>\n\t);\n\tconst excerptClassName = clsx( 'wp-block-post-excerpt__excerpt', {\n\t\t'is-inline': ! showMoreOnNewLine,\n\t} );\n\n\t/**\n\t * The excerpt length setting needs to be applied to both\n\t * the raw and the rendered excerpt depending on which is being used.\n\t */\n\tconst rawOrRenderedExcerpt = (\n\t\trawExcerpt || strippedRenderedExcerpt\n\t).trim();\n\n\tlet trimmedExcerpt = '';\n\tif ( wordCountType === 'words' ) {\n\t\ttrimmedExcerpt = rawOrRenderedExcerpt\n\t\t\t.split( ' ', excerptLength )\n\t\t\t.join( ' ' );\n\t} else if ( wordCountType === 'characters_excluding_spaces' ) {\n\t\t/*\n\t\t * 1. Split the excerpt at the character limit,\n\t\t * then join the substrings back into one string.\n\t\t * 2. Count the number of spaces in the excerpt\n\t\t * by comparing the lengths of the string with and without spaces.\n\t\t * 3. Add the number to the length of the visible excerpt,\n\t\t * so that the spaces are excluded from the word count.\n\t\t */\n\t\tconst excerptWithSpaces = rawOrRenderedExcerpt\n\t\t\t.split( '', excerptLength )\n\t\t\t.join( '' );\n\n\t\tconst numberOfSpaces =\n\t\t\texcerptWithSpaces.length -\n\t\t\texcerptWithSpaces.replaceAll( ' ', '' ).length;\n\n\t\ttrimmedExcerpt = rawOrRenderedExcerpt\n\t\t\t.split( '', excerptLength + numberOfSpaces )\n\t\t\t.join( '' );\n\t} else if ( wordCountType === 'characters_including_spaces' ) {\n\t\ttrimmedExcerpt = rawOrRenderedExcerpt\n\t\t\t.split( '', excerptLength )\n\t\t\t.join( '' );\n\t}\n\n\tconst isTrimmed = trimmedExcerpt !== rawOrRenderedExcerpt;\n\n\tconst excerptContent = isEditable ? (\n\t\t<RichText\n\t\t\tclassName={ excerptClassName }\n\t\t\taria-label={ __( 'Excerpt text' ) }\n\t\t\tvalue={\n\t\t\t\tisSelected\n\t\t\t\t\t? rawOrRenderedExcerpt\n\t\t\t\t\t: ( ! isTrimmed\n\t\t\t\t\t\t\t? rawOrRenderedExcerpt\n\t\t\t\t\t\t\t: trimmedExcerpt + ELLIPSIS ) ||\n\t\t\t\t\t  __( 'No excerpt found' )\n\t\t\t}\n\t\t\tonChange={ setExcerpt }\n\t\t\ttagName=\"p\"\n\t\t/>\n\t) : (\n\t\t<p className={ excerptClassName }>\n\t\t\t{ ! isTrimmed\n\t\t\t\t? rawOrRenderedExcerpt || __( 'No excerpt found' )\n\t\t\t\t: trimmedExcerpt + ELLIPSIS }\n\t\t</p>\n\t);\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( newAlign ) =>\n\t\t\t\t\t\tsetAttributes( { textAlign: newAlign } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls>\n\t\t\t\t<ToolsPanel\n\t\t\t\t\tlabel={ __( 'Settings' ) }\n\t\t\t\t\tresetAll={ () => {\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\tshowMoreOnNewLine: true,\n\t\t\t\t\t\t\texcerptLength: 55,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\tdropdownMenuProps={ dropdownMenuProps }\n\t\t\t\t>\n\t\t\t\t\t<ToolsPanelItem\n\t\t\t\t\t\thasValue={ () => showMoreOnNewLine !== true }\n\t\t\t\t\t\tlabel={ __( 'Show link on new line' ) }\n\t\t\t\t\t\tonDeselect={ () =>\n\t\t\t\t\t\t\tsetAttributes( { showMoreOnNewLine: true } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisShownByDefault\n\t\t\t\t\t>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\tlabel={ __( 'Show link on new line' ) }\n\t\t\t\t\t\t\tchecked={ showMoreOnNewLine }\n\t\t\t\t\t\t\tonChange={ ( newShowMoreOnNewLine ) =>\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tshowMoreOnNewLine: newShowMoreOnNewLine,\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolsPanelItem>\n\t\t\t\t\t<ToolsPanelItem\n\t\t\t\t\t\thasValue={ () => excerptLength !== 55 }\n\t\t\t\t\t\tlabel={ __( 'Max number of words' ) }\n\t\t\t\t\t\tonDeselect={ () =>\n\t\t\t\t\t\t\tsetAttributes( { excerptLength: 55 } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisShownByDefault\n\t\t\t\t\t>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\tlabel={ __( 'Max number of words' ) }\n\t\t\t\t\t\t\tvalue={ excerptLength }\n\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\tsetAttributes( { excerptLength: value } );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tmin=\"10\"\n\t\t\t\t\t\t\tmax=\"100\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolsPanelItem>\n\t\t\t\t</ToolsPanel>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t{ excerptContent }\n\t\t\t\t{ ! showMoreOnNewLine && ' ' }\n\t\t\t\t{ showMoreOnNewLine ? (\n\t\t\t\t\t<p className=\"wp-block-post-excerpt__more-text\">\n\t\t\t\t\t\t{ readMoreLink }\n\t\t\t\t\t</p>\n\t\t\t\t) : (\n\t\t\t\t\treadMoreLink\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}