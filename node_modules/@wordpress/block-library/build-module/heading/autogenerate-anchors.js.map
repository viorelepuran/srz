{"version":3,"names":["removeAccents","anchors","getTextWithoutMarkup","text","dummyElement","document","createElement","innerHTML","innerText","getSlug","content","replace","toLowerCase","generateAnchor","clientId","slug","anchor","i","Object","values","includes","setAnchor"],"sources":["@wordpress/block-library/src/heading/autogenerate-anchors.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport removeAccents from 'remove-accents';\n\n/**\n * Object map tracking anchors.\n *\n * @type {Record<string, string | null>}\n */\nconst anchors = {};\n\n/**\n * Returns the text without markup.\n *\n * @param {string} text The text.\n *\n * @return {string} The text without markup.\n */\nconst getTextWithoutMarkup = ( text ) => {\n\tconst dummyElement = document.createElement( 'div' );\n\tdummyElement.innerHTML = text;\n\treturn dummyElement.innerText;\n};\n\n/**\n * Get the slug from the content.\n *\n * @param {string} content The block content.\n *\n * @return {string} Returns the slug.\n */\nconst getSlug = ( content ) => {\n\t// Get the slug.\n\treturn (\n\t\tremoveAccents( getTextWithoutMarkup( content ) )\n\t\t\t// Convert anything that's not a letter or number to a hyphen.\n\t\t\t.replace( /[^\\p{L}\\p{N}]+/gu, '-' )\n\t\t\t// Convert to lowercase\n\t\t\t.toLowerCase()\n\t\t\t// Remove any remaining leading or trailing hyphens.\n\t\t\t.replace( /(^-+)|(-+$)/g, '' )\n\t);\n};\n\n/**\n * Generate the anchor for a heading.\n *\n * @param {string} clientId The block ID.\n * @param {string} content  The block content.\n *\n * @return {string|null} Return the heading anchor.\n */\nexport const generateAnchor = ( clientId, content ) => {\n\tconst slug = getSlug( content );\n\t// If slug is empty, then return null.\n\t// Returning null instead of an empty string allows us to check again when the content changes.\n\tif ( '' === slug ) {\n\t\treturn null;\n\t}\n\n\tdelete anchors[ clientId ];\n\n\tlet anchor = slug;\n\tlet i = 0;\n\n\t// If the anchor already exists in another heading, append -i.\n\twhile ( Object.values( anchors ).includes( anchor ) ) {\n\t\ti += 1;\n\t\tanchor = slug + '-' + i;\n\t}\n\n\treturn anchor;\n};\n\n/**\n * Set the anchor for a heading.\n *\n * @param {string}      clientId The block ID.\n * @param {string|null} anchor   The block anchor.\n */\nexport const setAnchor = ( clientId, anchor ) => {\n\tanchors[ clientId ] = anchor;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,aAAa,MAAM,gBAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAG,CAAC,CAAC;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAKC,IAAI,IAAM;EACxC,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAE,KAAM,CAAC;EACpDF,YAAY,CAACG,SAAS,GAAGJ,IAAI;EAC7B,OAAOC,YAAY,CAACI,SAAS;AAC9B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAKC,OAAO,IAAM;EAC9B;EACA,OACCV,aAAa,CAAEE,oBAAoB,CAAEQ,OAAQ,CAAE;EAC9C;EAAA,CACCC,OAAO,CAAE,kBAAkB,EAAE,GAAI;EAClC;EAAA,CACCC,WAAW,CAAC;EACb;EAAA,CACCD,OAAO,CAAE,cAAc,EAAE,EAAG,CAAC;AAEjC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,cAAc,GAAGA,CAAEC,QAAQ,EAAEJ,OAAO,KAAM;EACtD,MAAMK,IAAI,GAAGN,OAAO,CAAEC,OAAQ,CAAC;EAC/B;EACA;EACA,IAAK,EAAE,KAAKK,IAAI,EAAG;IAClB,OAAO,IAAI;EACZ;EAEA,OAAOd,OAAO,CAAEa,QAAQ,CAAE;EAE1B,IAAIE,MAAM,GAAGD,IAAI;EACjB,IAAIE,CAAC,GAAG,CAAC;;EAET;EACA,OAAQC,MAAM,CAACC,MAAM,CAAElB,OAAQ,CAAC,CAACmB,QAAQ,CAAEJ,MAAO,CAAC,EAAG;IACrDC,CAAC,IAAI,CAAC;IACND,MAAM,GAAGD,IAAI,GAAG,GAAG,GAAGE,CAAC;EACxB;EAEA,OAAOD,MAAM;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,SAAS,GAAGA,CAAEP,QAAQ,EAAEE,MAAM,KAAM;EAChDf,OAAO,CAAEa,QAAQ,CAAE,GAAGE,MAAM;AAC7B,CAAC","ignoreList":[]}