{"version":3,"names":["normalizeRowColSpan","rowColSpan","parsedValue","parseInt","Number","isInteger","undefined","toString"],"sources":["@wordpress/block-library/src/table/utils.js"],"sourcesContent":["/**\n * Normalize the rowspan/colspan value.\n * Returns undefined if the parameter is not a positive number\n * or the default value (1) for rowspan/colspan.\n *\n * @param {number|undefined} rowColSpan rowspan/colspan value.\n *\n * @return {string|undefined} normalized rowspan/colspan value.\n */\nexport function normalizeRowColSpan( rowColSpan ) {\n\tconst parsedValue = parseInt( rowColSpan, 10 );\n\tif ( ! Number.isInteger( parsedValue ) ) {\n\t\treturn undefined;\n\t}\n\treturn parsedValue < 0 || parsedValue === 1\n\t\t? undefined\n\t\t: parsedValue.toString();\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,mBAAmBA,CAAEC,UAAU,EAAG;EACjD,MAAMC,WAAW,GAAGC,QAAQ,CAAEF,UAAU,EAAE,EAAG,CAAC;EAC9C,IAAK,CAAEG,MAAM,CAACC,SAAS,CAAEH,WAAY,CAAC,EAAG;IACxC,OAAOI,SAAS;EACjB;EACA,OAAOJ,WAAW,GAAG,CAAC,IAAIA,WAAW,KAAK,CAAC,GACxCI,SAAS,GACTJ,WAAW,CAACK,QAAQ,CAAC,CAAC;AAC1B","ignoreList":[]}