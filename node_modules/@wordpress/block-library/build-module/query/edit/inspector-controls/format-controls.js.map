{"version":3,"names":["FormTokenField","useSelect","store","coreStore","__","jsx","_jsx","POST_FORMATS","value","label","sort","a","b","normalizedA","toUpperCase","normalizedB","formatNamesToValues","names","formats","map","name","find","item","toLocaleLowerCase","filter","Boolean","FormatControls","onChange","query","format","normalizedFormats","Array","isArray","supportedFormats","select","themeSupports","getThemeSupports","includes","values","suggestions","newValues","__experimentalShowHowTo","__experimentalExpandOnFocus","__nextHasNoMarginBottom","__next40pxDefaultSize"],"sources":["@wordpress/block-library/src/query/edit/inspector-controls/format-controls.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { FormTokenField } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __ } from '@wordpress/i18n';\n\n// All WP post formats, sorted alphabetically by translated name.\n// Value is the post format slug. Label is the name.\nconst POST_FORMATS = [\n\t{ value: 'aside', label: __( 'Aside' ) },\n\t{ value: 'audio', label: __( 'Audio' ) },\n\t{ value: 'chat', label: __( 'Chat' ) },\n\t{ value: 'gallery', label: __( 'Gallery' ) },\n\t{ value: 'image', label: __( 'Image' ) },\n\t{ value: 'link', label: __( 'Link' ) },\n\t{ value: 'quote', label: __( 'Quote' ) },\n\t{ value: 'standard', label: __( 'Standard' ) },\n\t{ value: 'status', label: __( 'Status' ) },\n\t{ value: 'video', label: __( 'Video' ) },\n].sort( ( a, b ) => {\n\tconst normalizedA = a.label.toUpperCase();\n\tconst normalizedB = b.label.toUpperCase();\n\n\tif ( normalizedA < normalizedB ) {\n\t\treturn -1;\n\t}\n\tif ( normalizedA > normalizedB ) {\n\t\treturn 1;\n\t}\n\treturn 0;\n} );\n\n// A helper function to convert translatable post format names into their static values.\nfunction formatNamesToValues( names, formats ) {\n\treturn names\n\t\t.map( ( name ) => {\n\t\t\treturn formats.find(\n\t\t\t\t( item ) =>\n\t\t\t\t\titem.label.toLocaleLowerCase() === name.toLocaleLowerCase()\n\t\t\t)?.value;\n\t\t} )\n\t\t.filter( Boolean );\n}\n\nexport default function FormatControls( { onChange, query: { format } } ) {\n\t// 'format' is expected to be an array. If it is not an array, for example\n\t// if a user has manually entered an invalid value in the block markup,\n\t// convert it to an array to prevent JavaScript errors.\n\tconst normalizedFormats = Array.isArray( format ) ? format : [ format ];\n\n\tconst { supportedFormats } = useSelect( ( select ) => {\n\t\tconst themeSupports = select( coreStore ).getThemeSupports();\n\t\treturn {\n\t\t\tsupportedFormats: themeSupports.formats,\n\t\t};\n\t}, [] );\n\n\tconst formats = POST_FORMATS.filter( ( item ) =>\n\t\tsupportedFormats.includes( item.value )\n\t);\n\n\tconst values = normalizedFormats\n\t\t.map(\n\t\t\t( name ) => formats.find( ( item ) => item.value === name )?.label\n\t\t)\n\t\t.filter( Boolean );\n\n\tconst suggestions = formats\n\t\t.filter( ( item ) => ! normalizedFormats.includes( item.value ) )\n\t\t.map( ( item ) => item.label );\n\n\treturn (\n\t\t<FormTokenField\n\t\t\tlabel={ __( 'Formats' ) }\n\t\t\tvalue={ values }\n\t\t\tsuggestions={ suggestions }\n\t\t\tonChange={ ( newValues ) => {\n\t\t\t\tonChange( {\n\t\t\t\t\tformat: formatNamesToValues( newValues, formats ),\n\t\t\t\t} );\n\t\t\t} }\n\t\t\t__experimentalShowHowTo={ false }\n\t\t\t__experimentalExpandOnFocus\n\t\t\t__nextHasNoMarginBottom\n\t\t\t__next40pxDefaultSize\n\t\t/>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}