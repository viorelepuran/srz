"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AddFilterMenu = AddFilterMenu;
exports.default = void 0;
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
var _element = require("@wordpress/element");
var _lockUnlock = require("../../lock-unlock");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const {
  Menu
} = (0, _lockUnlock.unlock)(_components.privateApis);
function AddFilterMenu({
  filters,
  view,
  onChangeView,
  setOpenedFilter,
  triggerProps
}) {
  const inactiveFilters = filters.filter(filter => !filter.isVisible);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(Menu, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(Menu.TriggerButton, {
      ...triggerProps
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)(Menu.Popover, {
      children: inactiveFilters.map(filter => {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(Menu.Item, {
          onClick: () => {
            setOpenedFilter(filter.field);
            onChangeView({
              ...view,
              page: 1,
              filters: [...(view.filters || []), {
                field: filter.field,
                value: undefined,
                operator: filter.operators[0]
              }]
            });
          },
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(Menu.ItemLabel, {
            children: filter.name
          })
        }, filter.field);
      })
    })]
  });
}
function AddFilter({
  filters,
  view,
  onChangeView,
  setOpenedFilter
}, ref) {
  if (!filters.length || filters.every(({
    isPrimary
  }) => isPrimary)) {
    return null;
  }
  const inactiveFilters = filters.filter(filter => !filter.isVisible);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(AddFilterMenu, {
    triggerProps: {
      render: /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.Button, {
        accessibleWhenDisabled: true,
        size: "compact",
        className: "dataviews-filters-button",
        variant: "tertiary",
        disabled: !inactiveFilters.length,
        ref: ref
      }),
      children: (0, _i18n.__)('Add filter')
    },
    filters,
    view,
    onChangeView,
    setOpenedFilter
  });
}
var _default = exports.default = (0, _element.forwardRef)(AddFilter);
//# sourceMappingURL=add-filter.js.map