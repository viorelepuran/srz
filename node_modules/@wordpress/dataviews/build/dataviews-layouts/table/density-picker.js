"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DensityPicker;
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
var _element = require("@wordpress/element");
var _dataviewsContext = _interopRequireDefault(require("../../components/dataviews-context"));
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function DensityPicker() {
  const context = (0, _element.useContext)(_dataviewsContext.default);
  const view = context.view;
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_components.__experimentalToggleGroupControl, {
    __nextHasNoMarginBottom: true,
    size: "__unstable-large",
    label: (0, _i18n.__)('Density'),
    value: view.layout?.density || 'balanced',
    onChange: value => {
      context.onChangeView({
        ...view,
        layout: {
          ...view.layout,
          density: value
        }
      });
    },
    isBlock: true,
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_components.__experimentalToggleGroupControlOption, {
      value: "comfortable",
      label: (0, _i18n._x)('Comfortable', 'Density option for DataView layout')
    }, "comfortable"), /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.__experimentalToggleGroupControlOption, {
      value: "balanced",
      label: (0, _i18n._x)('Balanced', 'Density option for DataView layout')
    }, "balanced"), /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.__experimentalToggleGroupControlOption, {
      value: "compact",
      label: (0, _i18n._x)('Compact', 'Density option for DataView layout')
    }, "compact")]
  });
}
//# sourceMappingURL=density-picker.js.map