"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataFormLayout = DataFormLayout;
var _components = require("@wordpress/components");
var _element = require("@wordpress/element");
var _index = require("./index");
var _dataformContext = _interopRequireDefault(require("../components/dataform-context"));
var _isCombinedField = require("./is-combined-field");
var _normalizeFormFields = _interopRequireDefault(require("../normalize-form-fields"));
var _jsxRuntime = require("react/jsx-runtime");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function DataFormLayout({
  data,
  form,
  onChange,
  children
}) {
  const {
    fields: fieldDefinitions
  } = (0, _element.useContext)(_dataformContext.default);
  function getFieldDefinition(field) {
    const fieldId = typeof field === 'string' ? field : field.id;
    return fieldDefinitions.find(fieldDefinition => fieldDefinition.id === fieldId);
  }
  const normalizedFormFields = (0, _element.useMemo)(() => (0, _normalizeFormFields.default)(form), [form]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_components.__experimentalVStack, {
    spacing: 2,
    children: normalizedFormFields.map(formField => {
      const FieldLayout = (0, _index.getFormFieldLayout)(formField.layout)?.component;
      if (!FieldLayout) {
        return null;
      }
      const fieldDefinition = !(0, _isCombinedField.isCombinedField)(formField) ? getFieldDefinition(formField) : undefined;
      if (fieldDefinition && fieldDefinition.isVisible && !fieldDefinition.isVisible(data)) {
        return null;
      }
      if (children) {
        return children(FieldLayout, formField);
      }
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(FieldLayout, {
        data: data,
        field: formField,
        onChange: onChange
      }, formField.id);
    })
  });
}
//# sourceMappingURL=data-form-layout.js.map