/**
 * Internal dependencies
 */

export default function normalizeFormFields(form) {
  var _form$type, _form$labelPosition, _form$fields;
  let layout = 'regular';
  if (['regular', 'panel'].includes((_form$type = form.type) !== null && _form$type !== void 0 ? _form$type : '')) {
    layout = form.type;
  }
  const labelPosition = (_form$labelPosition = form.labelPosition) !== null && _form$labelPosition !== void 0 ? _form$labelPosition : layout === 'regular' ? 'top' : 'side';
  return ((_form$fields = form.fields) !== null && _form$fields !== void 0 ? _form$fields : []).map(field => {
    var _field$layout, _field$labelPosition;
    if (typeof field === 'string') {
      return {
        id: field,
        layout,
        labelPosition
      };
    }
    const fieldLayout = (_field$layout = field.layout) !== null && _field$layout !== void 0 ? _field$layout : layout;
    const fieldLabelPosition = (_field$labelPosition = field.labelPosition) !== null && _field$labelPosition !== void 0 ? _field$labelPosition : fieldLayout === 'regular' ? 'top' : 'side';
    return {
      ...field,
      layout: fieldLayout,
      labelPosition: fieldLabelPosition
    };
  });
}
//# sourceMappingURL=normalize-form-fields.js.map